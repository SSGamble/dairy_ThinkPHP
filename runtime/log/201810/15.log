---------------------------------------------------------------
[ 2018-10-15T09:11:14+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/211.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.003529s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.004209s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 211 LIMIT 1 [ RunTime:0.001152s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001702s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000536s ]
---------------------------------------------------------------
[ 2018-10-15T09:12:32+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001273s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001634s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000801s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.002517s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000590s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001112s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000384s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000559s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000323s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000431s ]
---------------------------------------------------------------
[ 2018-10-15T09:13:04+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Unity3D.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001202s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001990s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000606s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001302s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000526s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Unity3D' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001076s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Unity3D' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001859s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001209s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000541s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000305s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000372s ]
---------------------------------------------------------------
[ 2018-10-15T09:13:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/VR_AR.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001124s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002397s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000877s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001703s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000864s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'VR_AR' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001277s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'VR_AR' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002022s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001250s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000520s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000500s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000550s ]
---------------------------------------------------------------
[ 2018-10-15T09:13:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Web+Front-end.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001967s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002218s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000909s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.002008s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000990s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.002011s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002992s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001623s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000528s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000685s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000565s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000551s ]
---------------------------------------------------------------
[ 2018-10-15T09:14:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Web+Front-end.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001558s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001789s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000781s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001288s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000547s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001076s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001469s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001119s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000339s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000429s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000452s ]
---------------------------------------------------------------
[ 2018-10-15T09:14:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Web+Front-end.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001524s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001933s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000837s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001872s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000985s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001833s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.003202s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001567s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000512s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000652s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000488s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000855s ]
---------------------------------------------------------------
[ 2018-10-15T09:14:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Web+Front-end.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001380s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001219s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000575s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001203s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000514s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001185s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001528s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001026s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000331s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000446s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000338s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000385s ]
---------------------------------------------------------------
[ 2018-10-15T09:14:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Web+Front-end.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001177s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001770s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000605s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001907s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000511s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001559s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Web+Front-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001748s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001074s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000427s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000529s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000401s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000418s ]
---------------------------------------------------------------
[ 2018-10-15T09:14:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Algorithm.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001293s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001480s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000594s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001057s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000591s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Algorithm' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001058s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Algorithm' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001888s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001079s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000492s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000399s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000397s ]
---------------------------------------------------------------
[ 2018-10-15T09:14:56+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Android.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001225s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001520s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000602s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001077s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000515s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Android' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001154s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Android' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001192s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001088s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000318s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000405s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000403s ]
---------------------------------------------------------------
[ 2018-10-15T09:15:05+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001161s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001415s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000551s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001231s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001033s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000329s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000408s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000319s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000396s ]
---------------------------------------------------------------
[ 2018-10-15T09:15:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001298s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001371s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000580s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001040s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000538s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000951s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000417s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000429s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000446s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000408s ]
---------------------------------------------------------------
[ 2018-10-15T09:15:46+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/BookReview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001368s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002011s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000580s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001806s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000759s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001784s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002109s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001601s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000533s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000606s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000374s ]
---------------------------------------------------------------
[ 2018-10-15T09:15:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/FilmReview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001244s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001615s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000426s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001530s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000648s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'FilmReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001335s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'FilmReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000903s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001175s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000337s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000431s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000604s ]
---------------------------------------------------------------
[ 2018-10-15T09:15:56+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/BookReview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000919s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001424s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000409s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001096s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000462s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001191s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001247s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001009s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000380s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000443s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000360s ]
---------------------------------------------------------------
[ 2018-10-15T09:25:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001558s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001381s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000418s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001260s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000485s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001134s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000346s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000500s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000300s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000378s ]
---------------------------------------------------------------
[ 2018-10-15T09:25:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst.html?page=2
[ sql ] [ DB ] CONNECT:[ UseTime:0.000952s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001636s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000622s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001889s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 6,6 [ RunTime:0.000873s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001524s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000485s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000621s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000470s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000598s ]
---------------------------------------------------------------
[ 2018-10-15T09:26:02+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/209.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001012s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001543s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000579s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000824s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000292s ]
---------------------------------------------------------------
[ 2018-10-15T09:54:26+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001233s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001713s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000629s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001968s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000529s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001047s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000372s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000505s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000398s ]
---------------------------------------------------------------
[ 2018-10-15T10:00:19+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001257s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001401s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000585s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001252s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000547s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001001s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001234s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001045s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000394s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000492s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000338s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000381s ]
---------------------------------------------------------------
[ 2018-10-15T10:00:23+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/211.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001029s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001318s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 211 LIMIT 1 [ RunTime:0.000514s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000889s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000297s ]
---------------------------------------------------------------
[ 2018-10-15T10:00:58+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/159.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001123s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001354s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 159 LIMIT 1 [ RunTime:0.000499s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000932s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000307s ]
---------------------------------------------------------------
[ 2018-10-15T10:01:33+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/119.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001071s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002042s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 119 LIMIT 1 [ RunTime:0.000537s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000971s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000347s ]
---------------------------------------------------------------
[ 2018-10-15T10:01:50+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/89.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001159s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001376s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 89 LIMIT 1 [ RunTime:0.000434s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000966s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000281s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:02+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=2
[ sql ] [ DB ] CONNECT:[ UseTime:0.001478s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001863s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000573s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001721s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 6,6 [ RunTime:0.000764s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001739s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 6,6 [ RunTime:0.002114s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001377s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000501s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000747s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000660s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000614s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:06+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=3
[ sql ] [ DB ] CONNECT:[ UseTime:0.001044s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001401s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000490s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001124s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 12,6 [ RunTime:0.000786s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001090s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 12,6 [ RunTime:0.001504s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000973s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000399s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000464s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000319s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000371s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:09+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/77.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001143s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001326s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 77 LIMIT 1 [ RunTime:0.000458s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000932s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000280s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:32+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=4
[ sql ] [ DB ] CONNECT:[ UseTime:0.001163s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001844s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000798s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001748s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 18,6 [ RunTime:0.000886s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001702s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 18,6 [ RunTime:0.002269s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001571s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000684s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000667s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000468s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000560s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:35+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=5
[ sql ] [ DB ] CONNECT:[ UseTime:0.001329s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002229s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000564s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001216s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 24,6 [ RunTime:0.000728s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001400s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 24,6 [ RunTime:0.001753s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001235s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000366s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000473s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000379s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:41+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=3
[ sql ] [ DB ] CONNECT:[ UseTime:0.001007s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001333s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000508s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001213s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 12,6 [ RunTime:0.000550s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.000967s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 12,6 [ RunTime:0.001189s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000968s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000724s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000608s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000420s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000462s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:43+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=2
[ sql ] [ DB ] CONNECT:[ UseTime:0.001172s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001489s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000544s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001130s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 6,6 [ RunTime:0.000614s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001140s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 6,6 [ RunTime:0.001376s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001193s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000399s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000520s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000461s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000450s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:46+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html?page=1
[ sql ] [ DB ] CONNECT:[ UseTime:0.001241s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001533s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000520s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001383s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000661s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001242s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001442s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001235s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000423s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000559s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000445s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000423s ]
---------------------------------------------------------------
[ 2018-10-15T10:02:56+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/FilmReview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000972s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001352s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000536s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001160s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000524s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'FilmReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001224s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'FilmReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000875s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001120s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000391s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000437s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000345s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000463s ]
---------------------------------------------------------------
[ 2018-10-15T10:03:03+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/145.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001098s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001396s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 145 LIMIT 1 [ RunTime:0.000684s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001126s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000330s ]
---------------------------------------------------------------
[ 2018-10-15T10:46:01+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.002998s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.003081s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000571s ]
---------------------------------------------------------------
[ 2018-10-15T10:46:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ sql ] [ DB ] CONNECT:[ UseTime:0.001326s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001813s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000790s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.002292s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000710s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001187s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000426s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000626s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000509s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000411s ]
---------------------------------------------------------------
[ 2018-10-15T10:46:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001043s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001457s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001852s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc LIMIT 5 [ RunTime:0.000478s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001310s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000932s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001066s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000400s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000323s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000404s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001001s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000244s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001151s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000819s ]
---------------------------------------------------------------
[ 2018-10-15T10:48:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001066s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001376s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000314s ]
---------------------------------------------------------------
[ 2018-10-15T10:49:35+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001006s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001204s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000276s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001108s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('不盲目倾向于弱者，不过分苛刻于强者\r' , '# 不盲目倾向于弱者，不过分苛刻于强者\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/181015/263F60kiCH.png)\r\n\r\n认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。\r\n\r\n然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。\r\n\r\n细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。' , 'Essay' , 22 , '2018-10-15') [ RunTime:0.000535s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000950s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Essay' [ RunTime:0.000437s ]
---------------------------------------------------------------
[ 2018-10-15T10:49:36+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ sql ] [ DB ] CONNECT:[ UseTime:0.000953s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002063s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000635s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001148s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000529s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001041s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000397s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000507s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000349s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000370s ]
---------------------------------------------------------------
[ 2018-10-15T10:49:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001376s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001392s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001796s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc LIMIT 5 [ RunTime:0.000447s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001153s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000488s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000500s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000883s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000391s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000511s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000382s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001072s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001441s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000811s ]
---------------------------------------------------------------
[ 2018-10-15T10:49:48+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001198s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001290s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001641s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc LIMIT 5 [ RunTime:0.000528s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000954s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000489s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001139s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000271s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000479s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000332s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000388s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001018s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000222s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001648s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.001006s ]
---------------------------------------------------------------
[ 2018-10-15T10:49:54+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001191s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001898s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000372s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001181s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001642s ]
---------------------------------------------------------------
[ 2018-10-15T10:50:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/222
[ sql ] [ DB ] CONNECT:[ UseTime:0.000983s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001371s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000385s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001017s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000281s ]
---------------------------------------------------------------
[ 2018-10-15T10:50:45+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/222
[ sql ] [ DB ] CONNECT:[ UseTime:0.001060s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001412s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000399s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000875s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000290s ]
---------------------------------------------------------------
[ 2018-10-15T11:02:45+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000999s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001289s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000363s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000991s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001307s ]
---------------------------------------------------------------
[ 2018-10-15T11:03:03+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001119s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001960s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001370s ]
---------------------------------------------------------------
[ 2018-10-15T11:10:54+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001329s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001418s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001763s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc LIMIT 5 [ RunTime:0.000532s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001230s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000674s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001083s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000455s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000654s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000492s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000393s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001071s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001163s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000738s ]
---------------------------------------------------------------
[ 2018-10-15T11:12:12+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001062s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002475s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001577s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc LIMIT 5 [ RunTime:0.000471s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000974s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000608s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001046s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000278s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000388s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000301s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000386s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000958s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000243s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001162s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000816s ]
---------------------------------------------------------------
[ 2018-10-15T11:20:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001242s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001430s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001445s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc LIMIT 5 [ RunTime:0.000425s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000932s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000350s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000529s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000998s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000353s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000399s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000279s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000408s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001043s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000224s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001053s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000757s ]
---------------------------------------------------------------
[ 2018-10-15T11:20:47+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001082s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001555s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001562s ]
---------------------------------------------------------------
[ 2018-10-15T11:21:23+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001073s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001406s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000380s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000949s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001227s ]
---------------------------------------------------------------
[ 2018-10-15T11:21:50+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001353s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001680s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 168 LIMIT 1 [ RunTime:0.000456s ]
---------------------------------------------------------------
[ 2018-10-15T11:21:55+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000948s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002170s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 65 LIMIT 1 [ RunTime:0.000506s ]
---------------------------------------------------------------
[ 2018-10-15T11:21:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000882s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001285s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 63 LIMIT 1 [ RunTime:0.000500s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001042s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001271s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000423s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:05+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000971s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001374s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000535s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:08+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001114s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001449s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 62 LIMIT 1 [ RunTime:0.000462s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:18+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/61
[ sql ] [ DB ] CONNECT:[ UseTime:0.001371s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001411s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000458s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000951s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000286s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:29+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/61
[ sql ] [ DB ] CONNECT:[ UseTime:0.001201s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001440s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000513s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000885s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000280s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:43+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/61.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001003s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002038s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000489s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000331s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000930s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000381s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` IS NULL LIMIT 1 [ RunTime:0.000238s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000293s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=61,`p_id`=NULL,`title`='再见！火影\r',`content`='# 再见！火影\r\n　　直到这一刻，我才清楚的感觉到了时间的流逝，这一刻给我的感觉甚至远比高考给我的感触大，12年的青春，曾经一起共度青春的少年，感谢你们，是你们让我懂得了梦想的坚持，是你们让我明白了伙伴的重要，是你们教会了我应该坚持自己的梦想并为之努力， 是你们和我一起在追逐梦想的道路上让我不再孤单。\r\n\r\n　　第七班，谢谢你们，是你们让我明白了伙伴的意义。\r\n\r\n　　自来也，谢谢你，是你让我听到了那番作为英雄的豪言壮语，只是有些许遗憾你的承诺，再见。\r\n\r\n　　纲手，谢谢你，你的打赌终于也算是赢了一次，或许这也是你这一辈子最后悔下的注吧。\r\n\r\n　　鹿丸，谢谢你，同时和你一起谢谢你的老师，阿斯玛，至今我的脑海中仍然是: 雨中，那个平时充满着懒散的少年，拿起了一支烟，随后一缕白烟在雨中升起的场景，也是从那一刻开始，你承担起了你老师的责任，明白了到底什么才是真正的玉，或许这就是我们平时说的在一夜之间长大了吧。\r\n\r\n　　宇智波鼬，谢谢你，是你让我看到了哥哥对弟弟那种深沉的爱，看到了在大义和感情之间的选择，我真的很佩服你。\r\n\r\n　　日向宁次，谢谢你，你是一个真正的天才，你的青春是永垂不朽的。\r\n\r\n　　我爱罗，蝎，凯，小李，佩恩，晓，鹰小队，伊鲁卡，丁次，波风水门，三代目，宇智波斑，带土。。。还有所有的你们谢谢你们，陪我走过了这12年，对你们来说是15年中的12年，对我来说是我从懂事时到我成年然后至今甚至是我之后的所有日子。\r\n\r\n　　最后，第七班，不想说谢谢，但后会有期。虽然对我来说你们是和我的记忆一起存在的或许是50年60年还是更久，我们会一起走过幼年，童年，青年，壮年，中年，老年，6岁我们相遇，18岁我们后会有期，之后的日子我会带着你们给予我的精神，带给我的感动与回忆共同前进，我会带着我们共同的意志实现我的梦想。\r\n\r\n　　可不能只是你当上了火影哦，路飞和我都不会落后的！\r\n\r\n　　此去不经年，后会终有期。\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/JA4h0KELmH.jpg)\r\n\r\n',`groups`='Essay',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 61 [ RunTime:0.000504s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000994s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Essay' [ RunTime:0.000370s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.000893s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Essay' [ RunTime:0.000366s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/61.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001244s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001704s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000504s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001256s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000284s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ sql ] [ DB ] CONNECT:[ UseTime:0.001192s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001344s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000623s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001130s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000538s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001047s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000407s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000440s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000343s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000394s ]
---------------------------------------------------------------
[ 2018-10-15T11:22:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001427s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.003295s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000698s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001756s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000741s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001784s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001684s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001049s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000366s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000425s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000366s ]
---------------------------------------------------------------
[ 2018-10-15T11:23:05+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/222
[ sql ] [ DB ] CONNECT:[ UseTime:0.001398s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001987s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000775s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001728s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000521s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:04+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000958s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001785s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.002003s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000529s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001058s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000540s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000855s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000371s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000402s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000453s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001069s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000298s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001095s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000683s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001359s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001629s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000433s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:14+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001189s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001589s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001667s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000567s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001459s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000464s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000567s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001063s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000412s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000496s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000306s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000397s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001139s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000261s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001347s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000691s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/222
[ sql ] [ DB ] CONNECT:[ UseTime:0.000995s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001476s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000482s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000887s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000291s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:32+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001137s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001461s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000510s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000330s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001098s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000390s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000314s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=222,`p_id`=24,`title`='不盲目倾向于弱者，不过分苛刻于强者\r',`content`='# 不盲目倾向于弱者，不过分苛刻于强者\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/181015/263F60kiCH.png)\r\n\r\n认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。\r\n\r\n然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。\r\n\r\n细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 222 [ RunTime:0.000530s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.001245s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Essay' [ RunTime:0.000377s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000921s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=1  WHERE  `groups` = 'Essays' [ RunTime:0.000411s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:33+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000906s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001277s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000485s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000971s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000453s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000965s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002639s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000506s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001437s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000653s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001466s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001844s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001418s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000386s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000493s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000377s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000384s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:45+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001080s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001334s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001249s ]
---------------------------------------------------------------
[ 2018-10-15T11:25:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/200
[ sql ] [ DB ] CONNECT:[ UseTime:0.000996s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001557s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 200 LIMIT 1 [ RunTime:0.000540s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000876s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000273s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/200.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001159s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001407s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 200 LIMIT 1 [ RunTime:0.000480s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 200 LIMIT 1 [ RunTime:0.000368s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001027s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000298s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000340s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=200,`p_id`=24,`title`='天命奇御\r',`content`='# 天命奇御\r\n[TOC]\r\n\r\n>这游戏主在支线，副才主线，切记。\r\n\r\n## 一周目\r\n\r\n因为偏好，我只攻略了宓玥，所以对于另外两个妹子刻意的疏远了，与她们相关的任务能避则避，也很少做支线，这也导致了我的剧情线相当的不完整，武林盟主结局，阻止了改朝换代，但除了我和宓玥在一起外，其他角色死了大半，师父也没了，妹子也死了，摩尼教罗胖子反了，其余门派之间几乎全是内斗... 没错这已经是结局了，江湖还是一片混乱，我的错。\r\n\r\n### 先说优点吧：\r\n1. 支线特别丰富，直接影响了结局，若不做剧情将极其的不完整，比如结局连主角身世都不知道。\r\n2. 战斗场景个人认为比古剑好，功法，武学可选择的范围比较多。\r\n3. 尽管是配角也有属于他们自己的人物故事，可解锁人物列传，严喜，怒，哀，乐那个就不错。\r\n4. 游戏探索在几款同类型国产中算是不错的了，办案推理等都给了玩家足够的空间，不会只在看「电影」。\r\n5. 八卦系统触发支线，在山水和江湖机遇中领悟武学，随时随地的出示系统(战斗中也可出示物品)，这些玩法都很有趣。\r\n\r\n\r\n### 再来谈谈缺点：\r\n1. wegame 中有些地方会有 bug，比如李义见的黑屏，求药那跳跳跳，跳出了场景外等。但这都无伤大雅，作为一个程序员当然深知一个道理 bug 是无法避免的。\r\n2. 配音问题，这个就比较尴尬了，前期时有时无，后期直接全没了，这...\r\n3. 剧情相比仙剑，古剑，侠客等略显单薄，在主剧情这么单薄的情况下如果再不做支线，吓 skr 人了。\r\n4. 3 条主线对应了 3 个女主，基本无交集，有点像 3 个人写出来的 3 个独立的剧本。\r\n5. 队友系统极其无语，好像只能带一个，而且我每要去做另一个任务就要赶离上一个队友，说好的一生一起走呢。\r\n\r\n\r\n------------\r\n**OK，要开始二周目了，这次，所有妹子我全要，大家一个都不能死！！！**\r\n',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 200 [ RunTime:0.000583s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Mess' LIMIT 1 [ RunTime:0.001242s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=3  WHERE  `groups` = 'Mess' [ RunTime:0.000445s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.001180s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=2  WHERE  `groups` = 'Essays' [ RunTime:0.000546s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/200.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001032s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001583s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 200 LIMIT 1 [ RunTime:0.000636s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001118s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000319s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/170
[ sql ] [ DB ] CONNECT:[ UseTime:0.001016s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001357s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000496s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000843s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000310s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:17+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/170.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000983s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001290s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000388s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000514s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001460s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000466s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000591s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000396s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=170,`p_id`=1,`title`='山地车购买指南\r',`content`='# 山地车购买指南\r\n*-- Captain 邵*\r\n>最近母亲想要买一辆自行车，致母亲的购买指南。\r\n\r\n### 1. 你到底是想要一款性能卓越的车，或只是单纯贵的车？\r\n\r\n如果是前者，我不建议买那么贵的车，为什么呢？根据一些山地车发烧友的建议，若是真正想在性能上有突破，真正的玩家是不会买整车的，他们会根据越野强度(XC、AM、FR、DH)自己组装，前叉，车架，制动系统，传动系统等，这些名词没听说过吧，那很明显你不属于这一类人，那也证明你并不是真正追求高性能的人。当然，我也不是，我也没有能够组车的知识储备，那我们只有买整车了吧。从购买整车开始，我们注定是一个业余玩家，或者说是一个新手，入门级玩家，那如此贵的整车，有必要吗？在别人看来就是人傻钱多。\r\n\r\n如果你只是单纯想买特别贵的车，那以上都是废话，直接去店里拿最贵的一辆就行了。不用担心，他的性能一定比一两千的好。一分钱的一分货不一定对，但价值一万与一千肯定是有差距的，但这个差距对于你来说，你知道吗？如果不告诉你我耳机的价格，你肯定觉得，他和家里面那个一样吧。\r\n\r\n个人觉得理性的做法为，先买一辆普通的山地车，等你骑着他走过了一些地方，对他有了一定的认识后，再根据自己的财力与实际需求自行组装出属于自己的车。\r\n\r\n其实我们目前的体力，花在骑行上的时间，骑行的路段等，这实在是配不上一辆好车。\r\n\r\n**建议你不要陷入器材党的怪圈中，在路上寻找乐趣而不是在这辆车多少钱上，发动机才是最重要的。\r\n**\r\n\r\n### 2. 我理想中的车\r\n| 型号  |  价位 |\r\n| ------------ | ------------ |\r\n|美利达-公爵600|￥2400|\r\n|GIANT捷安特-ATX777|￥2800|\r\n|美利达-挑战者300|￥3000|\r\n|GIANT捷安特-XTC777|￥5000|\r\n|美利达-挑战者800|￥5000|\r\n\r\n![美利达 公爵600](http://images.360bike.net/images/batch/20161223/a1bc22acc28e6539.jpg)\r\n*美利达 公爵600*\r\n\r\n![GIANT捷安特-ATX777](http://p0tymq1rr.bkt.clouddn.com/daily/180318/9HI9a50120.png)\r\n*GIANT捷安特-ATX777*\r\n\r\n![挑战者 300](http://p0tymq1rr.bkt.clouddn.com/daily/180318/HbildGGlCH.png)\r\n*挑战者 300*\r\n\r\n![GIANT捷安特-XTC777](http://p0tymq1rr.bkt.clouddn.com/daily/180318/J7Aef86a7f.png)\r\n*GIANT捷安特-XTC777*\r\n\r\n**如果是我，我会选择 [公爵600]或[ATX777]。**\r\n\r\n**若你实在是看不起，那就XTC777或直接去店里选择你想要的价位的车吧，我实在是不知道这些配件的价值（门外汉吧）。**\r\n\r\n### 3. 尺寸选择\r\n![车架](https://img30.360buyimg.com/popWaterMark/jfs/t7687/173/3428042380/541641/1eb94dc4/59bf1561Nf0582825.jpg \"车架\")',`groups`='Default',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 170 [ RunTime:0.000659s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Mess' LIMIT 1 [ RunTime:0.001124s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=2  WHERE  `groups` = 'Mess' [ RunTime:0.000385s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001000s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=11  WHERE  `groups` = 'Default' [ RunTime:0.000418s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/170.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000993s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001360s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000495s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001064s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000334s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:21+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/167
[ sql ] [ DB ] CONNECT:[ UseTime:0.001372s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002552s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 167 LIMIT 1 [ RunTime:0.000587s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001317s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000371s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/167
[ sql ] [ DB ] CONNECT:[ UseTime:0.000901s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001322s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 167 LIMIT 1 [ RunTime:0.000432s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000915s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000311s ]
---------------------------------------------------------------
[ 2018-10-15T11:26:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/164
[ sql ] [ DB ] CONNECT:[ UseTime:0.000950s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001502s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000386s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000909s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000275s ]
---------------------------------------------------------------
[ 2018-10-15T11:27:12+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/167.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001084s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001315s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 167 LIMIT 1 [ RunTime:0.000394s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 167 LIMIT 1 [ RunTime:0.000325s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000352s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000321s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=167,`p_id`=1,`title`='山地车\r',`content`='# 山地车\r\n\r\n## 1.山地车的分类\r\n>山地车骑行根据越野强度可以分为XC、AM、FR、DH 等\r\n\r\n普通越野 XC (Cross Country)\r\n轻度越野车型，有很强的爬坡性能，用于普通的山地越野，也是山地车中最轻便最实用的车型，较追求轻量化与高速通过性。竞速车种，竞技性非常强的一个车种，世界上主要的山地车比赛也都是以XC为主。从骑行环境来说可能80%是上坡及平地，下坡对XC来说只是一种过渡。\r\n\r\n林道 TR (Trail)\r\n骑行路线多为林间小道，因此得名，注重骑行的流畅性，多为全避震车型。\r\n\r\n全山地 AM (All Moutain)\r\n正如其名，车辆性能平均，连续爬坡或下坡都能胜任，但都不专长，对于只想拥有一辆车但却能骑更多地形或想进行长途越野旅行的人来说是最佳选择。\r\n\r\n自由骑 FR　(Free Ride)\r\n一种不拘泥于地形限制的技巧性骑行，倾向于高速高强度，借助自然地形或人工修筑的跳台来进行很大的腾越，喜欢在空中各种特技动作。\r\n\r\n速降 DH (Down Hill)\r\n专注与下坡与大落差，多用双肩前叉，车架强度高。\r\n',`groups`='Default',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 167 [ RunTime:0.000643s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Mess' LIMIT 1 [ RunTime:0.001015s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=1  WHERE  `groups` = 'Mess' [ RunTime:0.000325s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001017s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=12  WHERE  `groups` = 'Default' [ RunTime:0.000426s ]
---------------------------------------------------------------
[ 2018-10-15T11:27:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/167.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000971s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001801s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 167 LIMIT 1 [ RunTime:0.000401s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001137s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000344s ]
---------------------------------------------------------------
[ 2018-10-15T11:27:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/updatenote/id/164.html
[ error ] [8]未定义数组下标: 1
---------------------------------------------------------------
[ 2018-10-15T11:28:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001019s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001286s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000414s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001046s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000408s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001069s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001606s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001089s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000329s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000415s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000386s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000962s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001323s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000478s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001369s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000638s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001248s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001867s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001254s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000426s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000490s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000329s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000450s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Default.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000856s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002130s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000534s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001107s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000489s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Default' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001073s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Default' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001576s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001074s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000357s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000417s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000364s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000383s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:21+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001096s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001234s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001316s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000415s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001033s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000468s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000968s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000343s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000413s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000324s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000224s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001241s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000647s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001709s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001958s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.002497s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000678s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001554s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000470s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000877s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001732s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000509s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.001336s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000465s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000584s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001764s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000384s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.002227s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.001229s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000931s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001299s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001304s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:33+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000985s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001282s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001315s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:38+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000966s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001306s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 23  AND `id` > 2 ORDER BY date desc [ RunTime:0.001782s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000885s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001335s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001112s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/164
[ sql ] [ DB ] CONNECT:[ UseTime:0.001178s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.003198s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000681s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001502s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000938s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:50+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/164.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000958s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001296s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000358s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000922s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000300s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000307s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=164,`p_id`=24,`title`='网贷与 P2P\r',`content`='# 网贷与 P2P\r\n>网贷其实就是互联网金融网路贷款理财的简称\r\n\r\n举个简单的例子，以前你如果急用钱需要去银行贷款，但是银行贷款有门槛，而且流程复杂，但是网贷就不一样了，我们每个人都有闲钱，但是同时还有另一批人急用钱，然后就有一个担保公司出来做个平台，把你的钱放在这个平台，给你一定的利息，然后平台再用你的钱，借给需要贷款的人，流程简单，贷款门槛很低，而且利润丰厚，很多网贷平台赚的盆满钵满。\r\n\r\n>p2p 即是互联网金融点对点借贷平台,是英文person-to-person（或peer-to-peer）的缩写，意即个人对个人(伙伴对伙伴)。又称点对点网络借款，是一种将小额资金聚集起来借贷给有资金需求人群的一种民间小额借贷模式。属于互联网金融（ITFIN）产品的一种。属于民间小额借贷，借助互联网、移动互联网技术的网络信贷平台及相关理财行为、金融服务。\r\n\r\n有人问了，为啥银行不能降低贷款门槛，来做这个呢？因为银行要以稳为主，而且国家有规定，银行贷款利率不能超过一定的数额，所以即使银行想干也不能干，不过有的银行偷偷的把钱放在网贷平台的也不会让你知道。\r\n\r\n但是虽然利润丰厚，但是个人借给个人也有很大风险，比如个人借的钱不还了，或者这种平台拿到你的钱跑路了，等等，很多 P2P 理财平台倒闭的不再少数。所以，近两年国家大力整治互联网金融，控制风险。\r\n\r\n当然，每个平台贷款业务各不一样，有的主营做车贷、企业贷等等。\r\n\r\n拿友金所举例子，友金所的钱不是借给个人，他们的主要业务是借给小微企业，小微企业贷款都是有资产抵押的，所以风险上来说可控，加上中间有银行资金存管，用友网络旗下的子公司，所以风险是可控的。\r\n\r\n>B2B（也有写成 BTB，是Business-to-Business的缩写）是指企业与企业之间通过专用网络或Internet，进行数据信息的交换、传递，开展交易活动的商业模式。\r\n\r\n电子商务是现代 B2B marketing的一种具体主要的表现形式。B2B 是指进行电子商务交易的供需双方都是商家（或企业、公司），她（他）们使用了互联网的技术或各种商务网络平台，完成商务交易的过程。\r\n\r\n含有三要素：\r\n⒈ 买卖：B2B 网站或移动平台为消费者提供质优价廉的商品，吸引消费者购买的同时促使更多商家的入驻。\r\n⒉ 合作：与物流公司建立合作关系，为消费者的购买行为提供最终保障，这是 B2B 平台硬性条件之一。\r\n⒊ 服务：物流主要是为消费者提供购买服务，从而实现再一次的交易。',`groups`='Essays',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 164 [ RunTime:0.000510s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Mess' LIMIT 1 [ RunTime:0.001109s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=0  WHERE  `groups` = 'Mess' [ RunTime:0.000362s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000891s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=3  WHERE  `groups` = 'Essays' [ RunTime:0.000465s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/164.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000889s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001203s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000404s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000833s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000346s ]
---------------------------------------------------------------
[ 2018-10-15T11:29:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Default.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000993s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001402s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000423s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001393s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000476s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Default' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001013s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Default' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001413s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001041s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000335s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000429s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000316s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000377s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:01+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000926s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001477s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001823s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000407s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000943s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000386s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000532s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001010s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000381s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000280s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000404s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001536s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000246s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001208s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000813s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:04+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001026s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001394s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001811s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:22+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000958s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001299s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 20  AND `id` > 2 ORDER BY date desc [ RunTime:0.001388s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001001s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001287s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000352s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000998s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001245s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:38+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001503s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001859s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000609s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001823s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000659s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001773s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002768s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001329s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000381s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000450s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000396s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001118s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001375s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000460s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001209s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000509s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001135s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001757s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001236s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000386s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000458s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000441s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000966s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001764s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000641s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001366s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000477s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001304s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001966s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001241s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000375s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000960s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000582s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000603s ]
---------------------------------------------------------------
[ 2018-10-15T11:30:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001326s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001594s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001427s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000371s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000955s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000290s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000500s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000861s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000402s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000421s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000306s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000372s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000990s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000221s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001010s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000568s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:01+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000905s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001457s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001186s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:06+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000957s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001390s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001453s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:11+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001094s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001459s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001305s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:14+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/164
[ sql ] [ DB ] CONNECT:[ UseTime:0.001246s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001647s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000544s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001142s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000305s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/164.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001145s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001395s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000435s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000816s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000297s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000407s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000298s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=164,`p_id`=1,`title`='网贷与 P2P\r',`content`='# 网贷与 P2P\r\n>网贷其实就是互联网金融网路贷款理财的简称\r\n\r\n举个简单的例子，以前你如果急用钱需要去银行贷款，但是银行贷款有门槛，而且流程复杂，但是网贷就不一样了，我们每个人都有闲钱，但是同时还有另一批人急用钱，然后就有一个担保公司出来做个平台，把你的钱放在这个平台，给你一定的利息，然后平台再用你的钱，借给需要贷款的人，流程简单，贷款门槛很低，而且利润丰厚，很多网贷平台赚的盆满钵满。\r\n\r\n>p2p 即是互联网金融点对点借贷平台,是英文person-to-person（或peer-to-peer）的缩写，意即个人对个人(伙伴对伙伴)。又称点对点网络借款，是一种将小额资金聚集起来借贷给有资金需求人群的一种民间小额借贷模式。属于互联网金融（ITFIN）产品的一种。属于民间小额借贷，借助互联网、移动互联网技术的网络信贷平台及相关理财行为、金融服务。\r\n\r\n有人问了，为啥银行不能降低贷款门槛，来做这个呢？因为银行要以稳为主，而且国家有规定，银行贷款利率不能超过一定的数额，所以即使银行想干也不能干，不过有的银行偷偷的把钱放在网贷平台的也不会让你知道。\r\n\r\n但是虽然利润丰厚，但是个人借给个人也有很大风险，比如个人借的钱不还了，或者这种平台拿到你的钱跑路了，等等，很多 P2P 理财平台倒闭的不再少数。所以，近两年国家大力整治互联网金融，控制风险。\r\n\r\n当然，每个平台贷款业务各不一样，有的主营做车贷、企业贷等等。\r\n\r\n拿友金所举例子，友金所的钱不是借给个人，他们的主要业务是借给小微企业，小微企业贷款都是有资产抵押的，所以风险上来说可控，加上中间有银行资金存管，用友网络旗下的子公司，所以风险是可控的。\r\n\r\n>B2B（也有写成 BTB，是Business-to-Business的缩写）是指企业与企业之间通过专用网络或Internet，进行数据信息的交换、传递，开展交易活动的商业模式。\r\n\r\n电子商务是现代 B2B marketing的一种具体主要的表现形式。B2B 是指进行电子商务交易的供需双方都是商家（或企业、公司），她（他）们使用了互联网的技术或各种商务网络平台，完成商务交易的过程。\r\n\r\n含有三要素：\r\n⒈ 买卖：B2B 网站或移动平台为消费者提供质优价廉的商品，吸引消费者购买的同时促使更多商家的入驻。\r\n⒉ 合作：与物流公司建立合作关系，为消费者的购买行为提供最终保障，这是 B2B 平台硬性条件之一。\r\n⒊ 服务：物流主要是为消费者提供购买服务，从而实现再一次的交易。',`groups`='Default',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 164 [ RunTime:0.000551s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.001198s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=2  WHERE  `groups` = 'Essays' [ RunTime:0.000411s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000882s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Default' [ RunTime:0.000336s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/164.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001344s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001867s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 164 LIMIT 1 [ RunTime:0.000561s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001404s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000455s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001067s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001260s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001687s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000391s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001046s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000297s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000476s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001054s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000447s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000386s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000960s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000237s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001109s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000666s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:27+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001152s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001526s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001442s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001019s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001215s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001409s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000975s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001516s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000373s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000998s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001217s ]
---------------------------------------------------------------
[ 2018-10-15T11:31:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000983s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002368s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000512s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001047s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000459s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.000995s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001555s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001071s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000373s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000508s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000315s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000398s ]
---------------------------------------------------------------
[ 2018-10-15T11:32:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000936s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001499s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001510s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000470s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000894s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000376s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000534s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001082s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000343s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000474s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000308s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000515s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.020697s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001224s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000721s ]
---------------------------------------------------------------
[ 2018-10-15T11:32:15+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001017s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001303s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%火影%' OR `content` LIKE '%火影%' ) ORDER BY date desc [ RunTime:0.007645s ]
---------------------------------------------------------------
[ 2018-10-15T11:32:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/61
[ sql ] [ DB ] CONNECT:[ UseTime:0.001347s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001675s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000472s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001079s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000471s ]
---------------------------------------------------------------
[ 2018-10-15T11:32:33+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/61.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001210s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001260s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000538s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000293s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000895s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000322s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000322s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=61,`p_id`=24,`title`='再见！火影\r',`content`='# 再见！火影\r\n　　直到这一刻，我才清楚的感觉到了时间的流逝，这一刻给我的感觉甚至远比高考给我的感触大，12年的青春，曾经一起共度青春的少年，感谢你们，是你们让我懂得了梦想的坚持，是你们让我明白了伙伴的重要，是你们教会了我应该坚持自己的梦想并为之努力， 是你们和我一起在追逐梦想的道路上让我不再孤单。\r\n\r\n　　第七班，谢谢你们，是你们让我明白了伙伴的意义。\r\n\r\n　　自来也，谢谢你，是你让我听到了那番作为英雄的豪言壮语，只是有些许遗憾你的承诺，再见。\r\n\r\n　　纲手，谢谢你，你的打赌终于也算是赢了一次，或许这也是你这一辈子最后悔下的注吧。\r\n\r\n　　鹿丸，谢谢你，同时和你一起谢谢你的老师，阿斯玛，至今我的脑海中仍然是: 雨中，那个平时充满着懒散的少年，拿起了一支烟，随后一缕白烟在雨中升起的场景，也是从那一刻开始，你承担起了你老师的责任，明白了到底什么才是真正的玉，或许这就是我们平时说的在一夜之间长大了吧。\r\n\r\n　　宇智波鼬，谢谢你，是你让我看到了哥哥对弟弟那种深沉的爱，看到了在大义和感情之间的选择，我真的很佩服你。\r\n\r\n　　日向宁次，谢谢你，你是一个真正的天才，你的青春是永垂不朽的。\r\n\r\n　　我爱罗，蝎，凯，小李，佩恩，晓，鹰小队，伊鲁卡，丁次，波风水门，三代目，宇智波斑，带土。。。还有所有的你们谢谢你们，陪我走过了这12年，对你们来说是15年中的12年，对我来说是我从懂事时到我成年然后至今甚至是我之后的所有日子。\r\n\r\n　　最后，第七班，不想说谢谢，但后会有期。虽然对我来说你们是和我的记忆一起存在的或许是50年60年还是更久，我们会一起走过幼年，童年，青年，壮年，中年，老年，6岁我们相遇，18岁我们后会有期，之后的日子我会带着你们给予我的精神，带给我的感动与回忆共同前进，我会带着我们共同的意志实现我的梦想。\r\n\r\n　　可不能只是你当上了火影哦，路飞和我都不会落后的！\r\n\r\n　　此去不经年，后会终有期。\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/JA4h0KELmH.jpg)\r\n\r\n',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 61 [ RunTime:0.000533s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.001186s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=14  WHERE  `groups` = 'Essay' [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.001012s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=3  WHERE  `groups` = 'Essays' [ RunTime:0.000368s ]
---------------------------------------------------------------
[ 2018-10-15T11:32:34+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/61.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001071s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001579s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 61 LIMIT 1 [ RunTime:0.000395s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000971s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000295s ]
---------------------------------------------------------------
[ 2018-10-15T11:33:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001067s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001315s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000500s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001152s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000540s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001251s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001775s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001493s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000477s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000515s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000399s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000490s ]
---------------------------------------------------------------
[ 2018-10-15T11:33:04+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000971s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001462s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001563s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000421s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001050s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.002199s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000731s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000983s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000664s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000486s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001397s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000416s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001463s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000859s ]
---------------------------------------------------------------
[ 2018-10-15T11:40:42+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001073s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001185s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000348s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001474s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001371s ]
---------------------------------------------------------------
[ 2018-10-15T11:40:49+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001359s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001827s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 63 LIMIT 1 [ RunTime:0.000508s ]
---------------------------------------------------------------
[ 2018-10-15T11:40:52+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000941s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001284s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 168 LIMIT 1 [ RunTime:0.000410s ]
---------------------------------------------------------------
[ 2018-10-15T11:41:25+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001270s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001693s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 62 LIMIT 1 [ RunTime:0.000441s ]
---------------------------------------------------------------
[ 2018-10-15T11:41:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001586s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002170s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000609s ]
---------------------------------------------------------------
[ 2018-10-15T11:42:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001154s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001903s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%愿你们幸福%' OR `content` LIKE '%愿你们幸福%' ) ORDER BY date desc [ RunTime:0.007898s ]
---------------------------------------------------------------
[ 2018-10-15T11:42:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/60
[ sql ] [ DB ] CONNECT:[ UseTime:0.001090s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001588s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000422s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000315s ]
---------------------------------------------------------------
[ 2018-10-15T11:42:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/60
[ sql ] [ DB ] CONNECT:[ UseTime:0.001110s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001405s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001051s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000279s ]
---------------------------------------------------------------
[ 2018-10-15T11:43:00+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/60
[ sql ] [ DB ] CONNECT:[ UseTime:0.001645s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002136s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000381s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001287s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000301s ]
---------------------------------------------------------------
[ 2018-10-15T11:43:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/60
[ sql ] [ DB ] CONNECT:[ UseTime:0.001238s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001499s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000504s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001035s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000330s ]
---------------------------------------------------------------
[ 2018-10-15T11:44:12+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/60.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001155s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001517s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000400s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000384s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001273s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Personal' LIMIT 1 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Personal' LIMIT 1 [ RunTime:0.000439s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=60,`p_id`=22,`title`='愿你们幸福\r',`content`='# 愿你们幸福\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/4Ec8g7ddeg.png)',`groups`='Personal',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 60 [ RunTime:0.000893s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essay' LIMIT 1 [ RunTime:0.001785s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Essay' [ RunTime:0.000466s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Personal' LIMIT 1 [ RunTime:0.001046s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=1  WHERE  `groups` = 'Personal' [ RunTime:0.000513s ]
---------------------------------------------------------------
[ 2018-10-15T11:44:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/60.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000872s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002372s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 60 LIMIT 1 [ RunTime:0.000375s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000877s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000347s ]
---------------------------------------------------------------
[ 2018-10-15T11:44:26+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001199s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001531s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001445s ]
---------------------------------------------------------------
[ 2018-10-15T11:44:34+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001077s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001556s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000593s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000983s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001581s ]
---------------------------------------------------------------
[ 2018-10-15T11:47:43+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001155s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001362s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001559s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000393s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000941s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000520s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001042s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000292s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001016s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000272s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001098s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000632s ]
---------------------------------------------------------------
[ 2018-10-15T11:47:50+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001078s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001162s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000422s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001055s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001281s ]
---------------------------------------------------------------
[ 2018-10-15T11:49:54+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.002129s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001976s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 21  AND `id` > 2 ORDER BY date desc [ RunTime:0.002184s ]
---------------------------------------------------------------
[ 2018-10-15T11:50:15+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001492s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002024s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.002046s ]
---------------------------------------------------------------
[ 2018-10-15T11:50:56+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001004s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001450s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 23  AND `id` > 2 ORDER BY date desc [ RunTime:0.001158s ]
---------------------------------------------------------------
[ 2018-10-15T11:50:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000954s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001430s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001280s ]
---------------------------------------------------------------
[ 2018-10-15T11:51:00+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001025s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001217s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 20  AND `id` > 2 ORDER BY date desc [ RunTime:0.001374s ]
---------------------------------------------------------------
[ 2018-10-15T11:51:13+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001016s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001280s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 4  AND `id` > 2 ORDER BY date desc [ RunTime:0.001388s ]
---------------------------------------------------------------
[ 2018-10-15T11:51:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000980s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001121s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000367s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001054s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001310s ]
---------------------------------------------------------------
[ 2018-10-15T11:51:47+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000969s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001347s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 3  AND `id` > 2 ORDER BY date desc [ RunTime:0.001672s ]
---------------------------------------------------------------
[ 2018-10-15T11:52:04+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001010s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001265s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001429s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000407s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000967s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000491s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000864s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000274s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000444s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000408s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001086s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000220s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001046s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000625s ]
---------------------------------------------------------------
[ 2018-10-15T11:57:33+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000967s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001309s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000659s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001127s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000536s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001009s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001734s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000987s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000357s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000516s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000345s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000408s ]
---------------------------------------------------------------
[ 2018-10-15T11:57:51+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000951s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001293s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000382s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001066s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001377s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:01+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000992s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001367s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 51 LIMIT 1 [ RunTime:0.000407s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:10+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001308s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001646s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 54 LIMIT 1 [ RunTime:0.000437s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:14+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001135s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001576s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 56 LIMIT 1 [ RunTime:0.000412s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:17+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001341s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001855s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 58 LIMIT 1 [ RunTime:0.000546s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:21+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000987s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001360s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 59 LIMIT 1 [ RunTime:0.000399s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/59
[ sql ] [ DB ] CONNECT:[ UseTime:0.000989s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001492s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 59 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000917s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000314s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:46+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/59.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002923s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 59 LIMIT 1 [ RunTime:0.000628s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 59 LIMIT 1 [ RunTime:0.000421s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001478s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000436s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000315s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=59,`p_id`=24,`title`='你问我为什么喜欢二次元？\r',`content`='# 你问我为什么喜欢二次元？\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/1b76BA93h4.png)\r\n',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 59 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Personal' LIMIT 1 [ RunTime:0.000994s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Personal' [ RunTime:0.000412s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000893s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000348s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:46+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/59.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000934s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001196s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 59 LIMIT 1 [ RunTime:0.000371s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001056s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000421s ]
---------------------------------------------------------------
[ 2018-10-15T11:58:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001121s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002008s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000507s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001137s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000445s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001094s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001737s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001069s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000430s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000680s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000409s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000551s ]
---------------------------------------------------------------
[ 2018-10-15T11:59:01+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000938s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001431s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 50 LIMIT 1 [ RunTime:0.000470s ]
---------------------------------------------------------------
[ 2018-10-15T11:59:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000986s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001302s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001548s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000534s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001133s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000301s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000555s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000981s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000401s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000376s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000373s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001269s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001106s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000672s ]
---------------------------------------------------------------
[ 2018-10-15T11:59:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001128s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001466s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000594s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001065s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000443s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001285s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001973s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001207s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000415s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000576s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000406s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000440s ]
---------------------------------------------------------------
[ 2018-10-15T11:59:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Personal.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001103s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001372s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000546s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001351s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000543s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Personal' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001364s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Personal' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002410s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001694s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000483s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000473s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000495s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000594s ]
---------------------------------------------------------------
[ 2018-10-15T11:59:31+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001473s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001692s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000588s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001387s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000643s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001460s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Essay' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001966s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001588s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Essay' [ RunTime:0.000602s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000764s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000558s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000544s ]
---------------------------------------------------------------
[ 2018-10-15T12:00:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000998s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001329s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000499s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001170s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000448s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001049s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001582s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001079s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000353s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000327s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000372s ]
---------------------------------------------------------------
[ 2018-10-15T12:00:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001382s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001808s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000603s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001827s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000640s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001061s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001630s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001037s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000405s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000505s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Essay' [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000375s ]
---------------------------------------------------------------
[ 2018-10-15T12:01:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001103s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001297s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000495s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001391s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000518s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001045s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002281s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001080s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000456s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000575s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000388s ]
---------------------------------------------------------------
[ 2018-10-15T12:01:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Essays.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001260s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001827s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000643s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001587s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000550s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001147s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Essays' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001675s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001019s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000350s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000419s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000403s ]
---------------------------------------------------------------
[ 2018-10-15T12:01:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Personal.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001009s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001217s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000660s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001142s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000475s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Personal' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.000338s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Personal' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000458s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001067s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000398s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000443s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000307s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000358s ]
---------------------------------------------------------------
[ 2018-10-15T12:01:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Person.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001077s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001228s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000468s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001139s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000517s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Person' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.000974s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Person' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001912s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001392s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000446s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000472s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000314s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000379s ]
---------------------------------------------------------------
[ 2018-10-15T12:01:30+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ sql ] [ DB ] CONNECT:[ UseTime:0.001066s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001503s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000502s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001197s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000428s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001210s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000469s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Essay'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000432s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000384s ]
---------------------------------------------------------------
[ 2018-10-15T12:01:47+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001081s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001355s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001347s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000379s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000897s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000320s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000460s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000959s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000316s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000343s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000530s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001044s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000290s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001014s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000693s ]
---------------------------------------------------------------
[ 2018-10-15T12:02:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ sql ] [ DB ] CONNECT:[ UseTime:0.001018s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001498s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000499s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001134s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000464s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001159s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000387s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000416s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000316s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000377s ]
---------------------------------------------------------------
[ 2018-10-15T12:03:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001037s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001342s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Linux' ORDER BY date desc [ RunTime:0.001372s ]
---------------------------------------------------------------
[ 2018-10-15T12:03:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000970s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001360s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001318s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000408s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000936s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000360s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000505s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000978s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000294s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000410s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000287s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000396s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001040s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000217s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001034s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000648s ]
---------------------------------------------------------------
[ 2018-10-15T12:04:20+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001028s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001402s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Linux' ORDER BY date desc [ RunTime:0.001574s ]
---------------------------------------------------------------
[ 2018-10-15T12:04:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/183
[ sql ] [ DB ] CONNECT:[ UseTime:0.000978s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001285s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 183 LIMIT 1 [ RunTime:0.000468s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000945s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000274s ]
---------------------------------------------------------------
[ 2018-10-15T12:09:06+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/183
[ sql ] [ DB ] CONNECT:[ UseTime:0.001100s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001373s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 183 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000878s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000388s ]
---------------------------------------------------------------
[ 2018-10-15T12:13:34+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001011s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001271s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 212 LIMIT 1 [ RunTime:0.000376s ]
---------------------------------------------------------------
[ 2018-10-15T12:13:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passessay.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000925s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001162s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000361s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000951s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 22  AND `id` > 1 ORDER BY id desc [ RunTime:0.001270s ]
---------------------------------------------------------------
[ 2018-10-15T12:13:50+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show
[ sql ] [ DB ] CONNECT:[ UseTime:0.000964s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001561s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000494s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001126s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000408s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001184s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000339s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000451s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000518s ]
---------------------------------------------------------------
[ 2018-10-15T12:14:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001174s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001354s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000435s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000919s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000320s ]
---------------------------------------------------------------
[ 2018-10-15T13:23:33+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001507s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002494s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000797s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.002555s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000484s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001338s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000457s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000576s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000427s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000481s ]
---------------------------------------------------------------
[ 2018-10-15T13:45:53+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001173s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001592s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000456s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000985s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000306s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:02+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001135s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001488s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000408s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000946s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000291s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:12+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001127s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001433s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000605s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000957s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000298s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:17+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/BookReview.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001105s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001310s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000659s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001745s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000933s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'BookReview' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001205s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'BookReview' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001240s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001455s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000501s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000449s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000444s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000373s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:21+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/211.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001025s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001549s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 211 LIMIT 1 [ RunTime:0.000616s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001008s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000365s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:37+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/notelst/groups/Default.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001033s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001706s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000584s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001230s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000535s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Default' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001383s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Default' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001858s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001025s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000353s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000431s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000352s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000384s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:43+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/169.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001030s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001627s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000402s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000967s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000311s ]
---------------------------------------------------------------
[ 2018-10-15T13:46:48+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/165.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001055s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001974s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 165 LIMIT 1 [ RunTime:0.000461s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001016s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000301s ]
---------------------------------------------------------------
[ 2018-10-15T13:50:14+08:00 ] 74.120.168.12 117.136.62.214 GET /daily/admin/show/shownote/id/32.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001476s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002097s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 32 LIMIT 1 [ RunTime:0.000914s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001512s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000395s ]
---------------------------------------------------------------
[ 2018-10-15T15:51:50+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001021s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001408s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000366s ]
---------------------------------------------------------------
[ 2018-10-15T15:51:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ sql ] [ DB ] CONNECT:[ UseTime:0.001424s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001450s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000588s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001180s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000605s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001371s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000404s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000445s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000369s ]
---------------------------------------------------------------
[ 2018-10-15T15:52:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.000965s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001323s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001489s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000402s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001355s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000770s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000566s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000920s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000412s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000290s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000397s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001109s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000217s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001089s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000708s ]
---------------------------------------------------------------
[ 2018-10-15T15:52:36+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin
[ sql ] [ DB ] CONNECT:[ UseTime:0.001113s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001544s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000577s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001428s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000545s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001352s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000372s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000471s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000303s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000462s ]
---------------------------------------------------------------
[ 2018-10-15T15:52:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001456s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001459s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001596s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000445s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000952s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000364s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000882s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000342s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000368s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001244s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001193s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000715s ]
---------------------------------------------------------------
[ 2018-10-15T15:53:01+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001154s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001346s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000426s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001063s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000409s ]
---------------------------------------------------------------
[ 2018-10-15T16:00:26+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000917s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001767s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000413s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000406s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001008s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000480s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000502s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000278s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=222,`p_id`=24,`title`='不盲目倾向弱者，不过分苛刻强者\r',`content`='# 不盲目倾向弱者，不过分苛刻强者\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/181015/GKl5i9B21f.png)\r\n\r\n认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。\r\n\r\n然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。\r\n\r\n细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 222 [ RunTime:0.000566s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.001078s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000433s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.001397s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000364s ]
---------------------------------------------------------------
[ 2018-10-15T16:00:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/222.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001088s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001389s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000436s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000994s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000625s ]
---------------------------------------------------------------
[ 2018-10-15T16:02:33+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.001040s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001966s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001559s ]
---------------------------------------------------------------
[ 2018-10-15T16:02:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/169
[ sql ] [ DB ] CONNECT:[ UseTime:0.001132s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001348s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000513s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001062s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000304s ]
---------------------------------------------------------------
[ 2018-10-15T16:02:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/169
[ sql ] [ DB ] CONNECT:[ UseTime:0.001119s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001291s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000494s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000286s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.001061s ]
[ error ] [0]数据表字段不存在:[summary]
---------------------------------------------------------------
[ 2018-10-15T16:03:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/169
[ sql ] [ DB ] CONNECT:[ UseTime:0.001013s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001362s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000453s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000309s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.000997s ]
[ error ] [0]数据表字段不存在:[summary]
---------------------------------------------------------------
[ 2018-10-15T16:04:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ sql ] [ DB ] CONNECT:[ UseTime:0.001383s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001432s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001529s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000456s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000899s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000581s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000932s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000297s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000417s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000300s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001029s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000268s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001271s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000644s ]
---------------------------------------------------------------
[ 2018-10-15T16:04:07+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ sql ] [ DB ] CONNECT:[ UseTime:0.000977s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001363s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001520s ]
---------------------------------------------------------------
[ 2018-10-15T16:04:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/169
[ sql ] [ DB ] CONNECT:[ UseTime:0.000968s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001277s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000676s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000410s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.001698s ]
[ error ] [0]数据表字段不存在:[summary]
---------------------------------------------------------------
[ 2018-10-15T16:05:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/169
[ sql ] [ DB ] CONNECT:[ UseTime:0.001391s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002609s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000727s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000417s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.002270s ]
[ error ] [0]数据表字段不存在:[summary]
---------------------------------------------------------------
[ 2018-10-15T16:06:22+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/169
[ info ] qingrang.top/daily/admin/note/delnote/id/169 [运行时间：0.064672s][吞吐率：15.46req/s] [内存消耗：3,143.66kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'delnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '169',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->delNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000628s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001417s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000525s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000292s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.001118s ]
[ error ] [0]数据表字段不存在:[summary][/var/www/html/daily/thinkphp/library/think/db/Builder.php:109]
---------------------------------------------------------------
[ 2018-10-15T16:06:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/169
[ info ] qingrang.top/daily/admin/note/delnote/id/169 [运行时间：0.077664s][吞吐率：12.88req/s] [内存消耗：2,056.23kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'delnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '169',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->delNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000728s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001569s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000515s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 169 LIMIT 1 [ RunTime:0.000410s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.001327s ]
[ sql ] [ SQL ] INSERT INTO `note_del` (`id` , `title` , `summary` , `content` , `date` , `groups` , `p_id` , `is_show` , `publish`) VALUES (169 , '野居计划\r' , NULL , '# 野居计划\r\n' , '2018-03-27' , 'Default' , 1 , 0 , 1) [ RunTime:0.000399s ]
[ sql ] [ SQL ] DELETE FROM `note`    WHERE  `id` = 169 [ RunTime:0.000650s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.002456s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.002292s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=12  WHERE  `groups` = 'Default' [ RunTime:0.000553s ]
---------------------------------------------------------------
[ 2018-10-15T16:06:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.067790s][吞吐率：14.75req/s] [内存消耗：2,112.18kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000491s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001306s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000602s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001262s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000519s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001566s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000353s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000445s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000332s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000378s ]
---------------------------------------------------------------
[ 2018-10-15T16:07:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.100816s][吞吐率：9.92req/s] [内存消耗：2,217.35kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000502s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001989s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001999s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000507s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001196s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000566s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001361s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000449s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000498s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000405s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000430s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001552s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000359s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001422s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.001293s ]
---------------------------------------------------------------
[ 2018-10-15T16:07:06+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.065946s][吞吐率：15.16req/s] [内存消耗：2,232.64kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '1',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000651s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001411s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 1  AND `id` > 2 ORDER BY date desc [ RunTime:0.001685s ]
---------------------------------------------------------------
[ 2018-10-15T16:10:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.077826s][吞吐率：12.85req/s] [内存消耗：2,382.10kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000648s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001492s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001768s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000403s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000823s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000308s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000466s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000955s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000303s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000403s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000324s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000468s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001032s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000234s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001029s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000610s ]
---------------------------------------------------------------
[ 2018-10-15T16:10:41+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.071099s][吞吐率：14.06req/s] [内存消耗：2,395.47kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000577s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001421s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 21  AND `id` > 2 ORDER BY date desc [ RunTime:0.002502s ]
---------------------------------------------------------------
[ 2018-10-15T16:10:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/211
[ info ] qingrang.top/daily/admin/note/editNote/id/211 [运行时间：0.083615s][吞吐率：11.96req/s] [内存消耗：2,036.25kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '211',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000622s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001975s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 211 LIMIT 1 [ RunTime:0.000653s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001485s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000422s ]
---------------------------------------------------------------
[ 2018-10-15T16:10:50+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.075927s][吞吐率：13.17req/s] [内存消耗：3,599.66kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => '6',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000548s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001591s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%6%' OR `content` LIKE '%6%' ) ORDER BY date desc [ RunTime:0.007594s ]
---------------------------------------------------------------
[ 2018-10-15T16:10:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/admin/note/editNote/id/216
[ info ] qingrang.top/daily/admin/admin/note/editNote/id/216 [运行时间：0.052976s][吞吐率：18.88req/s] [内存消耗：1,357.70kb] [文件加载：48]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'admin',
    2 => 'note',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'editNote' => 'id',
)
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-10-15T16:11:39+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/admin/note/editNote/id/221
[ info ] qingrang.top/daily/admin/admin/note/editNote/id/221 [运行时间：0.038710s][吞吐率：25.83req/s] [内存消耗：1,357.70kb] [文件加载：48]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'admin',
    2 => 'note',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'editNote' => 'id',
)
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-10-15T16:11:43+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.101839s][吞吐率：9.82req/s] [内存消耗：2,382.09kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000462s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001350s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001533s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000471s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000963s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000306s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000528s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000933s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000326s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000482s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000512s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001711s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000330s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001613s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000956s ]
---------------------------------------------------------------
[ 2018-10-15T16:11:46+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.073163s][吞吐率：13.67req/s] [内存消耗：3,599.66kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => '6',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000456s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001359s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%6%' OR `content` LIKE '%6%' ) ORDER BY date desc [ RunTime:0.007169s ]
---------------------------------------------------------------
[ 2018-10-15T16:11:50+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/221
[ info ] qingrang.top/daily/admin/note/editNote/id/221 [运行时间：0.070626s][吞吐率：14.16req/s] [内存消耗：2,029.66kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '221',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000615s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001942s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 221 LIMIT 1 [ RunTime:0.000557s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001579s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000437s ]
---------------------------------------------------------------
[ 2018-10-15T16:11:54+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/221
[ info ] qingrang.top/daily/admin/note/shownote/id/221 [运行时间：0.054791s][吞吐率：18.25req/s] [内存消耗：1,981.34kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '221',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000528s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001398s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 221 LIMIT 1 [ RunTime:0.000559s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001218s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000277s ]
---------------------------------------------------------------
[ 2018-10-15T16:11:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/218
[ info ] qingrang.top/daily/admin/note/editNote/id/218 [运行时间：0.075983s][吞吐率：13.16req/s] [内存消耗：2,032.99kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '218',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000472s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001246s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 218 LIMIT 1 [ RunTime:0.000568s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000996s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000292s ]
---------------------------------------------------------------
[ 2018-10-15T16:12:24+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.066812s][吞吐率：14.97req/s] [内存消耗：2,051.01kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8108',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/218',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 单例设计模式
## 意义（想要保证对象唯一）
eg: 配置文件的使用。
第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。
## 使用方法
先按常规方法对事物进行描述，最后再加上这三步内即可:
1.将构造函数私有化。（其他类中无法再创建该类对象）
2.在类中创建一个私有的本类对象。（静态）
3.提供一个方法可以获取到该对象。（静态）

>Ps: 为什么要使用静态？

在主函数中需要调用方法（3），方法的调用有两种：
1.通过对象调用
2.通过类名调用

但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。

## 饿汉式
```
package study;

public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```

---
~~stu1 age = 18
stu2 age = 18
true~~

---
## 懒汉式
```
package basics;

/**
 * 单例设计模式
 * Created by CaptainQR on 2018/9/26.
 */
public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu;	//2. 准备一个类属性,不实例化
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到对象
    	//第一次访问时，实例化对象
    	if(stu == null){
    		stu = new Student();
    	}
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```
---
~~stu1 age = 18
stu2 age = 18
true~~

---

## 什么时候使用饿汉式，什么时候使用懒汉式
**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**
>饿汉式

饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

>懒汉式

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000703s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001390s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='单例设计模式',`content`='# 单例设计模式\n## 意义（想要保证对象唯一）\neg: 配置文件的使用。\n第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。\n## 使用方法\n先按常规方法对事物进行描述，最后再加上这三步内即可:\n1.将构造函数私有化。（其他类中无法再创建该类对象）\n2.在类中创建一个私有的本类对象。（静态）\n3.提供一个方法可以获取到该对象。（静态）\n\n>Ps: 为什么要使用静态？\n\n在主函数中需要调用方法（3），方法的调用有两种：\n1.通过对象调用\n2.通过类名调用\n\n但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。\n\n## 饿汉式\n```\npackage study;\n\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n## 懒汉式\n```\npackage basics;\n\n/**\n * 单例设计模式\n * Created by CaptainQR on 2018/9/26.\n */\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu;	//2. 准备一个类属性,不实例化\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到对象\n    	//第一次访问时，实例化对象\n    	if(stu == null){\n    		stu = new Student();\n    	}\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n\n## 什么时候使用饿汉式，什么时候使用懒汉式\n**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**\n>饿汉式\n\n饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。\n\n>懒汉式\n\n懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。\n使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000730s ]
---------------------------------------------------------------
[ 2018-10-15T16:14:36+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/218
[ info ] qingrang.top/daily/admin/note/editNote/id/218 [运行时间：0.067324s][吞吐率：14.85req/s] [内存消耗：2,162.27kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'pragma' => 'no-cache',
  'cache-control' => 'no-cache',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '218',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000758s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001720s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 218 LIMIT 1 [ RunTime:0.000603s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001116s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000351s ]
---------------------------------------------------------------
[ 2018-10-15T16:15:14+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.054185s][吞吐率：18.46req/s] [内存消耗：2,050.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8108',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/218',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 单例设计模式
## 意义（想要保证对象唯一）
eg: 配置文件的使用。
第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。
## 使用方法
先按常规方法对事物进行描述，最后再加上这三步内即可:
1.将构造函数私有化。（其他类中无法再创建该类对象）
2.在类中创建一个私有的本类对象。（静态）
3.提供一个方法可以获取到该对象。（静态）

>Ps: 为什么要使用静态？

在主函数中需要调用方法（3），方法的调用有两种：
1.通过对象调用
2.通过类名调用

但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。

## 饿汉式
```
package study;

public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```

---
~~stu1 age = 18
stu2 age = 18
true~~

---
## 懒汉式
```
package basics;

/**
 * 单例设计模式
 * Created by CaptainQR on 2018/9/26.
 */
public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu;	//2. 准备一个类属性,不实例化
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到对象
    	//第一次访问时，实例化对象
    	if(stu == null){
    		stu = new Student();
    	}
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```
---
~~stu1 age = 18
stu2 age = 18
true~~

---

## 什么时候使用饿汉式，什么时候使用懒汉式
**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**
>饿汉式

饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

>懒汉式

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000577s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001525s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='单例设计模式',`content`='# 单例设计模式\n## 意义（想要保证对象唯一）\neg: 配置文件的使用。\n第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。\n## 使用方法\n先按常规方法对事物进行描述，最后再加上这三步内即可:\n1.将构造函数私有化。（其他类中无法再创建该类对象）\n2.在类中创建一个私有的本类对象。（静态）\n3.提供一个方法可以获取到该对象。（静态）\n\n>Ps: 为什么要使用静态？\n\n在主函数中需要调用方法（3），方法的调用有两种：\n1.通过对象调用\n2.通过类名调用\n\n但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。\n\n## 饿汉式\n```\npackage study;\n\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n## 懒汉式\n```\npackage basics;\n\n/**\n * 单例设计模式\n * Created by CaptainQR on 2018/9/26.\n */\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu;	//2. 准备一个类属性,不实例化\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到对象\n    	//第一次访问时，实例化对象\n    	if(stu == null){\n    		stu = new Student();\n    	}\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n\n## 什么时候使用饿汉式，什么时候使用懒汉式\n**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**\n>饿汉式\n\n饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。\n\n>懒汉式\n\n懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。\n使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000509s ]
---------------------------------------------------------------
[ 2018-10-15T16:16:43+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/218
[ info ] qingrang.top/daily/admin/note/editNote/id/218 [运行时间：0.053872s][吞吐率：18.56req/s] [内存消耗：2,033.11kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '218',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000811s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001424s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 218 LIMIT 1 [ RunTime:0.000396s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001006s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000298s ]
---------------------------------------------------------------
[ 2018-10-15T16:16:48+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.057972s][吞吐率：17.25req/s] [内存消耗：2,050.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8108',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/218',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 单例设计模式
## 意义（想要保证对象唯一）
eg: 配置文件的使用。
第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。
## 使用方法
先按常规方法对事物进行描述，最后再加上这三步内即可:
1.将构造函数私有化。（其他类中无法再创建该类对象）
2.在类中创建一个私有的本类对象。（静态）
3.提供一个方法可以获取到该对象。（静态）

>Ps: 为什么要使用静态？

在主函数中需要调用方法（3），方法的调用有两种：
1.通过对象调用
2.通过类名调用

但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。

## 饿汉式
```
package study;

public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```

---
~~stu1 age = 18
stu2 age = 18
true~~

---
## 懒汉式
```
package basics;

/**
 * 单例设计模式
 * Created by CaptainQR on 2018/9/26.
 */
public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu;	//2. 准备一个类属性,不实例化
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到对象
    	//第一次访问时，实例化对象
    	if(stu == null){
    		stu = new Student();
    	}
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```
---
~~stu1 age = 18
stu2 age = 18
true~~

---

## 什么时候使用饿汉式，什么时候使用懒汉式
**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**
>饿汉式

饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

>懒汉式

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000481s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001292s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='单例设计模式',`content`='# 单例设计模式\n## 意义（想要保证对象唯一）\neg: 配置文件的使用。\n第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。\n## 使用方法\n先按常规方法对事物进行描述，最后再加上这三步内即可:\n1.将构造函数私有化。（其他类中无法再创建该类对象）\n2.在类中创建一个私有的本类对象。（静态）\n3.提供一个方法可以获取到该对象。（静态）\n\n>Ps: 为什么要使用静态？\n\n在主函数中需要调用方法（3），方法的调用有两种：\n1.通过对象调用\n2.通过类名调用\n\n但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。\n\n## 饿汉式\n```\npackage study;\n\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n## 懒汉式\n```\npackage basics;\n\n/**\n * 单例设计模式\n * Created by CaptainQR on 2018/9/26.\n */\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu;	//2. 准备一个类属性,不实例化\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到对象\n    	//第一次访问时，实例化对象\n    	if(stu == null){\n    		stu = new Student();\n    	}\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n\n## 什么时候使用饿汉式，什么时候使用懒汉式\n**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**\n>饿汉式\n\n饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。\n\n>懒汉式\n\n懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。\n使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000508s ]
---------------------------------------------------------------
[ 2018-10-15T16:17:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/218
[ info ] qingrang.top/daily/admin/note/editNote/id/218 [运行时间：0.030721s][吞吐率：32.55req/s] [内存消耗：1,139.87kb] [文件加载：41]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '218',
)
[ info ] [ LOG ] INIT File
[ error ] [4]语法错误: unexpected ','[/var/www/html/daily/application/admin/config.php:11]
---------------------------------------------------------------
[ 2018-10-15T16:17:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/218
[ info ] qingrang.top/daily/admin/note/editNote/id/218 [运行时间：0.062457s][吞吐率：16.01req/s] [内存消耗：2,033.11kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '218',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000501s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002366s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 218 LIMIT 1 [ RunTime:0.000496s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001299s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000445s ]
---------------------------------------------------------------
[ 2018-10-15T16:17:27+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.054054s][吞吐率：18.50req/s] [内存消耗：2,050.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8108',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/218',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 单例设计模式
## 意义（想要保证对象唯一）
eg: 配置文件的使用。
第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。
## 使用方法
先按常规方法对事物进行描述，最后再加上这三步内即可:
1.将构造函数私有化。（其他类中无法再创建该类对象）
2.在类中创建一个私有的本类对象。（静态）
3.提供一个方法可以获取到该对象。（静态）

>Ps: 为什么要使用静态？

在主函数中需要调用方法（3），方法的调用有两种：
1.通过对象调用
2.通过类名调用

但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。

## 饿汉式
```
package study;

public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```

---
~~stu1 age = 18
stu2 age = 18
true~~

---
## 懒汉式
```
package basics;

/**
 * 单例设计模式
 * Created by CaptainQR on 2018/9/26.
 */
public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu;	//2. 准备一个类属性,不实例化
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到对象
    	//第一次访问时，实例化对象
    	if(stu == null){
    		stu = new Student();
    	}
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```
---
~~stu1 age = 18
stu2 age = 18
true~~

---

## 什么时候使用饿汉式，什么时候使用懒汉式
**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**
>饿汉式

饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

>懒汉式

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000560s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001246s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='单例设计模式',`content`='# 单例设计模式\n## 意义（想要保证对象唯一）\neg: 配置文件的使用。\n第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。\n## 使用方法\n先按常规方法对事物进行描述，最后再加上这三步内即可:\n1.将构造函数私有化。（其他类中无法再创建该类对象）\n2.在类中创建一个私有的本类对象。（静态）\n3.提供一个方法可以获取到该对象。（静态）\n\n>Ps: 为什么要使用静态？\n\n在主函数中需要调用方法（3），方法的调用有两种：\n1.通过对象调用\n2.通过类名调用\n\n但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。\n\n## 饿汉式\n```\npackage study;\n\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n## 懒汉式\n```\npackage basics;\n\n/**\n * 单例设计模式\n * Created by CaptainQR on 2018/9/26.\n */\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu;	//2. 准备一个类属性,不实例化\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到对象\n    	//第一次访问时，实例化对象\n    	if(stu == null){\n    		stu = new Student();\n    	}\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n\n## 什么时候使用饿汉式，什么时候使用懒汉式\n**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**\n>饿汉式\n\n饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。\n\n>懒汉式\n\n懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。\n使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000768s ]
---------------------------------------------------------------
[ 2018-10-15T16:18:32+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.050937s][吞吐率：19.63req/s] [内存消耗：2,050.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8108',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/218',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 单例设计模式
## 意义（想要保证对象唯一）
eg: 配置文件的使用。
第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。
## 使用方法
先按常规方法对事物进行描述，最后再加上这三步内即可:
1.将构造函数私有化。（其他类中无法再创建该类对象）
2.在类中创建一个私有的本类对象。（静态）
3.提供一个方法可以获取到该对象。（静态）

>Ps: 为什么要使用静态？

在主函数中需要调用方法（3），方法的调用有两种：
1.通过对象调用
2.通过类名调用

但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。

## 饿汉式
```
package study;

public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```

---
~~stu1 age = 18
stu2 age = 18
true~~

---
## 懒汉式
```
package basics;

/**
 * 单例设计模式
 * Created by CaptainQR on 2018/9/26.
 */
public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu;	//2. 准备一个类属性,不实例化
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到对象
    	//第一次访问时，实例化对象
    	if(stu == null){
    		stu = new Student();
    	}
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```
---
~~stu1 age = 18
stu2 age = 18
true~~

---

## 什么时候使用饿汉式，什么时候使用懒汉式
**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**
>饿汉式

饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

>懒汉式

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000543s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001690s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='单例设计模式',`content`='# 单例设计模式\n## 意义（想要保证对象唯一）\neg: 配置文件的使用。\n第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。\n## 使用方法\n先按常规方法对事物进行描述，最后再加上这三步内即可:\n1.将构造函数私有化。（其他类中无法再创建该类对象）\n2.在类中创建一个私有的本类对象。（静态）\n3.提供一个方法可以获取到该对象。（静态）\n\n>Ps: 为什么要使用静态？\n\n在主函数中需要调用方法（3），方法的调用有两种：\n1.通过对象调用\n2.通过类名调用\n\n但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。\n\n## 饿汉式\n```\npackage study;\n\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n## 懒汉式\n```\npackage basics;\n\n/**\n * 单例设计模式\n * Created by CaptainQR on 2018/9/26.\n */\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu;	//2. 准备一个类属性,不实例化\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到对象\n    	//第一次访问时，实例化对象\n    	if(stu == null){\n    		stu = new Student();\n    	}\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n\n## 什么时候使用饿汉式，什么时候使用懒汉式\n**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**\n>饿汉式\n\n饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。\n\n>懒汉式\n\n懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。\n使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000535s ]
---------------------------------------------------------------
[ 2018-10-15T16:19:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/218
[ info ] qingrang.top/daily/admin/note/editNote/id/218 [运行时间：0.060134s][吞吐率：16.63req/s] [内存消耗：2,161.98kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '218',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000530s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001368s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 218 LIMIT 1 [ RunTime:0.000445s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001081s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000300s ]
---------------------------------------------------------------
[ 2018-10-15T16:19:56+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.054606s][吞吐率：18.31req/s] [内存消耗：2,050.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8108',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/218',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 单例设计模式
## 意义（想要保证对象唯一）
eg: 配置文件的使用。
第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。
## 使用方法
先按常规方法对事物进行描述，最后再加上这三步内即可:
1.将构造函数私有化。（其他类中无法再创建该类对象）
2.在类中创建一个私有的本类对象。（静态）
3.提供一个方法可以获取到该对象。（静态）

>Ps: 为什么要使用静态？

在主函数中需要调用方法（3），方法的调用有两种：
1.通过对象调用
2.通过类名调用

但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。

## 饿汉式
```
package study;

public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```

---
~~stu1 age = 18
stu2 age = 18
true~~

---
## 懒汉式
```
package basics;

/**
 * 单例设计模式
 * Created by CaptainQR on 2018/9/26.
 */
public class SingletonPattern {
    public static void main(String[] args) {
        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例
        stu1.setAge(18);
        System.out.println("stu1 age = " + stu1.getAge());
        
        Student stu2 = Student.getStudent();
        System.out.println("stu2 age = " + stu2.getAge());
        
        //都是同一个对象,true
        System.out.println(stu1==stu2);
    }
}
class Student{
    private int age;
    private Student(){};    //1. 私有构造函数
    private static Student stu;	//2. 准备一个类属性,不实例化
    
    public static Student getStudent() {    //3. 提供一个方法可以获取到对象
    	//第一次访问时，实例化对象
    	if(stu == null){
    		stu = new Student();
    	}
        return stu;
    }
    
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
}
```
---
~~stu1 age = 18
stu2 age = 18
true~~

---

## 什么时候使用饿汉式，什么时候使用懒汉式
**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**
>饿汉式

饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。
如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。

>懒汉式

懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。
使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000479s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001424s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='单例设计模式',`content`='# 单例设计模式\n## 意义（想要保证对象唯一）\neg: 配置文件的使用。\n第一次修改后，希望下一次打开后是同样的配置，这是需要修改与访问的是同一个对象。\n## 使用方法\n先按常规方法对事物进行描述，最后再加上这三步内即可:\n1.将构造函数私有化。（其他类中无法再创建该类对象）\n2.在类中创建一个私有的本类对象。（静态）\n3.提供一个方法可以获取到该对象。（静态）\n\n>Ps: 为什么要使用静态？\n\n在主函数中需要调用方法（3），方法的调用有两种：\n1.通过对象调用\n2.通过类名调用\n\n但是在主函数中并不能建立该类的对象，所以需要通过类名调用，要想可以通过类名调用方法，就需要定义静态。\n\n## 饿汉式\n```\npackage study;\n\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu = new Student(); //2. 在类中创建一个本类对象，私有\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到该对象\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n## 懒汉式\n```\npackage basics;\n\n/**\n * 单例设计模式\n * Created by CaptainQR on 2018/9/26.\n */\npublic class SingletonPattern {\n    public static void main(String[] args) {\n        Student stu1 = Student.getStudent();    //通过类名调取方法获取到该对象，单例\n        stu1.setAge(18);\n        System.out.println(\"stu1 age = \" + stu1.getAge());\n        \n        Student stu2 = Student.getStudent();\n        System.out.println(\"stu2 age = \" + stu2.getAge());\n        \n        //都是同一个对象,true\n        System.out.println(stu1==stu2);\n    }\n}\nclass Student{\n    private int age;\n    private Student(){};    //1. 私有构造函数\n    private static Student stu;	//2. 准备一个类属性,不实例化\n    \n    public static Student getStudent() {    //3. 提供一个方法可以获取到对象\n    	//第一次访问时，实例化对象\n    	if(stu == null){\n    		stu = new Student();\n    	}\n        return stu;\n    }\n    \n    public int getAge() {\n        return age;\n    }\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n---\n~~stu1 age = 18\nstu2 age = 18\ntrue~~\n\n---\n\n## 什么时候使用饿汉式，什么时候使用懒汉式\n**看业务需求，如果业务上允许有比较充分的启动和初始化时间，就使用饿汉式，否则就使用懒汉式.**\n>饿汉式\n\n饿汉式是立即加载的方式，无论是否会用到这个对象，都会加载。\n如果在构造方法里写了性能消耗较大，占时较久的代码，比如建立与数据库的连接，那么就会在启动的时候感觉稍微有些卡顿。\n\n>懒汉式\n\n懒汉式，是延迟加载的方式，只有使用的时候才会加载。 并且有线程安全的考量。\n使用懒汉式，在启动的时候，会感觉到比饿汉式略快，因为并没有做对象的实例化。 但是在第一次调用的时候，会进行实例化操作，感觉上就略慢。',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000572s ]
---------------------------------------------------------------
[ 2018-10-15T16:20:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.070825s][吞吐率：14.12req/s] [内存消耗：2,176.79kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001379s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001629s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000461s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001019s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000342s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000530s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000926s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000306s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000432s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000416s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000996s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000224s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001065s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000609s ]
---------------------------------------------------------------
[ 2018-10-15T16:20:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/222.html
[ info ] qingrang.top/daily/admin/note/shownote/id/222.html [运行时间：0.074205s][吞吐率：13.48req/s] [内存消耗：1,981.61kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000909s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001562s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001002s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000316s ]
---------------------------------------------------------------
[ 2018-10-15T16:20:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/222.html
[ info ] qingrang.top/daily/admin/note/editnote/id/222.html [运行时间：0.064732s][吞吐率：15.45req/s] [内存消耗：2,029.60kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000547s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001568s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000625s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000974s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000345s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:07+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/222.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/222.html [运行时间：0.087347s][吞吐率：11.45req/s] [内存消耗：2,052.80kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '1920',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/222.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 不盲目倾向弱者，不过分苛刻强者
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/181015/GKl5i9B21f.png)

认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。

然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。 

细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。',
  'groups' => 'Essays',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000640s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001770s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000528s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000407s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001181s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000325s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000366s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000305s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=222,`p_id`=24,`title`='不盲目倾向弱者，不过分苛刻强者\r',`content`='# 不盲目倾向弱者，不过分苛刻强者\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/181015/GKl5i9B21f.png)\r\n\r\n认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。\r\n\r\n然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。 \r\n\r\n细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 222 [ RunTime:0.000633s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.001746s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000423s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000951s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000373s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/222.html
[ info ] qingrang.top/daily/admin/note/shownote/id/222.html [运行时间：0.064404s][吞吐率：15.53req/s] [内存消耗：1,981.96kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/222.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000556s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001481s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000606s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001361s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000292s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:12+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.084065s][吞吐率：11.90req/s] [内存消耗：2,176.79kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000568s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002434s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001511s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000402s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001047s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000349s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000373s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000990s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000275s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000387s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000349s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000392s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001016s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000242s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001092s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000845s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.057737s][吞吐率：17.32req/s] [内存消耗：2,142.57kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000462s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001261s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000331s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.073619s][吞吐率：13.58req/s] [内存消耗：2,176.26kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000491s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001413s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001544s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000417s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001119s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000414s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000448s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001164s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000416s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000453s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000355s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000371s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001085s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000226s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001284s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000837s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:38+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show
[ info ] qingrang.top/daily/admin/show [运行时间：0.068236s][吞吐率：14.65req/s] [内存消耗：2,239.94kb] [文件加载：60]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000501s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001265s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000474s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001300s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000457s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001007s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000541s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000555s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000314s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000421s ]
---------------------------------------------------------------
[ 2018-10-15T16:21:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.071976s][吞吐率：13.89req/s] [内存消耗：2,111.66kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'purpose' => 'prefetch',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000491s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001324s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000501s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001107s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000481s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001259s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000391s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000468s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000342s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000372s ]
---------------------------------------------------------------
[ 2018-10-15T16:22:06+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.074920s][吞吐率：13.35req/s] [内存消耗：2,176.79kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000558s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001438s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001502s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000414s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000953s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000336s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000389s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001001s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000295s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000407s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000281s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000944s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000218s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001107s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000711s ]
---------------------------------------------------------------
[ 2018-10-15T16:22:47+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.050545s][吞吐率：19.78req/s] [内存消耗：2,168.68kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '23',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Web Front-end',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000598s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001336s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Web Front-end' ORDER BY date desc [ RunTime:0.001283s ]
---------------------------------------------------------------
[ 2018-10-15T16:25:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.100210s][吞吐率：9.98req/s] [内存消耗：2,176.80kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000607s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.004001s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001750s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000560s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001174s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000521s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000453s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001812s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000472s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000585s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000515s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001049s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000309s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001227s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000676s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:00+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.070347s][吞吐率：14.22req/s] [内存消耗：2,176.79kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000520s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001311s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.002060s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000473s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001179s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000326s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001015s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000419s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000376s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001027s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000253s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001100s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000577s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:03+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.059876s][吞吐率：16.70req/s] [内存消耗：2,168.67kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '22',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'WebFront-end',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000510s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001369s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'WebFront-end' ORDER BY date desc [ RunTime:0.001803s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:10+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.074913s][吞吐率：13.35req/s] [内存消耗：2,111.82kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000517s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001204s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000556s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001143s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000471s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001121s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000364s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000493s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000322s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000400s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/WebFront-end.html
[ info ] qingrang.top/daily/admin/show/notelst/groups/WebFront-end.html [运行时间：0.081628s][吞吐率：12.25req/s] [内存消耗：2,106.19kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'notelst',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'WebFront-end',
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000692s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001576s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000695s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001094s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000582s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'WebFront-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001105s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'WebFront-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000957s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001051s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000410s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000311s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000404s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:18+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/WebFront-end.html
[ info ] qingrang.top/daily/admin/show/notelst/groups/WebFront-end.html [运行时间：0.074005s][吞吐率：13.51req/s] [内存消耗：2,106.35kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'notelst',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'WebFront-end',
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000469s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001406s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000463s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001295s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000458s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'WebFront-end' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001090s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'WebFront-end' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000909s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001106s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000358s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000437s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000385s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Algorithm.html
[ info ] qingrang.top/daily/admin/show/notelst/groups/Algorithm.html [运行时间：0.075640s][吞吐率：13.22req/s] [内存消耗：2,107.91kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'notelst',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/show/notelst/groups/WebFront-end.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Algorithm',
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000464s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001765s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000596s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001561s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000528s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Algorithm' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001600s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Algorithm' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001883s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001327s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000389s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000491s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000409s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000414s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:41+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/Think.html
[ info ] qingrang.top/daily/admin/show/notelst/groups/Think.html [运行时间：0.064048s][吞吐率：15.61req/s] [内存消耗：2,114.91kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'notelst',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/show/notelst/groups/Algorithm.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Think',
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000566s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001293s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000629s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001132s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000457s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Think' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.000972s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'Think' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.001358s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000990s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000346s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000437s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000348s ]
---------------------------------------------------------------
[ 2018-10-15T16:31:48+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/176.html
[ info ] qingrang.top/daily/admin/show/shownote/id/176.html [运行时间：0.066788s][吞吐率：14.97req/s] [内存消耗：1,939.56kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/show/notelst/groups/Think.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '176',
)
[ info ] [ RUN ] app\admin\controller\Show->showNote[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000552s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001916s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 176 LIMIT 1 [ RunTime:0.000700s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001385s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000375s ]
---------------------------------------------------------------
[ 2018-10-15T16:32:18+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.054507s][吞吐率：18.35req/s] [内存消耗：2,227.50kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '3',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000503s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001473s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 3  AND `id` > 2 ORDER BY date desc [ RunTime:0.001471s ]
---------------------------------------------------------------
[ 2018-10-15T16:32:35+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.060564s][吞吐率：16.51req/s] [内存消耗：2,147.50kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '24',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000477s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001293s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 24  AND `id` > 2 ORDER BY date desc [ RunTime:0.001272s ]
---------------------------------------------------------------
[ 2018-10-15T16:34:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/200
[ info ] qingrang.top/daily/admin/note/shownote/id/200 [运行时间：0.062137s][吞吐率：16.09req/s] [内存消耗：1,983.04kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '200',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000536s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002026s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 200 LIMIT 1 [ RunTime:0.000738s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001128s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000318s ]
---------------------------------------------------------------
[ 2018-10-15T16:35:32+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.054463s][吞吐率：18.36req/s] [内存消耗：2,223.47kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '4',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000484s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001565s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 4  AND `id` > 2 ORDER BY date desc [ RunTime:0.001789s ]
---------------------------------------------------------------
[ 2018-10-15T16:35:38+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/19
[ info ] qingrang.top/daily/admin/note/editNote/id/19 [运行时间：0.051014s][吞吐率：19.60req/s] [内存消耗：2,059.57kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '19',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000497s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001484s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 19 LIMIT 1 [ RunTime:0.000477s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000891s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000307s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:05+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/updatenote/id/19.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/19.html [运行时间：0.050876s][吞吐率：19.66req/s] [内存消耗：1,406.69kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '19',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ LOG ] INIT File
[ error ] [8]未定义数组下标: 1[/var/www/html/daily/application/admin/controller/Note.php:241]
---------------------------------------------------------------
[ 2018-10-15T16:36:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/19
[ info ] qingrang.top/daily/admin/note/editNote/id/19 [运行时间：0.054898s][吞吐率：18.22req/s] [内存消耗：2,059.57kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '19',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000555s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001446s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 19 LIMIT 1 [ RunTime:0.000518s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000955s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000304s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.070227s][吞吐率：14.24req/s] [内存消耗：2,176.79kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000485s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001296s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001357s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000379s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000923s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000292s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000408s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000898s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000464s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000421s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000301s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000368s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000915s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000220s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001097s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000717s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:30+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.065147s][吞吐率：15.35req/s] [内存消耗：2,227.50kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '3',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000507s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001656s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 3  AND `id` > 2 ORDER BY date desc [ RunTime:0.002447s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:38+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.050651s][吞吐率：19.74req/s] [内存消耗：2,223.47kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '4',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000529s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001326s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 4  AND `id` > 2 ORDER BY date desc [ RunTime:0.001280s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/19
[ info ] qingrang.top/daily/admin/note/editNote/id/19 [运行时间：0.053515s][吞吐率：18.69req/s] [内存消耗：2,059.57kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '19',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000454s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001297s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 19 LIMIT 1 [ RunTime:0.000441s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000938s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000359s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:53+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/19.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/19.html [运行时间：0.065723s][吞吐率：15.22req/s] [内存消耗：2,162.65kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '43838',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/19',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 钱钟书和杨绛:有一种爱情叫“世间始终你好”
世间，始终你好
先生，一路走好。

民国时期出过很多著名伉俪，钱钟书和杨绛是其中一对，他们的故事没有梁思成和林徽因、徐志摩和陆小曼那么错综复杂，也不像胡适和江冬秀，鲁迅和朱安那样包办婚姻，是很多人眼中理想的爱情。


他们是幸运的，茫茫人海中，没有早一步，也没有晚一步，在彼此最美好的年华相遇。他说，她是最贤的妻，最才的女。他说，遇到她之前没想过结婚，娶她之后从未后悔过，她说她亦然。一路走来，几多坎坷，几多波折，他们眼里始终彼此最好。

>01.初相逢，原来你也在这里

那一天，春风十里吹正好，清华园里，一袭青布大褂、戴老式眼镜的钱钟书遇到了清秀可人、娇俏玲珑的杨绛，“春风玉露一相逢，便胜却人间无数”。

那一面，两人都彼此难忘，钱钟书写信约杨绛再见面。

“我没有订婚。”一向清高孤傲的清华才子如是说。

“我也没有男朋友。”彼时，杨绛才貌双全，追求者众，被同学戏称为“七十二煞”。

这次见面，让两人的感情飞速升温，钱钟书有诗云：“颉眼空光忆当初，蔷薇新瓣浸醍醐，不知腼洗儿时面，曾取红花和雪无。”那天的杨绛，面若蔷薇，娇羞清新，很是美好。

从此，两人开始书信往来，甚至到了一天一封的热烈程度。对于文学同样的热爱，性格上相互的吸引，使得两人越走越近。他和她心中只有彼此，再无他人。

他们的相遇是月老早就牵好的红线，原来两人同是无锡人，都出自书香门第，小时候杨绛还跟着母亲，去过钱家呢，只是那时两人未能相见。不曾想，十几年后，会在清华园相逢，且爱上彼此。

注定相遇的人，无论错失多少光阴，都会相遇。

>02.叹别离，南北相思不相忘

1933年，钱钟书在清华毕业，因父亲在上海教书，他应父命去光华大学担任中文系主任。杨绛尚未毕业，两人一南一北，整日盼望着“云中谁寄锦书来”。

为了缓解相思之情，钱钟书作了很多古体诗，其中有一句是这样的“如此星辰如此月，与谁指点与谁看”。星辰璀璨，月光皎洁，只是身边少了佳人相伴，连读书也少了很多趣味，小别的恋人，饱受相思之苦。

钱钟书的家人并不知道杨绛的存在，但频繁的通信，让钱父有了好奇之心。有一天，钱钟书的父亲擅自拆阅了杨绛的来信。

恰逢杨绛在信中写道：“现在吾两人快乐无用，须两家父亲兄弟皆大欢喜，吾两人之快乐乃彻始终不受障碍。”钱父阅完，眉笑颜开，对杨绛大加赞赏，立刻回信，就这样定下了这个聪慧灵秀的儿媳妇。

自此，两人的爱情公布在两家人面前。他们是自由恋爱，却也是当地有声望的大户，免不了要走一遭“媒妁之言”。杨绛喜欢称钱钟书为“默存”，那是他的字；钱钟书则喜欢叫杨绛为“季康”，那是她的名。

订婚后的二人，再次劳燕分飞，他返回光华大学教书，她回清华园继续读书，在各自的领域内绽放着无限光华。

>03.燕双飞，远渡英法求学问

订婚一年后，钱钟书参加了教育部公费留学资格考试，当时英国文学只有一个名额，听说钱钟书要考，许多人吓的直接放弃了。不知这个段子的真假，但被许多人当做笑谈流传了下来。毫无悬念，钱钟书顺利拿取“庚子赔款”奖学金，将赴牛津求学。

闻此消息，杨绛自是极为高兴，牛津是追求文学人眼中的天堂，那里出了许多大家，莎翁、狄更斯等等，一个个名字都如雷贯耳。

几年前，杨绛由母校校长帮着申请到了美国威尔斯利女子学院的奖学金，但要自负生活费，她心疼父亲负担重，放弃了出国。“失之东隅，收之桑榆”，谁想，她去往清华，却邂逅了命定的爱人呢。

这次，钱钟书让她一同前往，她也不放心那个连蝴蝶结都不会打的他，但她还有一门大课没有考试，同老师商量后，以论文形式代替考试，提前毕业。来不及跟父母提前打招呼，她就回到了家中，父母见到她很是开心，两人婚事也提上议程。

同年七月，他们完婚。婚礼是每个人一生中最为难忘的，对钱杨二人而言，也不例外，而且他们的两场婚礼，娘家是西式的，钱家是中式的，既享受了西式的浪漫，也享受了中式的古典。婚礼是繁琐而劳累的，相爱的两人却言笑晏晏，眼神都要滴出蜜了。

世间最美好的事情，莫过于，结婚了，新郎是你，新娘恰巧是我。你看，上天多么眷顾他们。

一个月后，两人从上海出发，乘船去往英伦。海，一眼望不到头；风，猎猎地吹着。两个追求梦想的青年男女，第一次远离家乡，去向那不可知的国度，内心难免有些戚戚焉。还好，他们是两个人，还可以相互慰藉，相互依靠。

别看钱大才子学贯中西，通古博今，可是在生活上，尚处于幼稚园阶段，鞋子经常穿反，不会系鞋带，不会拿筷子。这不，刚到牛津的第一天，钱钟书就在下公交时摔了一跤，直接磕掉了半颗门牙。

他带着满嘴的血和半颗断牙，回到了在伦敦的居所，杨绛又急又心疼，在学医友人的指导下，去医院拔掉断牙，重新镶了新牙。可能，女人总是有母性的光辉吧，即使杨绛自小也是娇生惯养长大的，可她依然把钱钟书照顾的无微不至。

牛津的日子，是他们一生中难得的美好时光，经济不宽裕，精神却很享受，两人自由而惬意地遨游在文学殿堂里。他的课程排的满满的，她则自由穿梭在课堂和图书馆间。

牛津的图书馆古老而优雅，杨绛一个人占着一排书桌，边读书边做笔记，笔尖沙沙滑过素朴的纸面，窗外的阳光在她的身上投下淡淡的光晕。“如果有天堂，那一定是图书馆的模样。”那一定是杨绛那时心境的写照。

多年后，是否还会有人记得，有个穿着旗袍的美丽中国女子，曾出现在牛津的课堂旁听。

钱钟书拿到学位后，两人又启程前往巴黎大学，那是一个比牛津更为自由的学校，也更文艺和浪漫。在那里，他们迎来了爱情的结晶。

钱钟书这个原先连自己都不会照顾的人，早已学会了做很多饭菜。杨绛产后，他为了第一时间看到醒来的妻子，一天大汗淋漓地跑了四个来回。女儿的出生，为两个人带来了另一种欢乐。

令人捧腹的是，每次探望，钱钟书都会苦着脸汇报：“我做坏事了，打翻了墨水瓶，弄脏了房东家的桌布。”下一次，他说：“我不小心砸碎了台灯。”再一次，又苦着脸说：“我把门轴弄坏了一头。”

杨绛应该是哭笑不得的吧，她每次都笑眯眯地说：“不要紧，我会修。”回家后，他为她炖了鸡汤、剥了蚕豆，她也把一切损坏的东西恢复了原样。他们的爱情之花在生活的琐碎中，继续绽放着。

自1937年日本侵华战争全面爆发后，无锡、苏州也陷入混乱，许多人家都逃往上海。他们和家人的通信断断续续。杨绛心思一向细腻，她敏感地觉察到，家中来信很少有母亲的话语。终于，姐姐说出了实情，母亲在逃难时患重病去世了。

杨绛初为人母，才刚刚体会到孕育一个生命的艰辛，却失去了自己的母亲。那是她成年后，第一次体会到失去至亲的痛苦，悲恸万分。钱钟书在一旁细语安慰着，她则放声哭出所有伤痛。

后来，她在《我们仨》中写道，那时的她，还没意识到，悲苦能任情啼哭，还有爱人百般劝慰，是多么幸福。

担心国内的亲人，两人来不及完成学业，四处托人买到了船票，来时二等舱，归时三等舱，条件简陋了许多。由于匆忙，没有置备奶制品，钱瑗从胖胖的小人儿变得瘦弱，作为母亲的杨绛十分自责。

几经辗转，一家三口人回到了风雨飘摇的祖国，可迎接他们的却是又一次分离，一人前往昆明，一人前往上海。

>04.哀世事，相濡以沫共白头

杨绛带着女儿圆圆，跟着老父寄居在亲戚家。钱钟书则前往西南联大在昆明的学校执教，后又转往湘西蓝田师院任英文系主任。

两年后，钱钟书回沪探亲，由于种种原因，没再动身，一家人又聚在了一起。珍珠港事件爆发后，上海这座孤岛开始沉没。他对杨绛也说出了最动听的情话：“从今以后，咱们只有死别，不再生离。”

那应该是他们人生中第一个生活困顿的阶段，钱钟书在教会大学教课，杨绛在一所小学教课，同时写着剧本《称心如意》，都只是为了每个月的柴和米。

他们从未向生活低头，上海物资匮乏，米、面、油、煤什么都缺。有一次，他们买到三百斤的煤粉，暗自高兴了很久，因为煤粉纯度高，抵得上四五百斤煤球。


生活上的困难不怕，精神上却要时时担心。杨绛工作要坐电车跨过苏州河桥，每次日本兵上车，全车人都要起立，有一次她站起来晚了，被一个日本兵指点了半天，她大声反抗：“岂有此理！”过后很是后怕。但她性本高洁，从此宁愿绕道，也不愿再向日本人低头。

被困上海的日子，一部伟大的著作应运而生，就是后来的《围城》。“婚姻是一座围城，城外的人想进去，城里的人想出来”，多么精妙的比喻。钱钟书每天写着，杨绛每天读着，读到忍俊不禁处，二人常常对视一笑，也不说破，十足的默契。他写不下去的时候，她就在旁鼓励。

为了让他认真写作，为了节省开支，保姆回乡后她也没有再聘。一个大家闺秀，劈柴、烧煤、煮饭、洗衣，什么活都自己做。他在后来说，她是一个集妻子、情人、朋友于一身的女子。多么幸运，他拥有了她；多么幸运，她也拥有着他。

抗战胜利后，一家人没有出国或是去往香港，他们始终热爱着脚下的这片土地。解放后，两人双双前往清华工作，可是生活的磨难却不会就此停止。

先是接连的思想改造活动，后又是文革的动荡，夫妻二人先后被下放五七干校，身体上、精神上都饱受折磨。杨绛在《第一次下乡》《干校六记》中用轻松并略带调侃的文字记录了那段经历，文中没有哀怨，没有诉苦，却让人体会到个人命运在变幻时局前的渺小和无奈。

第一次下乡时，杨绛什么地方都住过，村民的热炕、冷炕甚至冰冷的木板。杨绛写道，许久没有吃过白米饭，有一次友人烦请房东做了米饭，食量很小的她竟连吃两碗。

她与钱钟书却从未断过书信。她说，那是他给她写过最好的情书，她却不敢保留。当一封封信在火光中化为灰烬，她大概是伤心的吧，却安慰自己早已把信都记在了心间，本来也只是他写给她一人读的。

下放五七干校，一去便是几年，日子也更苦。钱钟书被剃过阴阳头，杨绛被剪去过头发，还戴着大字帽被拉上台示众。即使这样，他们依然苦中作乐，这是他们在多年颠沛流离生活中历练出的智慧。

回京后，一家三口终于团圆。那段日子是他们一家难得在一起的时光，三人各自忙着工作，又时而交流，欢声笑语充斥着家中的每一个角落。杨绛常常说，女儿是她一生中最好的杰作，钱瑗像个精灵，活泼又懂事，一会儿跟老爸玩闹，一会儿又跟老妈嬉戏。他们仨，是家人，也是朋友，世间再难寻这样的家庭。

女儿钱瑗先走了，白发人送黑发人的痛，不是每个人都能承受的。杨绛一边要承受女儿的离去，一边还要照顾患病的丈夫。一年后，钱钟书离世，带走了她在人世间最后的依恋。

他们的婚姻持续了63年，经历过世间所有的考验，早已经超越生死，跳脱俗世了。

>05.忆往昔，她一人想念他们仨

女儿走了，丈夫也走了，带走了她人世间最后的依恋。杨绛是悲伤的，也是疲倦的，一切“如梦幻泡影”般消散了。她曾盼望化作一块“望夫石”，守望着逝去的爱人。三里河的寓所，物如昨，人却非，这个家随着三个人的失散，在她心里变成了客栈。

“我却觉得我这一生并不空虚，我活得很充实，也很有意思，因为有我们仨。” 她终究是杨绛，是一个历经世事，依然处变不惊的女性。

她开始整理丈夫和女儿的遗作，开始清点自己的心灵，欢乐与悲伤在她那里，都成为了过客。我们看到了一个女性身上散发出来的独特光辉，淡然、豁达、柔韧、乐观，这些品质像雨水一样，润物无声地洗涤着这个尘世的喧嚣与污浊。

虽是陋室，却德馨满屋。杨绛在晚年依然笔耕不辍，接连写出了《我们仨》《走到人生边上》等著作，用文字带领我们窥探人生真相。她还拿出自己与钱钟书部分稿酬，捐给清华，设立了“好读书”奖学金，并未以自己或丈夫名字命名。

任岁月缓缓流淌，她，一个人，在思念他们仨。

写在最后

他是风华绝代的才子，她是细腻有趣的才女；他下笔幽默诙谐、洞察世事，她下笔平淡如水、朴实无华。可这幽默平淡背后，隐藏的是他们波澜壮阔、暗流汹涌的一生。

青丝变白发，红颜染沧桑，两个人的爱情，三个人的亲情，最后只剩下一个老人，独自在原地回忆。她是孤独的，可她心里是满的，那里盛放着他、她、她的所有爱与往事。

现在，最后一位老人的生命之火也已熄灭，愿他们仨，今后不再分离。

他们用一生印证了“世间始终你好”的爱情，他们的故事，必将流转在人间，温润着世人干涸的心。',
  'groups' => 'Think',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '19',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000559s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001453s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 19 LIMIT 1 [ RunTime:0.000456s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 19 LIMIT 1 [ RunTime:0.000336s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000845s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000387s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000264s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000283s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=19,`p_id`=3,`title`='钱钟书和杨绛:有一种爱情叫“世间始终你好”\r',`content`='# 钱钟书和杨绛:有一种爱情叫“世间始终你好”\r\n世间，始终你好\r\n先生，一路走好。\r\n\r\n民国时期出过很多著名伉俪，钱钟书和杨绛是其中一对，他们的故事没有梁思成和林徽因、徐志摩和陆小曼那么错综复杂，也不像胡适和江冬秀，鲁迅和朱安那样包办婚姻，是很多人眼中理想的爱情。\r\n\r\n\r\n他们是幸运的，茫茫人海中，没有早一步，也没有晚一步，在彼此最美好的年华相遇。他说，她是最贤的妻，最才的女。他说，遇到她之前没想过结婚，娶她之后从未后悔过，她说她亦然。一路走来，几多坎坷，几多波折，他们眼里始终彼此最好。\r\n\r\n>01.初相逢，原来你也在这里\r\n\r\n那一天，春风十里吹正好，清华园里，一袭青布大褂、戴老式眼镜的钱钟书遇到了清秀可人、娇俏玲珑的杨绛，“春风玉露一相逢，便胜却人间无数”。\r\n\r\n那一面，两人都彼此难忘，钱钟书写信约杨绛再见面。\r\n\r\n“我没有订婚。”一向清高孤傲的清华才子如是说。\r\n\r\n“我也没有男朋友。”彼时，杨绛才貌双全，追求者众，被同学戏称为“七十二煞”。\r\n\r\n这次见面，让两人的感情飞速升温，钱钟书有诗云：“颉眼空光忆当初，蔷薇新瓣浸醍醐，不知腼洗儿时面，曾取红花和雪无。”那天的杨绛，面若蔷薇，娇羞清新，很是美好。\r\n\r\n从此，两人开始书信往来，甚至到了一天一封的热烈程度。对于文学同样的热爱，性格上相互的吸引，使得两人越走越近。他和她心中只有彼此，再无他人。\r\n\r\n他们的相遇是月老早就牵好的红线，原来两人同是无锡人，都出自书香门第，小时候杨绛还跟着母亲，去过钱家呢，只是那时两人未能相见。不曾想，十几年后，会在清华园相逢，且爱上彼此。\r\n\r\n注定相遇的人，无论错失多少光阴，都会相遇。\r\n\r\n>02.叹别离，南北相思不相忘\r\n\r\n1933年，钱钟书在清华毕业，因父亲在上海教书，他应父命去光华大学担任中文系主任。杨绛尚未毕业，两人一南一北，整日盼望着“云中谁寄锦书来”。\r\n\r\n为了缓解相思之情，钱钟书作了很多古体诗，其中有一句是这样的“如此星辰如此月，与谁指点与谁看”。星辰璀璨，月光皎洁，只是身边少了佳人相伴，连读书也少了很多趣味，小别的恋人，饱受相思之苦。\r\n\r\n钱钟书的家人并不知道杨绛的存在，但频繁的通信，让钱父有了好奇之心。有一天，钱钟书的父亲擅自拆阅了杨绛的来信。\r\n\r\n恰逢杨绛在信中写道：“现在吾两人快乐无用，须两家父亲兄弟皆大欢喜，吾两人之快乐乃彻始终不受障碍。”钱父阅完，眉笑颜开，对杨绛大加赞赏，立刻回信，就这样定下了这个聪慧灵秀的儿媳妇。\r\n\r\n自此，两人的爱情公布在两家人面前。他们是自由恋爱，却也是当地有声望的大户，免不了要走一遭“媒妁之言”。杨绛喜欢称钱钟书为“默存”，那是他的字；钱钟书则喜欢叫杨绛为“季康”，那是她的名。\r\n\r\n订婚后的二人，再次劳燕分飞，他返回光华大学教书，她回清华园继续读书，在各自的领域内绽放着无限光华。\r\n\r\n>03.燕双飞，远渡英法求学问\r\n\r\n订婚一年后，钱钟书参加了教育部公费留学资格考试，当时英国文学只有一个名额，听说钱钟书要考，许多人吓的直接放弃了。不知这个段子的真假，但被许多人当做笑谈流传了下来。毫无悬念，钱钟书顺利拿取“庚子赔款”奖学金，将赴牛津求学。\r\n\r\n闻此消息，杨绛自是极为高兴，牛津是追求文学人眼中的天堂，那里出了许多大家，莎翁、狄更斯等等，一个个名字都如雷贯耳。\r\n\r\n几年前，杨绛由母校校长帮着申请到了美国威尔斯利女子学院的奖学金，但要自负生活费，她心疼父亲负担重，放弃了出国。“失之东隅，收之桑榆”，谁想，她去往清华，却邂逅了命定的爱人呢。\r\n\r\n这次，钱钟书让她一同前往，她也不放心那个连蝴蝶结都不会打的他，但她还有一门大课没有考试，同老师商量后，以论文形式代替考试，提前毕业。来不及跟父母提前打招呼，她就回到了家中，父母见到她很是开心，两人婚事也提上议程。\r\n\r\n同年七月，他们完婚。婚礼是每个人一生中最为难忘的，对钱杨二人而言，也不例外，而且他们的两场婚礼，娘家是西式的，钱家是中式的，既享受了西式的浪漫，也享受了中式的古典。婚礼是繁琐而劳累的，相爱的两人却言笑晏晏，眼神都要滴出蜜了。\r\n\r\n世间最美好的事情，莫过于，结婚了，新郎是你，新娘恰巧是我。你看，上天多么眷顾他们。\r\n\r\n一个月后，两人从上海出发，乘船去往英伦。海，一眼望不到头；风，猎猎地吹着。两个追求梦想的青年男女，第一次远离家乡，去向那不可知的国度，内心难免有些戚戚焉。还好，他们是两个人，还可以相互慰藉，相互依靠。\r\n\r\n别看钱大才子学贯中西，通古博今，可是在生活上，尚处于幼稚园阶段，鞋子经常穿反，不会系鞋带，不会拿筷子。这不，刚到牛津的第一天，钱钟书就在下公交时摔了一跤，直接磕掉了半颗门牙。\r\n\r\n他带着满嘴的血和半颗断牙，回到了在伦敦的居所，杨绛又急又心疼，在学医友人的指导下，去医院拔掉断牙，重新镶了新牙。可能，女人总是有母性的光辉吧，即使杨绛自小也是娇生惯养长大的，可她依然把钱钟书照顾的无微不至。\r\n\r\n牛津的日子，是他们一生中难得的美好时光，经济不宽裕，精神却很享受，两人自由而惬意地遨游在文学殿堂里。他的课程排的满满的，她则自由穿梭在课堂和图书馆间。\r\n\r\n牛津的图书馆古老而优雅，杨绛一个人占着一排书桌，边读书边做笔记，笔尖沙沙滑过素朴的纸面，窗外的阳光在她的身上投下淡淡的光晕。“如果有天堂，那一定是图书馆的模样。”那一定是杨绛那时心境的写照。\r\n\r\n多年后，是否还会有人记得，有个穿着旗袍的美丽中国女子，曾出现在牛津的课堂旁听。\r\n\r\n钱钟书拿到学位后，两人又启程前往巴黎大学，那是一个比牛津更为自由的学校，也更文艺和浪漫。在那里，他们迎来了爱情的结晶。\r\n\r\n钱钟书这个原先连自己都不会照顾的人，早已学会了做很多饭菜。杨绛产后，他为了第一时间看到醒来的妻子，一天大汗淋漓地跑了四个来回。女儿的出生，为两个人带来了另一种欢乐。\r\n\r\n令人捧腹的是，每次探望，钱钟书都会苦着脸汇报：“我做坏事了，打翻了墨水瓶，弄脏了房东家的桌布。”下一次，他说：“我不小心砸碎了台灯。”再一次，又苦着脸说：“我把门轴弄坏了一头。”\r\n\r\n杨绛应该是哭笑不得的吧，她每次都笑眯眯地说：“不要紧，我会修。”回家后，他为她炖了鸡汤、剥了蚕豆，她也把一切损坏的东西恢复了原样。他们的爱情之花在生活的琐碎中，继续绽放着。\r\n\r\n自1937年日本侵华战争全面爆发后，无锡、苏州也陷入混乱，许多人家都逃往上海。他们和家人的通信断断续续。杨绛心思一向细腻，她敏感地觉察到，家中来信很少有母亲的话语。终于，姐姐说出了实情，母亲在逃难时患重病去世了。\r\n\r\n杨绛初为人母，才刚刚体会到孕育一个生命的艰辛，却失去了自己的母亲。那是她成年后，第一次体会到失去至亲的痛苦，悲恸万分。钱钟书在一旁细语安慰着，她则放声哭出所有伤痛。\r\n\r\n后来，她在《我们仨》中写道，那时的她，还没意识到，悲苦能任情啼哭，还有爱人百般劝慰，是多么幸福。\r\n\r\n担心国内的亲人，两人来不及完成学业，四处托人买到了船票，来时二等舱，归时三等舱，条件简陋了许多。由于匆忙，没有置备奶制品，钱瑗从胖胖的小人儿变得瘦弱，作为母亲的杨绛十分自责。\r\n\r\n几经辗转，一家三口人回到了风雨飘摇的祖国，可迎接他们的却是又一次分离，一人前往昆明，一人前往上海。\r\n\r\n>04.哀世事，相濡以沫共白头\r\n\r\n杨绛带着女儿圆圆，跟着老父寄居在亲戚家。钱钟书则前往西南联大在昆明的学校执教，后又转往湘西蓝田师院任英文系主任。\r\n\r\n两年后，钱钟书回沪探亲，由于种种原因，没再动身，一家人又聚在了一起。珍珠港事件爆发后，上海这座孤岛开始沉没。他对杨绛也说出了最动听的情话：“从今以后，咱们只有死别，不再生离。”\r\n\r\n那应该是他们人生中第一个生活困顿的阶段，钱钟书在教会大学教课，杨绛在一所小学教课，同时写着剧本《称心如意》，都只是为了每个月的柴和米。\r\n\r\n他们从未向生活低头，上海物资匮乏，米、面、油、煤什么都缺。有一次，他们买到三百斤的煤粉，暗自高兴了很久，因为煤粉纯度高，抵得上四五百斤煤球。\r\n\r\n\r\n生活上的困难不怕，精神上却要时时担心。杨绛工作要坐电车跨过苏州河桥，每次日本兵上车，全车人都要起立，有一次她站起来晚了，被一个日本兵指点了半天，她大声反抗：“岂有此理！”过后很是后怕。但她性本高洁，从此宁愿绕道，也不愿再向日本人低头。\r\n\r\n被困上海的日子，一部伟大的著作应运而生，就是后来的《围城》。“婚姻是一座围城，城外的人想进去，城里的人想出来”，多么精妙的比喻。钱钟书每天写着，杨绛每天读着，读到忍俊不禁处，二人常常对视一笑，也不说破，十足的默契。他写不下去的时候，她就在旁鼓励。\r\n\r\n为了让他认真写作，为了节省开支，保姆回乡后她也没有再聘。一个大家闺秀，劈柴、烧煤、煮饭、洗衣，什么活都自己做。他在后来说，她是一个集妻子、情人、朋友于一身的女子。多么幸运，他拥有了她；多么幸运，她也拥有着他。\r\n\r\n抗战胜利后，一家人没有出国或是去往香港，他们始终热爱着脚下的这片土地。解放后，两人双双前往清华工作，可是生活的磨难却不会就此停止。\r\n\r\n先是接连的思想改造活动，后又是文革的动荡，夫妻二人先后被下放五七干校，身体上、精神上都饱受折磨。杨绛在《第一次下乡》《干校六记》中用轻松并略带调侃的文字记录了那段经历，文中没有哀怨，没有诉苦，却让人体会到个人命运在变幻时局前的渺小和无奈。\r\n\r\n第一次下乡时，杨绛什么地方都住过，村民的热炕、冷炕甚至冰冷的木板。杨绛写道，许久没有吃过白米饭，有一次友人烦请房东做了米饭，食量很小的她竟连吃两碗。\r\n\r\n她与钱钟书却从未断过书信。她说，那是他给她写过最好的情书，她却不敢保留。当一封封信在火光中化为灰烬，她大概是伤心的吧，却安慰自己早已把信都记在了心间，本来也只是他写给她一人读的。\r\n\r\n下放五七干校，一去便是几年，日子也更苦。钱钟书被剃过阴阳头，杨绛被剪去过头发，还戴着大字帽被拉上台示众。即使这样，他们依然苦中作乐，这是他们在多年颠沛流离生活中历练出的智慧。\r\n\r\n回京后，一家三口终于团圆。那段日子是他们一家难得在一起的时光，三人各自忙着工作，又时而交流，欢声笑语充斥着家中的每一个角落。杨绛常常说，女儿是她一生中最好的杰作，钱瑗像个精灵，活泼又懂事，一会儿跟老爸玩闹，一会儿又跟老妈嬉戏。他们仨，是家人，也是朋友，世间再难寻这样的家庭。\r\n\r\n女儿钱瑗先走了，白发人送黑发人的痛，不是每个人都能承受的。杨绛一边要承受女儿的离去，一边还要照顾患病的丈夫。一年后，钱钟书离世，带走了她在人世间最后的依恋。\r\n\r\n他们的婚姻持续了63年，经历过世间所有的考验，早已经超越生死，跳脱俗世了。\r\n\r\n>05.忆往昔，她一人想念他们仨\r\n\r\n女儿走了，丈夫也走了，带走了她人世间最后的依恋。杨绛是悲伤的，也是疲倦的，一切“如梦幻泡影”般消散了。她曾盼望化作一块“望夫石”，守望着逝去的爱人。三里河的寓所，物如昨，人却非，这个家随着三个人的失散，在她心里变成了客栈。\r\n\r\n“我却觉得我这一生并不空虚，我活得很充实，也很有意思，因为有我们仨。” 她终究是杨绛，是一个历经世事，依然处变不惊的女性。\r\n\r\n她开始整理丈夫和女儿的遗作，开始清点自己的心灵，欢乐与悲伤在她那里，都成为了过客。我们看到了一个女性身上散发出来的独特光辉，淡然、豁达、柔韧、乐观，这些品质像雨水一样，润物无声地洗涤着这个尘世的喧嚣与污浊。\r\n\r\n虽是陋室，却德馨满屋。杨绛在晚年依然笔耕不辍，接连写出了《我们仨》《走到人生边上》等著作，用文字带领我们窥探人生真相。她还拿出自己与钱钟书部分稿酬，捐给清华，设立了“好读书”奖学金，并未以自己或丈夫名字命名。\r\n\r\n任岁月缓缓流淌，她，一个人，在思念他们仨。\r\n\r\n写在最后\r\n\r\n他是风华绝代的才子，她是细腻有趣的才女；他下笔幽默诙谐、洞察世事，她下笔平淡如水、朴实无华。可这幽默平淡背后，隐藏的是他们波澜壮阔、暗流汹涌的一生。\r\n\r\n青丝变白发，红颜染沧桑，两个人的爱情，三个人的亲情，最后只剩下一个老人，独自在原地回忆。她是孤独的，可她心里是满的，那里盛放着他、她、她的所有爱与往事。\r\n\r\n现在，最后一位老人的生命之火也已熄灭，愿他们仨，今后不再分离。\r\n\r\n他们用一生印证了“世间始终你好”的爱情，他们的故事，必将流转在人间，温润着世人干涸的心。',`groups`='Think',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 19 [ RunTime:0.000776s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Person' LIMIT 1 [ RunTime:0.001331s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=3  WHERE  `groups` = 'Person' [ RunTime:0.000462s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000924s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Think' [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-10-15T16:36:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/19.html
[ info ] qingrang.top/daily/admin/note/shownote/id/19.html [运行时间：0.051843s][吞吐率：19.29req/s] [内存消耗：2,011.52kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/19',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '19',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000414s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001380s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 19 LIMIT 1 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000978s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000279s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/20
[ info ] qingrang.top/daily/admin/note/editNote/id/20 [运行时间：0.085948s][吞吐率：11.63req/s] [内存消耗：2,033.29kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '20',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000470s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001387s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 20 LIMIT 1 [ RunTime:0.000427s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001045s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000340s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:04+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/21
[ info ] qingrang.top/daily/admin/note/editNote/id/21 [运行时间：0.059309s][吞吐率：16.86req/s] [内存消耗：2,065.64kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000485s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001261s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 21 LIMIT 1 [ RunTime:0.000546s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000985s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000278s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/18
[ info ] qingrang.top/daily/admin/note/editNote/id/18 [运行时间：0.054718s][吞吐率：18.28req/s] [内存消耗：2,036.04kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '18',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000483s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001246s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 18 LIMIT 1 [ RunTime:0.000427s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000872s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000386s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:26+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/20.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/20.html [运行时间：0.061843s][吞吐率：16.17req/s] [内存消耗：2,079.89kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12337',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/20',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 很久很久以前，神医扁鹊说，有六种病是治不好的……

>《六不治》是否有一定的科学依据？

扁鹊的“六不治”并不是不给病人治，而是治不好、不好治。有个成语叫“不治之症”指的是不能治好的病，不是不能让医生治的病。

而且，扁鹊的六不治一说出自《史记.扁鹊仓公列传》，全文是：
人之所病，病疾多；而医之所病，病道少。故病有六不治：骄恣不论于理，一不治也；轻身重财，二不治也；衣食不能适，三不治也；阴阳并，脏气不定，四不治也；形羸不能服药，五不治也，信巫不信医，六不治也。有此一者，则重难治也。

意思是说，人们担心的是病太多，而医生担心的是治病的方法太少。有六种难以治疗的情况：骄傲不讲理的是第一种（这一定是受蔡桓公刺激才顿悟的道理），舍命不舍财的是第二种（你说吃人参能活，他舍不得买，医生有啥办法），温饱不能保证的是第三种（比如这病就是饿的、冻的，病人穷的吃不上饭，冬天穿不暖衣服，医生怎么治），不知道患者什么情况，不了解病理变化的是第四种（这病怎么得的不知道，怎么回事不知道，那医生怎么能治好呢，现在也有很多诊断不明的病，也很难治好。）病人重的吃不进药，扎不上输液，做不了手术的是第五种（危重病人，吃啥吐啥，血管都是瘪的，输液扎不上，更别提做手术了，这种情况治好的可能性就很小了）得了病不看病，不听医生话，去烧香拜佛，求神请仙的是第六种（任你治病手段高超，我就是不找你看，我天天对着基督耶稣念阿弥陀佛，带着十字架背金刚经，你医生能治好我吗？）而且，大家看到“则重难治也”这几个字了吗？说明扁鹊自己在后面总结前六种“不治之症”是很重的难以治好的情况。故并不能认为这是扁鹊在告诉大家不要去给这六种情况治病。

另外，史记是谁写的大家都知道，司马迁没有黑扁鹊的理由（他们不同年代），而且这篇全文都是在讲述扁鹊行医如何神奇，对各种病人态度积极。“六不治”这段是写在“扁鹊见蔡桓公”下面，意在突出神医不但知道哪些病容易治，也知道哪些病不容易治，以告诫读者避免把自己陷入这六种情况。

此外，我国文言文中的某些词语意思本来就和白话文中的不一样，像“不治”一词，除了在“六不治”中出现，在其他的地方也经常出现，它们的意思也不一样，除了前文提到的“不治之症”和“六不治”中的“不治”是指“不好治”以外，有句话叫做“圣人不治已病治未病，不治已乱治未乱”，这句话中的“不治”是指“不仅仅治”而不是“不可治、不去治”，如果理解为”不可治、不去治“那圣人成混蛋了，放着有病的不治治没病的，那有病的怎么办？等死吗？这还能叫圣人？那么如果古人确实需要描述“不可治”时怎么说呢？答案是他们就说不可治，例如有这么一段话“五脏之有疾也，譬犹刺也……刺虽久，犹可拔也……疾虽久，犹可毕也，言不可治者，未得其本也。”（说治不好不要去治了的人，是因为没有了解到根本原因。）

现在很多人甚至个别媒体都把“扁鹊六不治”当成是对六种情况扁鹊不给治，这实在是让扁鹊背了个大黑锅，估计在九泉之下他老人家要是知道了得找司马迁玩命去，题主对四、五两项产生疑问，我猜也是误会扁鹊了。扁鹊作为一个历经 N 个朝代都被奉为神医的形象，如果有这种看人下菜碟儿的言论，早就被打倒了。现在医患关系紧张，确有很多如”六不治“中所描述的患者（尤其是第一条），但拿”六不治“来作为医生挑拣病人的标准，那是万万说不过去的。',
  'groups' => 'Think',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '20',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000567s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001300s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 20 LIMIT 1 [ RunTime:0.000490s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 20 LIMIT 1 [ RunTime:0.000353s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001055s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000409s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000331s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000274s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=20,`p_id`=3,`title`='很久很久以前，神医扁鹊说，有六种病是治不好的……\r',`content`='# 很久很久以前，神医扁鹊说，有六种病是治不好的……\r\n\r\n>《六不治》是否有一定的科学依据？\r\n\r\n扁鹊的“六不治”并不是不给病人治，而是治不好、不好治。有个成语叫“不治之症”指的是不能治好的病，不是不能让医生治的病。\r\n\r\n而且，扁鹊的六不治一说出自《史记.扁鹊仓公列传》，全文是：\r\n人之所病，病疾多；而医之所病，病道少。故病有六不治：骄恣不论于理，一不治也；轻身重财，二不治也；衣食不能适，三不治也；阴阳并，脏气不定，四不治也；形羸不能服药，五不治也，信巫不信医，六不治也。有此一者，则重难治也。\r\n\r\n意思是说，人们担心的是病太多，而医生担心的是治病的方法太少。有六种难以治疗的情况：骄傲不讲理的是第一种（这一定是受蔡桓公刺激才顿悟的道理），舍命不舍财的是第二种（你说吃人参能活，他舍不得买，医生有啥办法），温饱不能保证的是第三种（比如这病就是饿的、冻的，病人穷的吃不上饭，冬天穿不暖衣服，医生怎么治），不知道患者什么情况，不了解病理变化的是第四种（这病怎么得的不知道，怎么回事不知道，那医生怎么能治好呢，现在也有很多诊断不明的病，也很难治好。）病人重的吃不进药，扎不上输液，做不了手术的是第五种（危重病人，吃啥吐啥，血管都是瘪的，输液扎不上，更别提做手术了，这种情况治好的可能性就很小了）得了病不看病，不听医生话，去烧香拜佛，求神请仙的是第六种（任你治病手段高超，我就是不找你看，我天天对着基督耶稣念阿弥陀佛，带着十字架背金刚经，你医生能治好我吗？）而且，大家看到“则重难治也”这几个字了吗？说明扁鹊自己在后面总结前六种“不治之症”是很重的难以治好的情况。故并不能认为这是扁鹊在告诉大家不要去给这六种情况治病。\r\n\r\n另外，史记是谁写的大家都知道，司马迁没有黑扁鹊的理由（他们不同年代），而且这篇全文都是在讲述扁鹊行医如何神奇，对各种病人态度积极。“六不治”这段是写在“扁鹊见蔡桓公”下面，意在突出神医不但知道哪些病容易治，也知道哪些病不容易治，以告诫读者避免把自己陷入这六种情况。\r\n\r\n此外，我国文言文中的某些词语意思本来就和白话文中的不一样，像“不治”一词，除了在“六不治”中出现，在其他的地方也经常出现，它们的意思也不一样，除了前文提到的“不治之症”和“六不治”中的“不治”是指“不好治”以外，有句话叫做“圣人不治已病治未病，不治已乱治未乱”，这句话中的“不治”是指“不仅仅治”而不是“不可治、不去治”，如果理解为”不可治、不去治“那圣人成混蛋了，放着有病的不治治没病的，那有病的怎么办？等死吗？这还能叫圣人？那么如果古人确实需要描述“不可治”时怎么说呢？答案是他们就说不可治，例如有这么一段话“五脏之有疾也，譬犹刺也……刺虽久，犹可拔也……疾虽久，犹可毕也，言不可治者，未得其本也。”（说治不好不要去治了的人，是因为没有了解到根本原因。）\r\n\r\n现在很多人甚至个别媒体都把“扁鹊六不治”当成是对六种情况扁鹊不给治，这实在是让扁鹊背了个大黑锅，估计在九泉之下他老人家要是知道了得找司马迁玩命去，题主对四、五两项产生疑问，我猜也是误会扁鹊了。扁鹊作为一个历经 N 个朝代都被奉为神医的形象，如果有这种看人下菜碟儿的言论，早就被打倒了。现在医患关系紧张，确有很多如”六不治“中所描述的患者（尤其是第一条），但拿”六不治“来作为医生挑拣病人的标准，那是万万说不过去的。',`groups`='Think',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 20 [ RunTime:0.000525s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Person' LIMIT 1 [ RunTime:0.000959s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=2  WHERE  `groups` = 'Person' [ RunTime:0.000497s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.001045s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=18  WHERE  `groups` = 'Think' [ RunTime:0.000394s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/20.html
[ info ] qingrang.top/daily/admin/note/shownote/id/20.html [运行时间：0.053456s][吞吐率：18.71req/s] [内存消耗：1,985.25kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/20',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '20',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000468s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001394s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 20 LIMIT 1 [ RunTime:0.000408s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000893s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000276s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/21.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/21.html [运行时间：0.071742s][吞吐率：13.94req/s] [内存消耗：2,212.48kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '62528',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/21',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 铁血男儿辛弃疾告诉你，什么叫兄弟
女人有闺蜜，男人有兄弟。

你可以给“兄弟”下一千个定义，可是在人称“词中之龙”的辛弃疾眼里，兄弟，就是你独自喝闷酒的时候，一定也为他准备一个杯子放在那里的那个人。

此刻，公元1207年的十月夜空，繁星点点。

江西上饶铅（yán）山的瓢泉山庄，辛弃疾在独自喝着酒，他的对面就放了一个空杯子，像是在等谁。

他老啦，已经68岁了，年轻时的“建功立业、报国杀贼”的梦想，终其一生也没有实现。

他感到心里一阵难受，忽然起身，抓起挂在墙壁上的那把陪伴了他多年的宝剑，挑亮那在微风中摇曳的烛火，细细端详。

醉眼朦胧中，他仿佛看到苍穹之下，一袭白衣的自己手舞宝剑，时光彷佛又让他回到了少年时代，又带他回到了那金戈铁马的峥嵘岁月。

往事就像是电影里的蒙太奇，一幕幕从眼前滑过，那些年，那些事，那些人……

还有——

兄弟。

1、

第一个从辛弃疾眼前闪现的这个兄弟，叫党怀英。

我们知道辛弃疾和苏轼是一个豪放词派的组合，叫“苏辛”；我们还知道辛弃疾和李清照是山东济南的老乡组合，叫“济南二安”——辛弃疾，字幼安；李清照，字易安。

他们俩在南宋时期，一个豪放派掌门，一个婉约派代表，是济南人民的骄傲。

但是我们却很少听说，辛弃疾和党怀英也是一个组合，叫“辛党”。党怀英是泰安人，他们求师于安徽亳(bó)州名士刘瞻，是同学。

他们都出生在金朝，1127年历史上著名的“靖康之变”后北宋灭亡，宋高宗赵构即位，南宋王朝建立，女真人统治了黄河以北地区。

辛弃疾，1140年5月28日出生，他很小的时候没有了父亲，爷爷辛赞为他取名“辛弃疾”，有仿照“霍去病”将军之意。

在爷爷的影响下，辛弃疾从小就练剑，才十六岁就已经长到了一米八多，从小习武的他一身健硕的肌肉，浑身散发出一种阳刚之气。

据说刘瞻最喜欢的学生就是党怀英和辛弃疾，认为这两个人将来一定会在文学上有成就。事实证明，刘老师的眼光不错。

无奈这两个学生虽然都很优秀，志向却完全不同。

党怀英希望将来自己像孔子教导的那样“学而优则仕”。

刘老师其实更看重辛弃疾，因为这个学生很善于填词，他填词总感觉像是顺手拈来，一些俚语啦、甚至是“之乎者也”之类的虚词都敢随意填到词里来，而且读起来丝毫没有违和感。

刘老师觉得这个孩子很有可能是苏东坡第二，可是辛弃疾却说他的志向就八个字：

建功立业，报国杀贼！

刘老师觉得很遗憾。

脾气火爆的辛弃疾骂党怀英“软骨头”，文质彬彬的党怀英急了，他骂辛弃疾是“脑子进了水的傻蛋”。

他们俩狠狠地打了一架，结果22岁的党怀英输给了16岁的辛弃疾。

之后党怀英擦着嘴角的血瞪着辛弃疾说：“你就等着走岳飞的老路吧！”

一提起岳飞，两个人不打架了，抱头痛哭了一场。

谁都知道抗金英雄岳飞当年带领他的岳家军打过了黄河，眼看收复中原有望，却被昏庸的宋高宗用十二道金牌召回，回去后就被奸相秦桧用“莫须有”的罪名害死在风波亭。

岳飞临死前在风波亭写下了八个字：天日昭昭，天日昭昭！

那一年，辛弃疾刚刚两岁。如果辛弃疾投奔南宋，不还是投奔了窝囊的宋高宗和阴险的秦桧吗？

党怀英说：“一切要顺其自然，这是老庄教给我们的。上天既然要宋朝分裂，那么我只做好我该做的事情。”

后来党怀英果然成为金朝时期的文坛领袖，在文学、史学、书法上都颇有建树。

辛弃疾不，他说梦想就是用来实现的，实现不了，至少他也为此而折腾过，绝不会后悔。

之后辛弃疾投奔南宋，一生郁郁不得志。没有完成他报国杀贼的梦想，却无心插柳柳成荫，在填词方面，可谓南宋第一，无意中实现了老师的愿望。

辛弃疾和党怀英，他们旗鼓相当却有着不同的方向，一起经历了一场遍体鳞伤的青葱岁月，然后互道珍重，此后的人生不再有任何交集。

辛弃疾曾经写过一首词《贺新郎·同父见和再用韵答之》，里面有这样两句话流传甚广：

男儿到死心如铁，看试手，补天裂！
这就是辛弃疾，即使到死，他都永不后悔。哪怕是补天这样的事情，难度再大，也一定要坚持到底。

辛弃疾知道，党怀英一定会理解他的选择，因为他是兄弟。

当年天真的声音又出现在回忆里，而如今却变成了最遥远的距离，他们虽然渐行渐远，却仍然是彼此心中的好兄弟。

铁血男儿辛弃疾告诉你：兄弟，是虽然和你意见不一致、和你吵得面红耳赤甚至大打出手，却依然会尊重你选择的那个人。



2、



回忆到这里，辛弃疾叹了口气，他抚摸着那把已经生锈的剑，忍不住大声吟诵起他写的一首词来：

鹧鸪天

壮岁旌旗拥万夫，锦檐突骑渡江初。燕兵夜娖（chuò）银胡,汉箭朝飞金仆姑。

追往事，叹今吾，春风不染白髭须。却将万宇平戎策，换得东家种树书。
“壮岁旌旗拥万夫”，那时的他，血气方刚无所畏惧，才刚刚22岁就拉起了一支两千余人的反金队伍。

辛弃疾没有想到，他会和一个大老粗做兄弟。

他是个农民，五大三粗大嗓门，就是大字不识一个，甚至还差点杀了自己。然而就是他，让自己甘愿为他把性命交出来都在所不辞。

这个人，叫耿京。

那时海贼王完颜亮，啊不对，是海陵王完颜亮，刚刚推翻了金熙宗自己做了皇帝，听说临安风景秀丽，野心勃勃地打算打过江去，他打的如意算盘是：

提兵百万西湖上，立马吴山第一峰。

早就对金朝的各种苛捐杂税、民族歧视不满的汉人此时纷纷起兵造反，耿京就是众多造反队伍中的一个，他三十多岁正当年，很短的时间内就聚集了二十多万人，于是辛弃疾投奔他而去。

北方男人多孔武，山东男子更重义。

他们一见面就惺惺相惜，耿京佩服辛弃疾的文韬武略，辛弃疾佩服耿京的敢做敢闯，于是辛弃疾就在他手下做了秘书。

他们日日在一起研究带兵打仗，培养了深厚的革命友情。

谁知这时辛弃疾推荐来的和尚义端，偷了辛弃疾保管的义军大印跑了，把耿京急得拿起刀要杀他，但是辛弃疾立马请缨，追到义端杀了他拿回大印。

他们之后彼此间的共同信任验证了这句话：与你相遇，多少风雨，风雨之后的彩虹更加美丽。

他们决定带着起义军渡过黄河去投奔南宋，这在外面漂着就像没娘的孩子一样，滋味不好受呀！

辛弃疾前往临安，不辱使命、奉表归宋，不料他完成任务北还时，听说叛徒张安国为了一顶济州知州的乌纱帽暗杀了耿京，投降金人。

“锦檐突骑渡江初”，那是他听说耿京被杀之后，内心沸腾着的愤怒、一定为兄弟报仇的热血使他锦衣快马，带领50人冲进50000人的队伍，活捉张安国，日夜兼程南奔，明正国法。

50 VS 50000!

23岁！是考研的年龄？是找工作的年龄？

然而辛弃疾已经为了曾经披星戴月的日子、为了那刀口舔血的兄弟，不绝望不犹豫，在广阔天地里杀出一条血路，背负着两个人共同的梦想，朝着梦中的朝阳,踏步向前，永不回头。

铁血男儿辛弃疾告诉你：“兄弟”这两个字，不是用嘴巴来说说而已的，他是一个男人的的诺言，是心跳多久就要彼此肝胆相照多久的纯爷们儿。

3、

投奔宋高宗、杀了张安国的辛弃疾虽然在久已疲软的南宋引起一阵轰动，但并没有受到重用，他还有着一个不尴不尬的身份：归正人。

辛弃疾并不在乎大家怎么看他，也不在乎宋高宗只是给了他一个江阴签判的小官来做，反正他才二十多岁，有着大把的青春可以让他支撑他的梦想。

一辈子还长着呢，总有一天可以实现愿望的，他天真地想。

机会来了，曾经被金人打到海上漂泊都不敢回击的宋高宗退位了！新上任的这个宋孝宗表现出了雄心勃勃、想要恢复失地、报仇雪耻的锐气，甚至还为岳飞平了反。

血气方刚的辛弃疾，马上提笔写了《美芹十论》、《九议》等有关抗金北伐的建议，论内容，这些文章简直可以获得军事论文一等奖。

但是由于辛弃疾太不懂得官场的那些潜规则，不懂得去依靠攀附那些能在皇帝面前说的上话的人，他的满腔热血被人认为是锋芒毕露、狂妄自大，于是他不但没有进入到统治集团的核心，反而被先后派到江西、湖北、湖南等地担任转运使、安抚使一类重要的地方官职，去治理荒政、整顿治安去了。

辛弃疾干得很出色，一度朝廷只要有了棘手的事摆平不了的，都找这个山东大汉来解决。只要辛弃疾出马，立即分分钟搞定。

就这样，他曾经拥有的大把青春就像是握在手里的沙子，一点一点地流逝了，蹉跎岁月中，他走到了中年。

很多人变了，很多事变了，然而他“建功立业、报国杀贼”的梦想没有变；

故乡离开了，年华逝去了，然而他“刚拙自信、不为所容”的脾气没有改。

也许是太了解自己容易得罪人的性格不好改变了吧，也许是内心觉得北伐无望了吧，辛弃疾开始考虑在江南定居。

1181年，41岁的辛弃疾在江西做知府时，他看上了上饶的带湖，根据带湖四周的地形地势，亲自设计了“高处建舍、低处辟田”的庄园格局，并对家人说：“人生在勤，当以力以田为先”，因此，他把带湖庄园取名为“稼轩”，并为自己取号曰“稼轩居士”。

辛弃疾的预感是对的，他当年冬天就遭到弹劾，于是他来到带湖新居，开始了他长达二十年的闲居生活。

这就意味着他四十一岁就退休了！有房有车有钱有闲，这是多少人梦寐以求的生活！

那么就来填填词吧，没有了俗务的干扰，年少时的业余爱好也该捡起来了。

可以先晒晒自己的和睦家庭：

大儿锄豆溪东，中儿正织鸡笼，最喜小儿无赖，溪头卧剥莲蓬。——《清平乐·村居》

可以写写醉酒后的憨态：

昨夜松边醉倒，问松“我醉何如”？只疑松动要来扶，以手推松曰：去！——《西江月·遣兴》

再自嘲一下自己的狂态：

不恨古人吾不见，恨古人不见吾狂耳。知我者，二三子。——《贺新郎》

也可以写写爱情：

众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。——《青玉案·元夕》

偶尔卖卖萌：

我见青山多妩媚，料青山，见我应如是。情与貌，略相似。——《贺新郎》

青山啊青山，在我眼里你是那样妩媚，在你的眼里，我是不是也很妩媚呢？我看在情感和外貌上，咱俩挺像。好，就这么定了，咱俩最像！

妩媚？你能想像这个词居然出自一个山东大汉之口？吃惯了煎饼大葱的辛弃疾，来到这温婉的江南，每天吃着大米饭，也变得如此妩媚了呢！

当然，最可爱的还是这首：

西江月·夜行黄沙道中

明月别枝惊鹊，清风半夜鸣蝉。稻花香里说丰年，听取蛙声一片。

七八个星天外，两三点雨山前。旧时茅店社林边，路转溪桥忽见。
忽然遭遇说来就来的雨点，想找个地方躲一躲，可是明明记得原来社林边有个茅店的，怎么找不到了呢？结果过了这座小桥，转个了弯，哈哈，原来你在这里！

唔，满脸胡子的大男人，你还是拿把剑吧，这样感觉人生才是真实的。

如果，日子就这样一直过下去，不也挺幸福的吗？

可是对于一个有梦想的人而言，他表面幸福快乐，可是内心却很痛苦。

不知我者谓我喜乐悠闲，知我者谓我心似油煎。

终于，知己出现了。

4、

当辛弃疾写下“休去倚危栏，斜阳正在，烟柳断肠处”（《摸鱼儿》），对南宋朝廷表示不满的时候，他写下了“遗民泪尽胡尘里，南望王师又一年”（《秋夜将晓出篱门迎凉有感》）；

当辛弃疾写下“把吴钩看了，栏杆拍遍，无人会、登临意”（《水龙吟·登建康赏心亭》）来表达他报国无路、壮志难酬的悲愤时，他写下了“夜视太白收光芒，报国欲死无战场”（《陇头水》）；

当辛弃疾回忆着“想当年，金戈铁马，气吞万里如虎”（《永遇乐·京口北固亭怀古》）的豪迈，他写下了“夜阑卧听风吹雨，铁马冰河入梦来”（《十一月四日风雨大作》）；

当辛弃疾借古讽今，只好把心放在古人那里，写下“天下英雄谁敌手？曹刘。生子当如孙仲谋”（《南乡子·登京口北固亭有怀》），他写下了“出师一表真名世，千载谁堪伯仲间”（《书愤》）；

甚至辛弃疾迷路“旧时茅店社林边，路转溪桥忽见”（《西江月·夜行黄沙道中》），他也会变路痴：“山重水复疑无路，柳暗花明又一村”（《游山西村》）；

辛弃疾发愁：“少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。而今识尽愁滋味，欲说还休。欲说还休，却道天凉好个秋”（《丑奴儿》），他也“闲愁如飞雪，入酒即消融。好花如故人，一笑杯自空”（《对酒》）；

……

这个人，就是南宋著名爱国诗人——陆游。

如果是你，你远离家乡在外漂泊，你内心苦闷无人理解，你所做的一切都被别人当笑话来看，你会如何？

那么，当你知道有一个人，他和你做着同样的事，有着一样的梦想，写着主题相似的文字，你又会如何？

是的，我不是一个人在战斗。泪湿双眸，才发现，原来自己并不那么孤单。

可是，命运给他们开了个大大的玩笑，让他们这两位互为知己的人在1203年才相遇。那一年，浙江绍兴山阴一所破旧的草堂边，两位白发苍苍、精神矍铄的老人相遇了，当时辛弃疾63岁，而陆游，78岁。

感谢苍天，终于让这两位同样伟大的诗人相遇了。就像李白和杜甫在唐朝相遇一样，如果南宋的历史上陆游和辛弃疾居然没有见过面，那将是怎样的一种遗憾！

陆游文采飞扬，辛弃疾才情出众，在度过了大半个人生之后，此时相见，真是欲说还休，相见恨晚。

金风玉露一相逢，便胜却人间无数。

此刻，他们紧紧握着彼此的手，同时喊了一声：兄弟！然后泪流满面。

是的，兄弟。

他们不仅经历相似，而且性情相同，他们都不顾自己可能会受到牵连的后果，去参加了被朝廷斥之为“伪学魁首”的朱熹的葬礼。

朱熹，这个南宋著名的理学家、哲学家，为我们留下了“问渠那得清如许，为有源头活水来”、“业精于勤荒于嬉，行成于思毁于随”等大量精神财富的人，在他去世之后，甚至连他的学生都怕受到牵连，很多人都不敢去为他送葬。

朱熹说过：“朋友，以义合者。”

他们都是朱熹的朋友。

辛弃疾看着陆游，问他：“廉颇老矣，尚能饭否？”（《永遇乐·登京口北固亭有怀》）

陆游叹了口气回答他：“此生谁料，心在天山，身老沧州。”（《诉衷情》）

什么叫心意相投、惺惺相惜？什么叫岁月峥嵘、热血沸腾？什么叫千杯不醉、万语嫌少？

这一切，在他63岁那一年，他能明白了。

金弓醉卧马，铁骨冰冻山，敢问天下义，几人如此般。

铁血男儿辛弃疾告诉你：兄弟就像是月亮旁边的那颗星星，有时不一定看得到，但他却始终在默默地关注着你，不离不弃。

5、

还有一个“有事一起扛，无事一起狂”的兄弟，他叫陈亮，字同甫。

物以类聚、人以群分，此话一点都不假。这个人超级豪迈、超级有才华、超级喜欢谈兵。

1188年冬天，太上皇宋高宗终于驾崩，这让很多人看到了北伐的希望，仰慕辛弃疾的陈亮，约上朱熹，日夜兼程800里来见他，要和他商讨光复大计。

但是朱熹没有来，急性子的陈亮不等他了，自己去找辛弃疾。

那时辛弃疾的带湖山庄着火，他新建了一所瓢泉山庄，陈亮要经过一座小桥，可是他骑的那匹马到桥上不走了，陈亮“驾驾驾”了好几次它还不走。

你们猜陈亮接下来做了一件什么事？抽出刀来，砍下马头，看也不看一眼，自己过桥去了。

这让站在桥那头等他的辛弃疾惊呆了，陈亮看着辛弃疾张大的嘴说：“别看了，剽悍的人生不需要解释。朱熹那个老头儿不来正好，咱俩好好谈谈！”

正生着病的辛弃疾瞬间被陈亮的热情点燃了，他全程陪着陈亮“憩鹅湖之清阴，酌瓢泉而共饮”，这两个好战主义者纵论时局、谋划兵事、慷慨纵横，好像他们就是手握千军万马的将军，明天就可以挂帅出征一样。

说到激昂处，这两个热血男儿禁不住放声高歌，连楼头的积雪也被震落了。

幸亏他们住的不是单元房，否则一定要有人告他俩扰民。

陈亮住了十几天后告辞，这次不是陈亮狂了，轮到辛弃疾狂。

他舍不得陈亮走，思来想去又追了出去，无奈一场大雪阻住了他的脚步。

辛弃疾，从来没有想过他会为一个男人而如此牵挂，也没有想过他会为一个如此疯狂的男人一口气写下五首《贺新郎》。

一场鹅湖会，五首贺新郎，“男儿到死心如铁”、“男儿何用伤离别”，

写尽了好男儿的英雄本色和忠肝义胆。

陈亮回去后，一次被人诬陷入狱。辛弃疾知道后，和朱熹等多位朋友营救他出狱。

1194年，陈亮去世，享年五十二岁。

伯牙弦绝，一语成谶。“铸就而今相思错，料当初费劲人间铁。长夜笛，莫吹裂！”

英雄气、才子情，若把相思熔尽，人间铁岂能够！曾经的金戈铁马，如今的闲居乡野，从此后，弦断无人听！

铁血男儿辛弃疾告诉你：兄弟，是英雄与英雄间的惺惺相惜，是自身气质的互相吸引，是“今生兄弟两个姓，来世兄弟一个娘”的至亲至爱。

6、

辛弃疾抚摸着手里的宝剑，忽然他起身携剑来到屋外。

十月夜空，繁星点点，苍穹之下，一袭白衣的辛弃疾一边舞剑一边大声吟诵着在他心里徘徊了很久的一首词：

破阵子·为陈同甫赋壮词以寄之

醉里挑灯看剑，梦回吹角连营。八百里分麾下炙，五十弦翻塞外声，沙场秋点兵。

马作的卢飞快，弓如霹雳弦惊。了却君王天下事，嬴得生前身后名，可怜白发生！
吟罢，他为对面的那个空杯子倒满酒，举起手中的酒杯说声“干”，然后一饮而尽。

他举起手中的宝剑，大喊三声：“杀贼！杀贼！杀贼！”然后倒地身亡。

在辛弃疾辞世后不到三年，1210年春天，85岁的诗人陆游追随他的好兄弟而去，留下了不朽的千古绝唱：

>　　　　　　　示儿
死去元知万事空，但悲不见九州同。
王师北定中原日，家祭无忘告乃翁。
辛弃疾死后不到百年，1279年，南宋灭亡。

分裂的南宋王朝，长期处于金国、蒙古等外族入侵的威胁之下，造就了许多爱国志士、民族英雄。

辛弃疾，不知道他在大喊“杀贼”的时候内心是怎样的一种伤痛，他最终没有实现他的梦想，但是他并没有在这世上白白来过，在这广阔的天地里，他有一群肝胆相照的兄弟和他共同演绎了南宋王朝的——英雄本色。

这辈子，值了。',
  'groups' => 'Think',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000568s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001546s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 21 LIMIT 1 [ RunTime:0.000480s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 21 LIMIT 1 [ RunTime:0.000324s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001115s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000343s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000525s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000350s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=21,`p_id`=3,`title`='铁血男儿辛弃疾告诉你，什么叫兄弟\r',`content`='# 铁血男儿辛弃疾告诉你，什么叫兄弟\r\n女人有闺蜜，男人有兄弟。\r\n\r\n你可以给“兄弟”下一千个定义，可是在人称“词中之龙”的辛弃疾眼里，兄弟，就是你独自喝闷酒的时候，一定也为他准备一个杯子放在那里的那个人。\r\n\r\n此刻，公元1207年的十月夜空，繁星点点。\r\n\r\n江西上饶铅（yán）山的瓢泉山庄，辛弃疾在独自喝着酒，他的对面就放了一个空杯子，像是在等谁。\r\n\r\n他老啦，已经68岁了，年轻时的“建功立业、报国杀贼”的梦想，终其一生也没有实现。\r\n\r\n他感到心里一阵难受，忽然起身，抓起挂在墙壁上的那把陪伴了他多年的宝剑，挑亮那在微风中摇曳的烛火，细细端详。\r\n\r\n醉眼朦胧中，他仿佛看到苍穹之下，一袭白衣的自己手舞宝剑，时光彷佛又让他回到了少年时代，又带他回到了那金戈铁马的峥嵘岁月。\r\n\r\n往事就像是电影里的蒙太奇，一幕幕从眼前滑过，那些年，那些事，那些人……\r\n\r\n还有——\r\n\r\n兄弟。\r\n\r\n1、\r\n\r\n第一个从辛弃疾眼前闪现的这个兄弟，叫党怀英。\r\n\r\n我们知道辛弃疾和苏轼是一个豪放词派的组合，叫“苏辛”；我们还知道辛弃疾和李清照是山东济南的老乡组合，叫“济南二安”——辛弃疾，字幼安；李清照，字易安。\r\n\r\n他们俩在南宋时期，一个豪放派掌门，一个婉约派代表，是济南人民的骄傲。\r\n\r\n但是我们却很少听说，辛弃疾和党怀英也是一个组合，叫“辛党”。党怀英是泰安人，他们求师于安徽亳(bó)州名士刘瞻，是同学。\r\n\r\n他们都出生在金朝，1127年历史上著名的“靖康之变”后北宋灭亡，宋高宗赵构即位，南宋王朝建立，女真人统治了黄河以北地区。\r\n\r\n辛弃疾，1140年5月28日出生，他很小的时候没有了父亲，爷爷辛赞为他取名“辛弃疾”，有仿照“霍去病”将军之意。\r\n\r\n在爷爷的影响下，辛弃疾从小就练剑，才十六岁就已经长到了一米八多，从小习武的他一身健硕的肌肉，浑身散发出一种阳刚之气。\r\n\r\n据说刘瞻最喜欢的学生就是党怀英和辛弃疾，认为这两个人将来一定会在文学上有成就。事实证明，刘老师的眼光不错。\r\n\r\n无奈这两个学生虽然都很优秀，志向却完全不同。\r\n\r\n党怀英希望将来自己像孔子教导的那样“学而优则仕”。\r\n\r\n刘老师其实更看重辛弃疾，因为这个学生很善于填词，他填词总感觉像是顺手拈来，一些俚语啦、甚至是“之乎者也”之类的虚词都敢随意填到词里来，而且读起来丝毫没有违和感。\r\n\r\n刘老师觉得这个孩子很有可能是苏东坡第二，可是辛弃疾却说他的志向就八个字：\r\n\r\n建功立业，报国杀贼！\r\n\r\n刘老师觉得很遗憾。\r\n\r\n脾气火爆的辛弃疾骂党怀英“软骨头”，文质彬彬的党怀英急了，他骂辛弃疾是“脑子进了水的傻蛋”。\r\n\r\n他们俩狠狠地打了一架，结果22岁的党怀英输给了16岁的辛弃疾。\r\n\r\n之后党怀英擦着嘴角的血瞪着辛弃疾说：“你就等着走岳飞的老路吧！”\r\n\r\n一提起岳飞，两个人不打架了，抱头痛哭了一场。\r\n\r\n谁都知道抗金英雄岳飞当年带领他的岳家军打过了黄河，眼看收复中原有望，却被昏庸的宋高宗用十二道金牌召回，回去后就被奸相秦桧用“莫须有”的罪名害死在风波亭。\r\n\r\n岳飞临死前在风波亭写下了八个字：天日昭昭，天日昭昭！\r\n\r\n那一年，辛弃疾刚刚两岁。如果辛弃疾投奔南宋，不还是投奔了窝囊的宋高宗和阴险的秦桧吗？\r\n\r\n党怀英说：“一切要顺其自然，这是老庄教给我们的。上天既然要宋朝分裂，那么我只做好我该做的事情。”\r\n\r\n后来党怀英果然成为金朝时期的文坛领袖，在文学、史学、书法上都颇有建树。\r\n\r\n辛弃疾不，他说梦想就是用来实现的，实现不了，至少他也为此而折腾过，绝不会后悔。\r\n\r\n之后辛弃疾投奔南宋，一生郁郁不得志。没有完成他报国杀贼的梦想，却无心插柳柳成荫，在填词方面，可谓南宋第一，无意中实现了老师的愿望。\r\n\r\n辛弃疾和党怀英，他们旗鼓相当却有着不同的方向，一起经历了一场遍体鳞伤的青葱岁月，然后互道珍重，此后的人生不再有任何交集。\r\n\r\n辛弃疾曾经写过一首词《贺新郎·同父见和再用韵答之》，里面有这样两句话流传甚广：\r\n\r\n男儿到死心如铁，看试手，补天裂！\r\n这就是辛弃疾，即使到死，他都永不后悔。哪怕是补天这样的事情，难度再大，也一定要坚持到底。\r\n\r\n辛弃疾知道，党怀英一定会理解他的选择，因为他是兄弟。\r\n\r\n当年天真的声音又出现在回忆里，而如今却变成了最遥远的距离，他们虽然渐行渐远，却仍然是彼此心中的好兄弟。\r\n\r\n铁血男儿辛弃疾告诉你：兄弟，是虽然和你意见不一致、和你吵得面红耳赤甚至大打出手，却依然会尊重你选择的那个人。\r\n\r\n\r\n\r\n2、\r\n\r\n\r\n\r\n回忆到这里，辛弃疾叹了口气，他抚摸着那把已经生锈的剑，忍不住大声吟诵起他写的一首词来：\r\n\r\n鹧鸪天\r\n\r\n壮岁旌旗拥万夫，锦檐突骑渡江初。燕兵夜娖（chuò）银胡,汉箭朝飞金仆姑。\r\n\r\n追往事，叹今吾，春风不染白髭须。却将万宇平戎策，换得东家种树书。\r\n“壮岁旌旗拥万夫”，那时的他，血气方刚无所畏惧，才刚刚22岁就拉起了一支两千余人的反金队伍。\r\n\r\n辛弃疾没有想到，他会和一个大老粗做兄弟。\r\n\r\n他是个农民，五大三粗大嗓门，就是大字不识一个，甚至还差点杀了自己。然而就是他，让自己甘愿为他把性命交出来都在所不辞。\r\n\r\n这个人，叫耿京。\r\n\r\n那时海贼王完颜亮，啊不对，是海陵王完颜亮，刚刚推翻了金熙宗自己做了皇帝，听说临安风景秀丽，野心勃勃地打算打过江去，他打的如意算盘是：\r\n\r\n提兵百万西湖上，立马吴山第一峰。\r\n\r\n早就对金朝的各种苛捐杂税、民族歧视不满的汉人此时纷纷起兵造反，耿京就是众多造反队伍中的一个，他三十多岁正当年，很短的时间内就聚集了二十多万人，于是辛弃疾投奔他而去。\r\n\r\n北方男人多孔武，山东男子更重义。\r\n\r\n他们一见面就惺惺相惜，耿京佩服辛弃疾的文韬武略，辛弃疾佩服耿京的敢做敢闯，于是辛弃疾就在他手下做了秘书。\r\n\r\n他们日日在一起研究带兵打仗，培养了深厚的革命友情。\r\n\r\n谁知这时辛弃疾推荐来的和尚义端，偷了辛弃疾保管的义军大印跑了，把耿京急得拿起刀要杀他，但是辛弃疾立马请缨，追到义端杀了他拿回大印。\r\n\r\n他们之后彼此间的共同信任验证了这句话：与你相遇，多少风雨，风雨之后的彩虹更加美丽。\r\n\r\n他们决定带着起义军渡过黄河去投奔南宋，这在外面漂着就像没娘的孩子一样，滋味不好受呀！\r\n\r\n辛弃疾前往临安，不辱使命、奉表归宋，不料他完成任务北还时，听说叛徒张安国为了一顶济州知州的乌纱帽暗杀了耿京，投降金人。\r\n\r\n“锦檐突骑渡江初”，那是他听说耿京被杀之后，内心沸腾着的愤怒、一定为兄弟报仇的热血使他锦衣快马，带领50人冲进50000人的队伍，活捉张安国，日夜兼程南奔，明正国法。\r\n\r\n50 VS 50000!\r\n\r\n23岁！是考研的年龄？是找工作的年龄？\r\n\r\n然而辛弃疾已经为了曾经披星戴月的日子、为了那刀口舔血的兄弟，不绝望不犹豫，在广阔天地里杀出一条血路，背负着两个人共同的梦想，朝着梦中的朝阳,踏步向前，永不回头。\r\n\r\n铁血男儿辛弃疾告诉你：“兄弟”这两个字，不是用嘴巴来说说而已的，他是一个男人的的诺言，是心跳多久就要彼此肝胆相照多久的纯爷们儿。\r\n\r\n3、\r\n\r\n投奔宋高宗、杀了张安国的辛弃疾虽然在久已疲软的南宋引起一阵轰动，但并没有受到重用，他还有着一个不尴不尬的身份：归正人。\r\n\r\n辛弃疾并不在乎大家怎么看他，也不在乎宋高宗只是给了他一个江阴签判的小官来做，反正他才二十多岁，有着大把的青春可以让他支撑他的梦想。\r\n\r\n一辈子还长着呢，总有一天可以实现愿望的，他天真地想。\r\n\r\n机会来了，曾经被金人打到海上漂泊都不敢回击的宋高宗退位了！新上任的这个宋孝宗表现出了雄心勃勃、想要恢复失地、报仇雪耻的锐气，甚至还为岳飞平了反。\r\n\r\n血气方刚的辛弃疾，马上提笔写了《美芹十论》、《九议》等有关抗金北伐的建议，论内容，这些文章简直可以获得军事论文一等奖。\r\n\r\n但是由于辛弃疾太不懂得官场的那些潜规则，不懂得去依靠攀附那些能在皇帝面前说的上话的人，他的满腔热血被人认为是锋芒毕露、狂妄自大，于是他不但没有进入到统治集团的核心，反而被先后派到江西、湖北、湖南等地担任转运使、安抚使一类重要的地方官职，去治理荒政、整顿治安去了。\r\n\r\n辛弃疾干得很出色，一度朝廷只要有了棘手的事摆平不了的，都找这个山东大汉来解决。只要辛弃疾出马，立即分分钟搞定。\r\n\r\n就这样，他曾经拥有的大把青春就像是握在手里的沙子，一点一点地流逝了，蹉跎岁月中，他走到了中年。\r\n\r\n很多人变了，很多事变了，然而他“建功立业、报国杀贼”的梦想没有变；\r\n\r\n故乡离开了，年华逝去了，然而他“刚拙自信、不为所容”的脾气没有改。\r\n\r\n也许是太了解自己容易得罪人的性格不好改变了吧，也许是内心觉得北伐无望了吧，辛弃疾开始考虑在江南定居。\r\n\r\n1181年，41岁的辛弃疾在江西做知府时，他看上了上饶的带湖，根据带湖四周的地形地势，亲自设计了“高处建舍、低处辟田”的庄园格局，并对家人说：“人生在勤，当以力以田为先”，因此，他把带湖庄园取名为“稼轩”，并为自己取号曰“稼轩居士”。\r\n\r\n辛弃疾的预感是对的，他当年冬天就遭到弹劾，于是他来到带湖新居，开始了他长达二十年的闲居生活。\r\n\r\n这就意味着他四十一岁就退休了！有房有车有钱有闲，这是多少人梦寐以求的生活！\r\n\r\n那么就来填填词吧，没有了俗务的干扰，年少时的业余爱好也该捡起来了。\r\n\r\n可以先晒晒自己的和睦家庭：\r\n\r\n大儿锄豆溪东，中儿正织鸡笼，最喜小儿无赖，溪头卧剥莲蓬。——《清平乐·村居》\r\n\r\n可以写写醉酒后的憨态：\r\n\r\n昨夜松边醉倒，问松“我醉何如”？只疑松动要来扶，以手推松曰：去！——《西江月·遣兴》\r\n\r\n再自嘲一下自己的狂态：\r\n\r\n不恨古人吾不见，恨古人不见吾狂耳。知我者，二三子。——《贺新郎》\r\n\r\n也可以写写爱情：\r\n\r\n众里寻他千百度，蓦然回首，那人却在，灯火阑珊处。——《青玉案·元夕》\r\n\r\n偶尔卖卖萌：\r\n\r\n我见青山多妩媚，料青山，见我应如是。情与貌，略相似。——《贺新郎》\r\n\r\n青山啊青山，在我眼里你是那样妩媚，在你的眼里，我是不是也很妩媚呢？我看在情感和外貌上，咱俩挺像。好，就这么定了，咱俩最像！\r\n\r\n妩媚？你能想像这个词居然出自一个山东大汉之口？吃惯了煎饼大葱的辛弃疾，来到这温婉的江南，每天吃着大米饭，也变得如此妩媚了呢！\r\n\r\n当然，最可爱的还是这首：\r\n\r\n西江月·夜行黄沙道中\r\n\r\n明月别枝惊鹊，清风半夜鸣蝉。稻花香里说丰年，听取蛙声一片。\r\n\r\n七八个星天外，两三点雨山前。旧时茅店社林边，路转溪桥忽见。\r\n忽然遭遇说来就来的雨点，想找个地方躲一躲，可是明明记得原来社林边有个茅店的，怎么找不到了呢？结果过了这座小桥，转个了弯，哈哈，原来你在这里！\r\n\r\n唔，满脸胡子的大男人，你还是拿把剑吧，这样感觉人生才是真实的。\r\n\r\n如果，日子就这样一直过下去，不也挺幸福的吗？\r\n\r\n可是对于一个有梦想的人而言，他表面幸福快乐，可是内心却很痛苦。\r\n\r\n不知我者谓我喜乐悠闲，知我者谓我心似油煎。\r\n\r\n终于，知己出现了。\r\n\r\n4、\r\n\r\n当辛弃疾写下“休去倚危栏，斜阳正在，烟柳断肠处”（《摸鱼儿》），对南宋朝廷表示不满的时候，他写下了“遗民泪尽胡尘里，南望王师又一年”（《秋夜将晓出篱门迎凉有感》）；\r\n\r\n当辛弃疾写下“把吴钩看了，栏杆拍遍，无人会、登临意”（《水龙吟·登建康赏心亭》）来表达他报国无路、壮志难酬的悲愤时，他写下了“夜视太白收光芒，报国欲死无战场”（《陇头水》）；\r\n\r\n当辛弃疾回忆着“想当年，金戈铁马，气吞万里如虎”（《永遇乐·京口北固亭怀古》）的豪迈，他写下了“夜阑卧听风吹雨，铁马冰河入梦来”（《十一月四日风雨大作》）；\r\n\r\n当辛弃疾借古讽今，只好把心放在古人那里，写下“天下英雄谁敌手？曹刘。生子当如孙仲谋”（《南乡子·登京口北固亭有怀》），他写下了“出师一表真名世，千载谁堪伯仲间”（《书愤》）；\r\n\r\n甚至辛弃疾迷路“旧时茅店社林边，路转溪桥忽见”（《西江月·夜行黄沙道中》），他也会变路痴：“山重水复疑无路，柳暗花明又一村”（《游山西村》）；\r\n\r\n辛弃疾发愁：“少年不识愁滋味，爱上层楼。爱上层楼，为赋新词强说愁。而今识尽愁滋味，欲说还休。欲说还休，却道天凉好个秋”（《丑奴儿》），他也“闲愁如飞雪，入酒即消融。好花如故人，一笑杯自空”（《对酒》）；\r\n\r\n……\r\n\r\n这个人，就是南宋著名爱国诗人——陆游。\r\n\r\n如果是你，你远离家乡在外漂泊，你内心苦闷无人理解，你所做的一切都被别人当笑话来看，你会如何？\r\n\r\n那么，当你知道有一个人，他和你做着同样的事，有着一样的梦想，写着主题相似的文字，你又会如何？\r\n\r\n是的，我不是一个人在战斗。泪湿双眸，才发现，原来自己并不那么孤单。\r\n\r\n可是，命运给他们开了个大大的玩笑，让他们这两位互为知己的人在1203年才相遇。那一年，浙江绍兴山阴一所破旧的草堂边，两位白发苍苍、精神矍铄的老人相遇了，当时辛弃疾63岁，而陆游，78岁。\r\n\r\n感谢苍天，终于让这两位同样伟大的诗人相遇了。就像李白和杜甫在唐朝相遇一样，如果南宋的历史上陆游和辛弃疾居然没有见过面，那将是怎样的一种遗憾！\r\n\r\n陆游文采飞扬，辛弃疾才情出众，在度过了大半个人生之后，此时相见，真是欲说还休，相见恨晚。\r\n\r\n金风玉露一相逢，便胜却人间无数。\r\n\r\n此刻，他们紧紧握着彼此的手，同时喊了一声：兄弟！然后泪流满面。\r\n\r\n是的，兄弟。\r\n\r\n他们不仅经历相似，而且性情相同，他们都不顾自己可能会受到牵连的后果，去参加了被朝廷斥之为“伪学魁首”的朱熹的葬礼。\r\n\r\n朱熹，这个南宋著名的理学家、哲学家，为我们留下了“问渠那得清如许，为有源头活水来”、“业精于勤荒于嬉，行成于思毁于随”等大量精神财富的人，在他去世之后，甚至连他的学生都怕受到牵连，很多人都不敢去为他送葬。\r\n\r\n朱熹说过：“朋友，以义合者。”\r\n\r\n他们都是朱熹的朋友。\r\n\r\n辛弃疾看着陆游，问他：“廉颇老矣，尚能饭否？”（《永遇乐·登京口北固亭有怀》）\r\n\r\n陆游叹了口气回答他：“此生谁料，心在天山，身老沧州。”（《诉衷情》）\r\n\r\n什么叫心意相投、惺惺相惜？什么叫岁月峥嵘、热血沸腾？什么叫千杯不醉、万语嫌少？\r\n\r\n这一切，在他63岁那一年，他能明白了。\r\n\r\n金弓醉卧马，铁骨冰冻山，敢问天下义，几人如此般。\r\n\r\n铁血男儿辛弃疾告诉你：兄弟就像是月亮旁边的那颗星星，有时不一定看得到，但他却始终在默默地关注着你，不离不弃。\r\n\r\n5、\r\n\r\n还有一个“有事一起扛，无事一起狂”的兄弟，他叫陈亮，字同甫。\r\n\r\n物以类聚、人以群分，此话一点都不假。这个人超级豪迈、超级有才华、超级喜欢谈兵。\r\n\r\n1188年冬天，太上皇宋高宗终于驾崩，这让很多人看到了北伐的希望，仰慕辛弃疾的陈亮，约上朱熹，日夜兼程800里来见他，要和他商讨光复大计。\r\n\r\n但是朱熹没有来，急性子的陈亮不等他了，自己去找辛弃疾。\r\n\r\n那时辛弃疾的带湖山庄着火，他新建了一所瓢泉山庄，陈亮要经过一座小桥，可是他骑的那匹马到桥上不走了，陈亮“驾驾驾”了好几次它还不走。\r\n\r\n你们猜陈亮接下来做了一件什么事？抽出刀来，砍下马头，看也不看一眼，自己过桥去了。\r\n\r\n这让站在桥那头等他的辛弃疾惊呆了，陈亮看着辛弃疾张大的嘴说：“别看了，剽悍的人生不需要解释。朱熹那个老头儿不来正好，咱俩好好谈谈！”\r\n\r\n正生着病的辛弃疾瞬间被陈亮的热情点燃了，他全程陪着陈亮“憩鹅湖之清阴，酌瓢泉而共饮”，这两个好战主义者纵论时局、谋划兵事、慷慨纵横，好像他们就是手握千军万马的将军，明天就可以挂帅出征一样。\r\n\r\n说到激昂处，这两个热血男儿禁不住放声高歌，连楼头的积雪也被震落了。\r\n\r\n幸亏他们住的不是单元房，否则一定要有人告他俩扰民。\r\n\r\n陈亮住了十几天后告辞，这次不是陈亮狂了，轮到辛弃疾狂。\r\n\r\n他舍不得陈亮走，思来想去又追了出去，无奈一场大雪阻住了他的脚步。\r\n\r\n辛弃疾，从来没有想过他会为一个男人而如此牵挂，也没有想过他会为一个如此疯狂的男人一口气写下五首《贺新郎》。\r\n\r\n一场鹅湖会，五首贺新郎，“男儿到死心如铁”、“男儿何用伤离别”，\r\n\r\n写尽了好男儿的英雄本色和忠肝义胆。\r\n\r\n陈亮回去后，一次被人诬陷入狱。辛弃疾知道后，和朱熹等多位朋友营救他出狱。\r\n\r\n1194年，陈亮去世，享年五十二岁。\r\n\r\n伯牙弦绝，一语成谶。“铸就而今相思错，料当初费劲人间铁。长夜笛，莫吹裂！”\r\n\r\n英雄气、才子情，若把相思熔尽，人间铁岂能够！曾经的金戈铁马，如今的闲居乡野，从此后，弦断无人听！\r\n\r\n铁血男儿辛弃疾告诉你：兄弟，是英雄与英雄间的惺惺相惜，是自身气质的互相吸引，是“今生兄弟两个姓，来世兄弟一个娘”的至亲至爱。\r\n\r\n6、\r\n\r\n辛弃疾抚摸着手里的宝剑，忽然他起身携剑来到屋外。\r\n\r\n十月夜空，繁星点点，苍穹之下，一袭白衣的辛弃疾一边舞剑一边大声吟诵着在他心里徘徊了很久的一首词：\r\n\r\n破阵子·为陈同甫赋壮词以寄之\r\n\r\n醉里挑灯看剑，梦回吹角连营。八百里分麾下炙，五十弦翻塞外声，沙场秋点兵。\r\n\r\n马作的卢飞快，弓如霹雳弦惊。了却君王天下事，嬴得生前身后名，可怜白发生！\r\n吟罢，他为对面的那个空杯子倒满酒，举起手中的酒杯说声“干”，然后一饮而尽。\r\n\r\n他举起手中的宝剑，大喊三声：“杀贼！杀贼！杀贼！”然后倒地身亡。\r\n\r\n在辛弃疾辞世后不到三年，1210年春天，85岁的诗人陆游追随他的好兄弟而去，留下了不朽的千古绝唱：\r\n\r\n>　　　　　　　示儿\r\n死去元知万事空，但悲不见九州同。\r\n王师北定中原日，家祭无忘告乃翁。\r\n辛弃疾死后不到百年，1279年，南宋灭亡。\r\n\r\n分裂的南宋王朝，长期处于金国、蒙古等外族入侵的威胁之下，造就了许多爱国志士、民族英雄。\r\n\r\n辛弃疾，不知道他在大喊“杀贼”的时候内心是怎样的一种伤痛，他最终没有实现他的梦想，但是他并没有在这世上白白来过，在这广阔的天地里，他有一群肝胆相照的兄弟和他共同演绎了南宋王朝的——英雄本色。\r\n\r\n这辈子，值了。',`groups`='Think',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 21 [ RunTime:0.001329s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Person' LIMIT 1 [ RunTime:0.001142s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=1  WHERE  `groups` = 'Person' [ RunTime:0.000656s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.001159s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=19  WHERE  `groups` = 'Think' [ RunTime:0.000561s ]
---------------------------------------------------------------
[ 2018-10-15T16:37:46+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/21.html
[ info ] qingrang.top/daily/admin/note/shownote/id/21.html [运行时间：0.053495s][吞吐率：18.69req/s] [内存消耗：2,017.66kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/21',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000460s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001292s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 21 LIMIT 1 [ RunTime:0.000477s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000982s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000280s ]
---------------------------------------------------------------
[ 2018-10-15T16:38:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/18.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/18.html [运行时间：0.076209s][吞吐率：13.12req/s] [内存消耗：2,101.37kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '20025',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/18',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 汪涵”很博学”的形象是刻意包装还是确有其事？
写在前面：
我这篇回答用所见所感，回应题主“博学是装出来”的质疑，是主观视角。而关于汪涵是否博学，到什么程度，@為夢而生 老师的回答更客观。

------------------------------------------------------------------------------------------------------

汪涵比你看到的还要更博学一些。

先贴两篇信息量巨大的采访稿。真对他感兴趣的，看完这两篇文，会离真相更近。

汪涵：最摩登的古代人 http://www.nfpeople.com/News-detail-item-986.html
专访主持人汪涵：在小抗争中清醒着

再说自己的亲身经历。

我是湖南人，从小看汪涵节目长大。今春（2013年）回长沙，重看南周访谈，无意中发现，采访中提到的书屋竟然免费对外开放------是的，汪涵在长沙最繁华的闹市区开有一间非盈利性质的书屋。除了一篇通稿，未做任何宣传。

“娱乐一哥”开书屋 汪涵：不看电视只看书(图)--24小时滚动新闻--人民网

选摘段落：想探讨方言与古汉语之间的联系
同样是交流，主持和写作带给汪涵的是完全不同的感受。“当主持人比较过瘾，因为现场就可以得到观众及时的反馈。而写书则是诚惶诚恐的，就像是寄出一份情书，很忐忑又很期待，不知道能不能收到回信。”去年，不会打字的汪涵一笔一画地写出了《有味》这本书。和通常的名人出书不同，它既不是一本自传，也不是一本圈内八卦集锦，而是通过对折扇、古琴、油布伞、糍粑、木盆等传统物件的描摹，流露出他对人生的感悟，以及对传统文化的深深敬意。汪涵说，这封“情书”的回信他已经收到了，“读者的反馈还不错，至少他们会说，哦，原来汪涵也不是那么肤浅的娱乐主持人。


当天就想去探访，却被刘掌柜在电话里告知周三周四休息。便缓了两日，周五吃过午饭，径直奔去书屋。

刘叔和气得很，笑脸把我迎进门，开口就是：今天缘分好啊，刚好涵哥也在。我大惊失色，杵在原地，数着自己的心跳，一点点听着里屋的声音越来越近------那声音我从小听到大，实在太熟悉了。后来回想，这是个足以让我被自己蠢哭的画面---当他终于走到面前，我第一句话竟是：涵哥原来真的长这样儿......

这个人果如访谈自述，有距离感。生活中的他「有意识地」与电视上的他保持距离，同时「无意识地」与我这样的陌生人保持距离。对我的白痴搭讪他的回应是：对呀，就是按照你们希望的样子长的......斜上四十五度角瞟了我一眼---彼时他在弯腰找东西----巧妙地避过了眼神直接交流。

这个书屋是我的理想国。琴曲绕梁，檀香盈鼻，我坐靠窗位置，承接阳光，俯瞰湘江。整整一个下午，涵哥的声音呼呼往耳朵里灌，前半段他在里屋和朋友谈事，后半段在外屋和另一拨儿朋友谈事，中间数次经过我身边。我故作正经却心猿意马----没人能忽视汪涵的声音：比电视里听来更厚重，响亮，整间屋子都在共鸣。举止稳当利落，走路不疾而速，快四十的人，精力奇佳，忙而有序，那种「一切尽在掌握」的即视感，着实让我钦羡。刘叔在我面前放下一点吃食（读者送的），涵哥刚好见着了便冲我一笑：你看在我们这儿看书多幸福，还有东西吃。我反应过来想回话，他已经半步不停地飘回里屋了。

他时常出来寻书，都是些我没听过的大部头；偶尔凝神听他们对谈，除「蒋勋」「老柴」（柴静）这样的人名，其余一概茫然------我自恃看过一些书，然而这个下午，忍不住数次怀疑：其实我根本就是个文盲吧？

长到二十多岁，第一次生出这样的感慨：原来，真正的精英是这样的啊。

有个细节值得一说。没听错的话，那个下午他分别用长沙话、普通话、粤语跟人交流，出门时讲电话，说的又是我的家乡话---德语（常德话）-----这不是在录节目，他不需要秀方言。

离开书屋时，我感到失落。在这之前的十几年，「汪涵」是电视上亲切、幽默、有才的策神，是所有湖南人共同的朋友。这个下午过后，「汪涵」变得温和、疏离、满腹经纶、深不可测。庆幸的是，我失去一个「大哥」，却多了一个「精神领袖」，算来还是赚到了。

对于题主的疑惑，我的回答是：

电视里的汪涵和电视外的汪涵是两个人。如果你认为电视里的汪涵博学，那么请记得：前者在后者面前，其实很肤浅呢。

------------------------------------------------------------------------------------------------------

附：

采访稿选摘段落一：孤独是内心强大到不需要任何人跟你交流

他谨慎地，甚至可以说是刻意地，和舞台上的、别人认知的那个汪涵保持着距离。几年前他在接受采访时说，“我和舞台上的汪涵挺熟的。”这次再问他，他坦率地承认，“我是老油条，我尽量真诚地回答你的问题。”但是，平时的汪涵和舞台上的汪涵，“一定不是同一个人。每个人都有不同的面具，见领导的时候、见太太的时候、见朋友的时候，什么时候才是真实的自己，真不好说。”

选摘段落二：虞逸夫老师教他“为善勿近名，为恶勿近刑”

24岁有了自己的第一档节目，28岁成为湖南名人，32岁闻名天下，一个人在湖南能得到的所有名气他都得到了。2007年一场突如其来的肝病改变了他的人生，直播的时候会突然流鼻血，要用麦克风的海绵压住鼻子免得镜头扫到，拼了命挣钱的他停了节目，休养了近一年，在长沙近处的一个小镇养病，和做香干的师傅、做糍粑的老爹爹、做木盆的爷爷、做油布伞的伯伯相交，学手艺写文章，悟出了《有味》这本书，谈做箭做琴做扇做鸡毛掸子的书居然也结结实实卖了十几万本，从此在文化人的道路上一路狂奔。

选摘段落三：综六艺“诗书礼乐易春秋“


他在琢磨，综艺节目主持人，到底应该综什么艺。“综的是模仿Michael Jackson、模仿各地方言、掌握什么乐器，还是别的？”

选摘段落四：更愿意在小书屋待一下午而不是参加研讨会

时代周报：其实跟你聊天发现你是一个文化人，难怪有个记者会觉得奇怪，我是来采访一个娱乐主持人，你却跟我谈什么文化？
更多详情: http://www.zhihu.com/question/20388926/answer/17623381',
  'groups' => 'Think',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '18',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000655s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001786s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 18 LIMIT 1 [ RunTime:0.000598s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 18 LIMIT 1 [ RunTime:0.000415s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001413s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000453s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000392s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=18,`p_id`=3,`title`='汪涵”很博学”的形象是刻意包装还是确有其事？\r',`content`='# 汪涵”很博学”的形象是刻意包装还是确有其事？\r\n写在前面：\r\n我这篇回答用所见所感，回应题主“博学是装出来”的质疑，是主观视角。而关于汪涵是否博学，到什么程度，@為夢而生 老师的回答更客观。\r\n\r\n------------------------------------------------------------------------------------------------------\r\n\r\n汪涵比你看到的还要更博学一些。\r\n\r\n先贴两篇信息量巨大的采访稿。真对他感兴趣的，看完这两篇文，会离真相更近。\r\n\r\n汪涵：最摩登的古代人 http://www.nfpeople.com/News-detail-item-986.html\r\n专访主持人汪涵：在小抗争中清醒着\r\n\r\n再说自己的亲身经历。\r\n\r\n我是湖南人，从小看汪涵节目长大。今春（2013年）回长沙，重看南周访谈，无意中发现，采访中提到的书屋竟然免费对外开放------是的，汪涵在长沙最繁华的闹市区开有一间非盈利性质的书屋。除了一篇通稿，未做任何宣传。\r\n\r\n“娱乐一哥”开书屋 汪涵：不看电视只看书(图)--24小时滚动新闻--人民网\r\n\r\n选摘段落：想探讨方言与古汉语之间的联系\r\n同样是交流，主持和写作带给汪涵的是完全不同的感受。“当主持人比较过瘾，因为现场就可以得到观众及时的反馈。而写书则是诚惶诚恐的，就像是寄出一份情书，很忐忑又很期待，不知道能不能收到回信。”去年，不会打字的汪涵一笔一画地写出了《有味》这本书。和通常的名人出书不同，它既不是一本自传，也不是一本圈内八卦集锦，而是通过对折扇、古琴、油布伞、糍粑、木盆等传统物件的描摹，流露出他对人生的感悟，以及对传统文化的深深敬意。汪涵说，这封“情书”的回信他已经收到了，“读者的反馈还不错，至少他们会说，哦，原来汪涵也不是那么肤浅的娱乐主持人。\r\n\r\n\r\n当天就想去探访，却被刘掌柜在电话里告知周三周四休息。便缓了两日，周五吃过午饭，径直奔去书屋。\r\n\r\n刘叔和气得很，笑脸把我迎进门，开口就是：今天缘分好啊，刚好涵哥也在。我大惊失色，杵在原地，数着自己的心跳，一点点听着里屋的声音越来越近------那声音我从小听到大，实在太熟悉了。后来回想，这是个足以让我被自己蠢哭的画面---当他终于走到面前，我第一句话竟是：涵哥原来真的长这样儿......\r\n\r\n这个人果如访谈自述，有距离感。生活中的他「有意识地」与电视上的他保持距离，同时「无意识地」与我这样的陌生人保持距离。对我的白痴搭讪他的回应是：对呀，就是按照你们希望的样子长的......斜上四十五度角瞟了我一眼---彼时他在弯腰找东西----巧妙地避过了眼神直接交流。\r\n\r\n这个书屋是我的理想国。琴曲绕梁，檀香盈鼻，我坐靠窗位置，承接阳光，俯瞰湘江。整整一个下午，涵哥的声音呼呼往耳朵里灌，前半段他在里屋和朋友谈事，后半段在外屋和另一拨儿朋友谈事，中间数次经过我身边。我故作正经却心猿意马----没人能忽视汪涵的声音：比电视里听来更厚重，响亮，整间屋子都在共鸣。举止稳当利落，走路不疾而速，快四十的人，精力奇佳，忙而有序，那种「一切尽在掌握」的即视感，着实让我钦羡。刘叔在我面前放下一点吃食（读者送的），涵哥刚好见着了便冲我一笑：你看在我们这儿看书多幸福，还有东西吃。我反应过来想回话，他已经半步不停地飘回里屋了。\r\n\r\n他时常出来寻书，都是些我没听过的大部头；偶尔凝神听他们对谈，除「蒋勋」「老柴」（柴静）这样的人名，其余一概茫然------我自恃看过一些书，然而这个下午，忍不住数次怀疑：其实我根本就是个文盲吧？\r\n\r\n长到二十多岁，第一次生出这样的感慨：原来，真正的精英是这样的啊。\r\n\r\n有个细节值得一说。没听错的话，那个下午他分别用长沙话、普通话、粤语跟人交流，出门时讲电话，说的又是我的家乡话---德语（常德话）-----这不是在录节目，他不需要秀方言。\r\n\r\n离开书屋时，我感到失落。在这之前的十几年，「汪涵」是电视上亲切、幽默、有才的策神，是所有湖南人共同的朋友。这个下午过后，「汪涵」变得温和、疏离、满腹经纶、深不可测。庆幸的是，我失去一个「大哥」，却多了一个「精神领袖」，算来还是赚到了。\r\n\r\n对于题主的疑惑，我的回答是：\r\n\r\n电视里的汪涵和电视外的汪涵是两个人。如果你认为电视里的汪涵博学，那么请记得：前者在后者面前，其实很肤浅呢。\r\n\r\n------------------------------------------------------------------------------------------------------\r\n\r\n附：\r\n\r\n采访稿选摘段落一：孤独是内心强大到不需要任何人跟你交流\r\n\r\n他谨慎地，甚至可以说是刻意地，和舞台上的、别人认知的那个汪涵保持着距离。几年前他在接受采访时说，“我和舞台上的汪涵挺熟的。”这次再问他，他坦率地承认，“我是老油条，我尽量真诚地回答你的问题。”但是，平时的汪涵和舞台上的汪涵，“一定不是同一个人。每个人都有不同的面具，见领导的时候、见太太的时候、见朋友的时候，什么时候才是真实的自己，真不好说。”\r\n\r\n选摘段落二：虞逸夫老师教他“为善勿近名，为恶勿近刑”\r\n\r\n24岁有了自己的第一档节目，28岁成为湖南名人，32岁闻名天下，一个人在湖南能得到的所有名气他都得到了。2007年一场突如其来的肝病改变了他的人生，直播的时候会突然流鼻血，要用麦克风的海绵压住鼻子免得镜头扫到，拼了命挣钱的他停了节目，休养了近一年，在长沙近处的一个小镇养病，和做香干的师傅、做糍粑的老爹爹、做木盆的爷爷、做油布伞的伯伯相交，学手艺写文章，悟出了《有味》这本书，谈做箭做琴做扇做鸡毛掸子的书居然也结结实实卖了十几万本，从此在文化人的道路上一路狂奔。\r\n\r\n选摘段落三：综六艺“诗书礼乐易春秋“\r\n\r\n\r\n他在琢磨，综艺节目主持人，到底应该综什么艺。“综的是模仿Michael Jackson、模仿各地方言、掌握什么乐器，还是别的？”\r\n\r\n选摘段落四：更愿意在小书屋待一下午而不是参加研讨会\r\n\r\n时代周报：其实跟你聊天发现你是一个文化人，难怪有个记者会觉得奇怪，我是来采访一个娱乐主持人，你却跟我谈什么文化？\r\n更多详情: http://www.zhihu.com/question/20388926/answer/17623381',`groups`='Think',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 18 [ RunTime:0.000903s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Person' LIMIT 1 [ RunTime:0.001074s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=0  WHERE  `groups` = 'Person' [ RunTime:0.000414s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.001317s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=20  WHERE  `groups` = 'Think' [ RunTime:0.000362s ]
---------------------------------------------------------------
[ 2018-10-15T16:38:10+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/18.html
[ info ] qingrang.top/daily/admin/note/shownote/id/18.html [运行时间：0.048368s][吞吐率：20.67req/s] [内存消耗：1,988.00kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/18',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '18',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000477s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001345s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 18 LIMIT 1 [ RunTime:0.000498s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000812s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000275s ]
---------------------------------------------------------------
[ 2018-10-15T16:38:33+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.074782s][吞吐率：13.37req/s] [内存消耗：2,176.79kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000674s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001540s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001443s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000558s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001103s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000437s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001056s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000271s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000424s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000375s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000477s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001102s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000257s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001162s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000617s ]
---------------------------------------------------------------
[ 2018-10-15T16:39:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.080572s][吞吐率：12.41req/s] [内存消耗：2,175.73kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000699s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001685s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.002124s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000446s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001133s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000309s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000517s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001186s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000425s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000499s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000344s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000415s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001418s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000404s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001535s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000752s ]
---------------------------------------------------------------
[ 2018-10-15T16:51:47+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.077073s][吞吐率：12.97req/s] [内存消耗：2,111.02kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000471s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002099s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000499s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001424s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000527s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001170s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000756s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000670s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000437s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000369s ]
---------------------------------------------------------------
[ 2018-10-15T16:56:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.074881s][吞吐率：13.35req/s] [内存消耗：2,110.80kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001422s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002816s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000825s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.002117s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000545s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001147s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000484s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000496s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000468s ]
---------------------------------------------------------------
[ 2018-10-15T16:56:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/222.html
[ info ] qingrang.top/daily/admin/show/shownote/id/222.html [运行时间：0.059044s][吞吐率：16.94req/s] [内存消耗：1,938.90kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '222',
)
[ info ] [ RUN ] app\admin\controller\Show->showNote[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000637s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001544s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000454s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001075s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000368s ]
---------------------------------------------------------------
[ 2018-10-15T16:56:40+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/notelst/groups/English.html
[ info ] qingrang.top/daily/admin/show/notelst/groups/English.html [运行时间：0.128021s][吞吐率：7.81req/s] [内存消耗：2,109.20kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'notelst',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'English',
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000728s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002847s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000974s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001843s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000772s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'English' )  AND `publish` = 1 LIMIT 1 [ RunTime:0.001435s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `groups` <> 'Personal' AND `groups` = 'English' )  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.002703s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.002414s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000621s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.001036s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.008119s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000776s ]
---------------------------------------------------------------
[ 2018-10-15T16:56:43+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/155.html
[ info ] qingrang.top/daily/admin/show/shownote/id/155.html [运行时间：0.081264s][吞吐率：12.31req/s] [内存消耗：1,945.47kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/show/notelst/groups/English.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '155',
)
[ info ] [ RUN ] app\admin\controller\Show->showNote[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000681s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002331s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 155 LIMIT 1 [ RunTime:0.000698s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001438s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000515s ]
---------------------------------------------------------------
[ 2018-10-15T16:56:50+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/show/shownote/id/115.html
[ info ] qingrang.top/daily/admin/show/shownote/id/115.html [运行时间：0.053452s][吞吐率：18.71req/s] [内存消耗：1,942.36kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'show',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/show/notelst/groups/English.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '115',
)
[ info ] [ RUN ] app\admin\controller\Show->showNote[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000599s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001457s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 115 LIMIT 1 [ RunTime:0.000594s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000865s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000307s ]
---------------------------------------------------------------
[ 2018-10-15T16:57:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.078695s][吞吐率：12.71req/s] [内存消耗：2,175.73kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000605s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001630s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001740s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000554s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001155s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000444s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000487s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001088s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000302s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000493s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000388s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000394s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001065s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000297s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001475s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000915s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.086931s][吞吐率：11.50req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000604s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001548s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001376s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.145505s][吞吐率：6.87req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000879s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.004924s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001461s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.108079s][吞吐率：9.25req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000562s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001329s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001740s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.140238s][吞吐率：7.13req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000692s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.006221s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.002807s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.092370s][吞吐率：10.83req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000496s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001278s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001542s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.106770s][吞吐率：9.37req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000507s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001404s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001556s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:30+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.082576s][吞吐率：12.11req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000563s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001280s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.002206s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:30+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.074047s][吞吐率：13.50req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000551s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001341s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001660s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:31+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.083559s][吞吐率：11.97req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.004469s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001268s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001395s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:31+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.104052s][吞吐率：9.61req/s] [内存消耗：2,141.18kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '14',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'C#',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000472s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001510s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'C#' ORDER BY date desc [ RunTime:0.001401s ]
---------------------------------------------------------------
[ 2018-10-15T16:59:31+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.127632s][吞吐率：7.84req/s] [内存消耗：2,232.91kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Basics',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000478s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001265s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Basics' ORDER BY date desc [ RunTime:0.001626s ]
---------------------------------------------------------------
[ 2018-10-15T17:08:45+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.077136s][吞吐率：12.96req/s] [内存消耗：2,175.20kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=9817g1vc145opajqdf41kbr504',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000668s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001417s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001467s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000544s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001395s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000404s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000386s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001159s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000407s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000615s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000401s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000389s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001176s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000309s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001280s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000754s ]
---------------------------------------------------------------
[ 2018-10-15T17:10:29+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.052135s][吞吐率：19.18req/s] [内存消耗：1,339.47kb] [文件加载：47]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/login/index.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-10-15T17:10:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.067099s][吞吐率：14.90req/s] [内存消耗：1,922.04kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'pwd' => 'shao',
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001159s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001826s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000519s ]
---------------------------------------------------------------
[ 2018-10-15T17:10:36+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.099530s][吞吐率：10.05req/s] [内存消耗：2,176.00kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000435s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001363s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001722s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000554s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001070s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000331s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000398s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000945s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000307s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000282s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000479s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001009s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000252s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000996s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000737s ]
---------------------------------------------------------------
[ 2018-10-15T17:11:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.058043s][吞吐率：17.23req/s] [内存消耗：2,021.52kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000777s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001821s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-10-15T17:13:22+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.069936s][吞吐率：14.30req/s] [内存消耗：1,996.56kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '9539',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Think',
  'content' => '# 请看护好你曾经的激情和理想
我不需要提醒你们，未来将如何以具体琐碎，消磨这份浪漫与绚烂；
也不需要提醒你们，人生将以怎样的平庸世故，消解你们的万丈雄心；
更不需要提醒你们，走入社会，要如何变得务实与现实，因为你们终将以一生浸淫其中。
我唯一的害怕，是你们已经不相信了：不相信规则能战胜潜规则，不相信学场有别于官场；不相信学术不等于权术，不相信风骨远胜于媚骨。
你们或许不相信了，因为追求级别的越来越多，追求真理的越来越少；讲待遇的越来越多，讲理想的越来越少；大官越来越多，大师越来越少。
因此，在你们走向社会之际，我想说的只是，请看护好你曾经的激情和理想。在这个怀疑的时代，我们依然需要信仰。
从母校的教诲出发，二十多年社会生活给我的最大启示是：当许多同龄人都陷于时代的车轮下，那些能幸免的人，不仅因为坚强，更因为信仰。不用害怕圆滑的人说你不够成熟，不用在意聪明的人说你不够明智，不要照原样接受别人推荐给你的生活，选择坚守、选择理想，选择倾听内心的呼唤，才能拥有最饱满的人生。
无论中国怎样，请记得：你所站立的地方，就是你的中国；你怎么样，中国便怎么样；你是什么，中国便是什么；你有光明，中国便不再黑暗。

---
卢新宁

',
  'test-editormd-html-code' => '<h1 id="h1-u8BF7u770Bu62A4u597Du4F60u66FEu7ECFu7684u6FC0u60C5u548Cu7406u60F3"><a name="请看护好你曾经的激情和理想" class="reference-link"></a><span class="header-link octicon octicon-link"></span>请看护好你曾经的激情和理想</h1><p>我不需要提醒你们，未来将如何以具体琐碎，消磨这份浪漫与绚烂；<br>也不需要提醒你们，人生将以怎样的平庸世故，消解你们的万丈雄心；<br>更不需要提醒你们，走入社会，要如何变得务实与现实，因为你们终将以一生浸淫其中。<br>我唯一的害怕，是你们已经不相信了：不相信规则能战胜潜规则，不相信学场有别于官场；不相信学术不等于权术，不相信风骨远胜于媚骨。<br>你们或许不相信了，因为追求级别的越来越多，追求真理的越来越少；讲待遇的越来越多，讲理想的越来越少；大官越来越多，大师越来越少。<br>因此，在你们走向社会之际，我想说的只是，请看护好你曾经的激情和理想。在这个怀疑的时代，我们依然需要信仰。<br>从母校的教诲出发，二十多年社会生活给我的最大启示是：当许多同龄人都陷于时代的车轮下，那些能幸免的人，不仅因为坚强，更因为信仰。不用害怕圆滑的人说你不够成熟，不用在意聪明的人说你不够明智，不要照原样接受别人推荐给你的生活，选择坚守、选择理想，选择倾听内心的呼唤，才能拥有最饱满的人生。<br>无论中国怎样，请记得：你所站立的地方，就是你的中国；你怎么样，中国便怎么样；你是什么，中国便是什么；你有光明，中国便不再黑暗。</p>
<hr>
<p>卢新宁</p>
',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000597s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001355s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000355s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000270s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000284s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001214s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('请看护好你曾经的激情和理想\r' , '# 请看护好你曾经的激情和理想\r\n我不需要提醒你们，未来将如何以具体琐碎，消磨这份浪漫与绚烂；\r\n也不需要提醒你们，人生将以怎样的平庸世故，消解你们的万丈雄心；\r\n更不需要提醒你们，走入社会，要如何变得务实与现实，因为你们终将以一生浸淫其中。\r\n我唯一的害怕，是你们已经不相信了：不相信规则能战胜潜规则，不相信学场有别于官场；不相信学术不等于权术，不相信风骨远胜于媚骨。\r\n你们或许不相信了，因为追求级别的越来越多，追求真理的越来越少；讲待遇的越来越多，讲理想的越来越少；大官越来越多，大师越来越少。\r\n因此，在你们走向社会之际，我想说的只是，请看护好你曾经的激情和理想。在这个怀疑的时代，我们依然需要信仰。\r\n从母校的教诲出发，二十多年社会生活给我的最大启示是：当许多同龄人都陷于时代的车轮下，那些能幸免的人，不仅因为坚强，更因为信仰。不用害怕圆滑的人说你不够成熟，不用在意聪明的人说你不够明智，不要照原样接受别人推荐给你的生活，选择坚守、选择理想，选择倾听内心的呼唤，才能拥有最饱满的人生。\r\n无论中国怎样，请记得：你所站立的地方，就是你的中国；你怎么样，中国便怎么样；你是什么，中国便是什么；你有光明，中国便不再黑暗。\r\n\r\n---\r\n卢新宁\r\n\r\n' , 'Think' , 3 , '2018-10-15') [ RunTime:0.000808s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.001222s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'Think' [ RunTime:0.000682s ]
---------------------------------------------------------------
[ 2018-10-15T17:13:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.065981s][吞吐率：15.16req/s] [内存消耗：2,111.50kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000487s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001241s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000474s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001152s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000531s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001052s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000325s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000470s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000459s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000598s ]
---------------------------------------------------------------
[ 2018-10-15T17:14:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.070866s][吞吐率：14.11req/s] [内存消耗：2,172.99kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000544s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001263s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001420s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000460s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001061s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000488s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000463s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000974s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000442s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000389s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000470s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001117s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000234s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001217s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000753s ]
---------------------------------------------------------------
[ 2018-10-15T17:14:18+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/223.html
[ info ] qingrang.top/daily/admin/note/editnote/id/223.html [运行时间：0.054690s][吞吐率：18.28req/s] [内存消耗：2,030.20kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '223',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001722s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 223 LIMIT 1 [ RunTime:0.000443s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000886s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000288s ]
---------------------------------------------------------------
[ 2018-10-15T17:14:22+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/223.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/223.html [运行时间：0.066066s][吞吐率：15.14req/s] [内存消耗：2,059.63kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '4608',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/223.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 请看护好你曾经的激情和理想
我不需要提醒你们，未来将如何以具体琐碎，消磨这份浪漫与绚烂；
也不需要提醒你们，人生将以怎样的平庸世故，消解你们的万丈雄心；
更不需要提醒你们，走入社会，要如何变得务实与现实，因为你们终将以一生浸淫其中。
我唯一的害怕，是你们已经不相信了：不相信规则能战胜潜规则，不相信学场有别于官场；不相信学术不等于权术，不相信风骨远胜于媚骨。
你们或许不相信了，因为追求级别的越来越多，追求真理的越来越少；讲待遇的越来越多，讲理想的越来越少；大官越来越多，大师越来越少。
因此，在你们走向社会之际，我想说的只是，请看护好你曾经的激情和理想。在这个怀疑的时代，我们依然需要信仰。
从母校的教诲出发，二十多年社会生活给我的最大启示是：当许多同龄人都陷于时代的车轮下，那些能幸免的人，不仅因为坚强，更因为信仰。不用害怕圆滑的人说你不够成熟，不用在意聪明的人说你不够明智，不要照原样接受别人推荐给你的生活，选择坚守、选择理想，选择倾听内心的呼唤，才能拥有最饱满的人生。
无论中国怎样，请记得：你所站立的地方，就是你的中国；你怎么样，中国便怎么样；你是什么，中国便是什么；你有光明，中国便不再黑暗。

---
卢新宁

',
  'groups' => 'Think',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '223',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000480s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001236s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 223 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 223 LIMIT 1 [ RunTime:0.000284s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000923s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000263s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.000369s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=223,`p_id`=3,`title`='请看护好你曾经的激情和理想\r',`content`='# 请看护好你曾经的激情和理想\r\n我不需要提醒你们，未来将如何以具体琐碎，消磨这份浪漫与绚烂；\r\n也不需要提醒你们，人生将以怎样的平庸世故，消解你们的万丈雄心；\r\n更不需要提醒你们，走入社会，要如何变得务实与现实，因为你们终将以一生浸淫其中。\r\n我唯一的害怕，是你们已经不相信了：不相信规则能战胜潜规则，不相信学场有别于官场；不相信学术不等于权术，不相信风骨远胜于媚骨。\r\n你们或许不相信了，因为追求级别的越来越多，追求真理的越来越少；讲待遇的越来越多，讲理想的越来越少；大官越来越多，大师越来越少。\r\n因此，在你们走向社会之际，我想说的只是，请看护好你曾经的激情和理想。在这个怀疑的时代，我们依然需要信仰。\r\n从母校的教诲出发，二十多年社会生活给我的最大启示是：当许多同龄人都陷于时代的车轮下，那些能幸免的人，不仅因为坚强，更因为信仰。不用害怕圆滑的人说你不够成熟，不用在意聪明的人说你不够明智，不要照原样接受别人推荐给你的生活，选择坚守、选择理想，选择倾听内心的呼唤，才能拥有最饱满的人生。\r\n无论中国怎样，请记得：你所站立的地方，就是你的中国；你怎么样，中国便怎么样；你是什么，中国便是什么；你有光明，中国便不再黑暗。\r\n\r\n---\r\n卢新宁\r\n\r\n',`groups`='Think',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 223 [ RunTime:0.000494s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.001268s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'Think' [ RunTime:0.000498s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Think' LIMIT 1 [ RunTime:0.001106s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'Think' [ RunTime:0.000353s ]
---------------------------------------------------------------
[ 2018-10-15T17:14:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/223.html
[ info ] qingrang.top/daily/admin/note/shownote/id/223.html [运行时间：0.051219s][吞吐率：19.52req/s] [内存消耗：1,982.26kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/223.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '223',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000454s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001236s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 223 LIMIT 1 [ RunTime:0.000414s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000952s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000307s ]
---------------------------------------------------------------
[ 2018-10-15T17:14:32+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.070090s][吞吐率：14.27req/s] [内存消耗：2,173.54kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000525s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001354s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001512s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000441s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001013s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000316s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000437s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000923s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000342s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000451s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000430s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001031s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000243s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001040s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000674s ]
---------------------------------------------------------------
[ 2018-10-15T17:17:37+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.057037s][吞吐率：17.53req/s] [内存消耗：2,323.49kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '3',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000529s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001293s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 3  AND `id` > 2 ORDER BY date desc [ RunTime:0.001671s ]
---------------------------------------------------------------
[ 2018-10-15T17:17:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/10
[ info ] qingrang.top/daily/admin/note/shownote/id/10 [运行时间：0.054673s][吞吐率：18.29req/s] [内存消耗：1,980.70kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '10',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000546s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001377s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 10 LIMIT 1 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000961s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000778s ]
---------------------------------------------------------------
[ 2018-10-15T17:19:48+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.068824s][吞吐率：14.53req/s] [内存消耗：2,171.41kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000544s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001394s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001424s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000442s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001002s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000327s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000622s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000999s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000418s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000284s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000580s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000964s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000241s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001008s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000619s ]
---------------------------------------------------------------
[ 2018-10-15T17:19:54+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.073431s][吞吐率：13.62req/s] [内存消耗：2,105.35kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Show->notelst[ /var/www/html/daily/application/admin/controller/Show.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/show/notelst.html [ array (
  0 => 'list_new',
  1 => 'groups',
  2 => 'groups0',
  3 => 'groups1',
  4 => 'groups2',
  5 => 'groupname',
  6 => 'content',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000468s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001302s ]
[ sql ] [ SQL ] SELECT `content` FROM `note` WHERE  (  id=32 ) LIMIT 1 [ RunTime:0.000601s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 LIMIT 1 [ RunTime:0.001816s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `publish` = 1 ORDER BY id desc LIMIT 0,6 [ RunTime:0.000646s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001708s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `groups` <> 'Personal' [ RunTime:0.000460s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `groups` <> 'Personal'  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000620s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1  AND `groups` <> 'Personal' [ RunTime:0.000454s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000567s ]
---------------------------------------------------------------
[ 2018-10-15T17:20:22+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.069378s][吞吐率：14.41req/s] [内存消耗：2,170.88kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000562s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001569s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001623s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000472s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001087s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000301s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000437s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000497s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000281s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000441s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001106s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000226s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001087s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000676s ]
---------------------------------------------------------------
[ 2018-10-15T17:26:12+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/209.html
[ info ] qingrang.top/daily/admin/note/editnote/id/209.html [运行时间：0.064397s][吞吐率：15.53req/s] [内存消耗：2,063.28kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000600s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001552s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000517s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000945s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000316s ]
---------------------------------------------------------------
[ 2018-10-15T17:53:28+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/209.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/209.html [运行时间：0.102920s][吞吐率：9.72req/s] [内存消耗：2,220.84kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '54173',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 基础
[TOC]
## Scanner
```
package basics;

import java.util.Scanner;

public class ScannerDemo {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt();
		System.out.println("输入的整数是：" + num);
		
		float f = scan.nextFloat();
		System.out.println("输入的浮点数是：" + f);
		
//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:"\\r\\n",因为 nextInt 仅仅读取数字信息，而不会读取回车换行"\\r\\n".
//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串
		String str = scan.nextLine(); //读取回车换行
		String str2 = scan.nextLine(); //读取真正的字符串
		System.out.println("str1是：" + str);
		System.out.println("输入的字符串是：" + str2);
	}
}
```
## 匿名对象
### 1.1 使用方式
```
package study;

/**
 * 匿名对象
 * Created by CaptainQR on 2018/9/26.
 */
public class AnonymousObject {
    public static void main(String[] args) {
        new Car().age = 5;
        new Car().color = "blue";
        new Car().show();   //每一次 new 都是一个新的对象
    }
}

class Car{
    String color = "red";
    int age = 4;
    public void show(){
        System.out.println("Car color = " + this.color + ", Car age = " + this.age);
    }
}
```

---
~~Car color = red, Car age = 4~~

---

1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。

1. 可以将匿名对象作为实际参数进行传递。
`Show(new Car());`

## JAVA 的默认修饰符
### 1.default
只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。

## 多态
### 1. 简单应用
```
package study;

/**
 * 多态
 * Created by CaptainQR on 2018/9/26.
 */
public class Polymorphism {
    public static void main(String[] args) {
        function(new Cat());
        function(new Dog());
    }

    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象
        a.eat();
//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员
    }
}

/**
 * 抽象类
 */
abstract class Animale{
    abstract public void eat();
}

/**
 * 猫类 实现 抽象的 动物类
 */
class Cat extends Animale{
    public void eat() {
        System.out.println("Cat eat finish");
    }

    public void catMouse(){
        System.out.println("Cat catch mouse");
    }
}

/**
 * 狗类 实现 抽象的 动物类
 */
class Dog extends Animale{
    public void eat() {
        System.out.println("Dog eat bone");
    }

    public void seeHome(){
        System.out.println("Dog see Home");
    }
}
```
---
~~Cat eat finish
Dog eat bone~~

---
### 2.向上转型和向下转型
```
package study;

/**
 * 向上转型和向下转型
 * Created by CaptainQR on 2018/9/26.
 */
public class Transformation {
    public static void main(String[] args) {
        Animale2 a = new Cat2();    //向上转型
        a.eat();    //此时不能调用子类的特有方法
        Cat2 c = (Cat2)a;   //向下转型
        c.catchMouse(); //此时才能调用子类的特有方法
    }
}

abstract class Animale2{
    abstract public void eat();
}

class Cat2 extends Animale2{
    public void eat(){
        System.out.println("Cat eat finish");
    }
    public void catchMouse(){
        System.out.println("Cat cat mouse");
    }
}
```
---
~~Cat eat finish
Cat cat mouse~~

---
**千万不能出现这样的操作：就是将父类对象转成子类类型**

```
Animale a = new Animale();
Cat c = (Cat)a;
```
## 内部类
### 内部类的使用
#### 内部类的访问规则
1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）
2．外部类要访问内部类，必须建立内部类对象。

```
package basics;

import basics.Outer.StaticInner;

public class OutIn{
	public static void main(String[] args) {
		//外部类访问内部类
		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()
		Outer.Inner inner = new Outer().new Inner();
		inner.fun();
		
		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()
		StaticInner inner2 = new Outer.StaticInner();
		inner2.fun();
	}
}

class Outer {
	private static int x = 1;
	
	/**
	 * 非静态内部类
	 */
	class Inner{
		int x = 2;
		public void fun(){
			int x = 3;
			System.out.println(x);//内部类方法中的变量
			System.out.println(this.x);//内部类中的变量
			System.out.println(Outer.this.x);//外部类中的变量
		}
	}
	
	/**
	 * 静态内部类
	 */
	static class StaticInner{
		public void fun(){
			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。
			System.out.println("此为静态内部类方法" + x);
		}
	}
}
```
#### 访问格式
1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。
格式
```
外部类名.内部类名  变量名 = 外部类对象.内部类对象;
Outer.Inner in = new Outer().new Inner();
```
2．当内部类在成员位置上，就可以被成员修饰符所修饰。

比如：
- private：将内部类在外部类中进行封装。
- static:  内部类就具备static的特性。

当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。

>在外部其他类中，如何直接访问static内部类的非静态成员呢？

new Outer.Inner().function();
>在外部其他类中，如何直接访问static内部类的静态成员呢？

uter.Inner.function();

注意：
当内部类中定义了静态成员，该内部类必须是static的。
当外部类中的静态方法访问内部类时，内部类也必须是static的。

### 匿名内部类
匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类

有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。

#### 匿名内部类的格式
**new 父类或者接口(){定义子类的内容};**
```
Runnable r = new Runnable(){};

//多在 Android 中使用，例如监听方法的实现
new Demo(){	//匿名内部类
	public void show(){
		System.out.println("Inner show!");
	}
}.show();
```
#### 例子
```
package basics;

/**
 * 接口
 */
interface Inter{
	public void fun();
}

/**
 * 抽象方法
 */
abstract class Inter2{
	abstract public void fun();
}

class Test{
	//返回  Inter 对象
	public static Inter fun2(){
		return new Inter(){
			public void fun(){
				System.out.println("fun2 running!");
			}
		};
	}
	
	public static void fun3(){
		//对象.方法();
		new Inter2(){
			public void fun(){
				System.out.println("fun3 running!");
			}
		}.fun();
	}
}

public class AnonymousInnerClass {
	public static void main(String[] args) {
		//Test.fun2() 返回的是  Inter 对象，对象.方法
		Test.fun2().fun();
		
		Test.fun3();
	}
}
```
## 默认方法
默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。
```
package basics;

public interface Person {
	public void eat();
	
	//默认方法，有实现体
	default public void die(){
		System.out.println("Game Over!");
	}
}
```
Person 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default

>为什么会有默认方法

假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。

但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。

通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。

```
package basics;

public class DefaultFunction implements Person{

	@Override
	public void eat() {
		// TODO Auto-generated method stub
	}
	
	public static void main(String[] args) {
		//不需要做任何改动，直接得到这个默认方法
		new DefaultFunction().die();
	}
}
```
## 装箱和拆箱
### 封装类
所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。
### 自动装箱和自动拆箱
```
int i = 5;

//把一个基本类型的变量,转换为 Integer 对象
Integer it = new Integer(i);
//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱
Integer it2 = i;

//把一个 Integer 对象，转换为一个基本类型的 int
int i2 = it.intValue();
//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱
int i3 = it;
```
### Number 类
数字封装类有：Byte,Short,Integer,Long,Float,Double
这些类都是抽象类 Number 的子类
```
int i = 5;

Integer it = new Integer(i);
//Integer 是 Number 的子类，所以打印 true
System.out.println(it instanceof Number);
```
## Math
```
float f1 = 5.4f;

//四舍五入
System.out.println(Math.round(f1));

//得到一个 0-1 之间的随机浮点数（取不到1）
System.out.println(Math.random());

//得到一个 0-10 之间的随机整数 （取不到10）
System.out.println((int)( Math.random()*10));

//大于指定数据的最小整数
System.out.println(Math.ceil(f1));	//6.0

//小于指定数据的最大整数
System.out.println(Math.floor(f1));	//5.0

//开方
System.out.println(Math.sqrt(9));

//次方（2的4次方）
System.out.println(Math.pow(2,4));

//π
System.out.println(Math.PI);

//自然常数
System.out.println(Math.E);
```
## 格式控制
### 换行符和回车符
- 换行符就是另起一行 --- \'\\n\' 换行（newline）
- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）

在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。

然而在不同的操作系统，换行符是不一样的
- 在DOS和Windows中，每行结尾是 “\\r\\n”；
- Linux系统里，每行结尾只有 “\\n”；
- Mac系统里，每行结尾是只有 "\\r"。

为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。
### \\\\t 空格对齐
```
System.out.println("使用空格无法达到对齐的效果");
System.out.println("abc def");
System.out.println("ab def");
System.out.println("a def");

System.out.println("使用\\\\t制表符可以达到对齐的效果");
System.out.println("abc\\tdef");
System.out.println("ab\\tdef");
System.out.println("a\\tdef");
```
---
~~使用空格无法达到对齐的效果
abc def
ab def
a def
使用 \\t 制表符可以达到对齐的效果
abc	def
ab	def
a	def~~

---
## String
### 概述
字符串最大特点：一旦被初始化就不可以被改变。

String 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。
```
//s1 在内存中有一个对象
String s1 = "abc";
//s2 在内存中有两个对象
String s2 = new String("abc");
String s3 = "abc";

System.out.println(s1==s2);//false
System.out.println(s1==s3);//true
System.out.println(s1.equals(s2));//true
```

### 常见方法
#### 获取
```
String str = "aabcbcc";

//字符串的长度
System.out.println(str.length());

//根据位置获取位置上某个字符
System.out.println(str.charAt(1));

//===== 根据字符获取该字符在字符串中位置 =====
//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。
//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
//如果没有找到，返回-1
System.out.println(str.indexOf(\'b\',3));
//可以用于对指定判断是否包含
if(str.indexOf("aa")!=-1)


//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变
System.out.println(str.lastIndexOf(\'b\'));
```
#### 判断
```
//判断文件名称是否是Array单词开头。
sop(str.startsWith("Array"));
//判断文件名称是否是.java的文件。
sop(str.endsWith(".java"));
//判断文件中是否包含Demo
sop(str.contains("Demo"));
```
- 字符串中是否包含某一个子串。
`boolean contains(str):`
特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。
所以，也可以用于对指定判断是否包含。
`if(str.indexOf("aa")!=-1)`

而且该方法既可以判断，又可以获取出现的位置。

- 字符中是否有内容。
`boolean isEmpty(): 原理就是判断长度是否为0. `
- 字符串是否是以指定内容开头。
`boolean startsWith(str);`
- 字符串是否是以指定内容结尾。
`boolean endsWith(str);`
- 判断字符串内容是否相同。复写了Object类中的equals方法。
`boolean equals(str);`
- 判断内容是否相同，并忽略大小写。
`boolean equalsIgnoreCase();`

#### 转换
```
public static void method_trans()
	{
		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};
		String s= new String(arr,1,3);//3是个数
		sop("s="+s);
		String s1 = "zxcvbnm";
		char[] chs = s1.toCharArray();
		for(int x=0; x<chs.length; x++)
		{
			sop("ch="+chs[x]);
		}
	}
```
- 将字符数组转成字符串。
构造函数：
```
String(char[])
String(char[],offset,count):将字符数组中的一部分转成字符串。
```
静态方法：
```
static String copyValueOf(char[]);
static String copyValueOf(char[] data, int offset, int count) 
static String valueOf(char[]):
```
- 将字符串转成字符数组。**
`char[] toCharArray():`

- 将字节数组转成字符串。
`String(byte[])`
`String(byte[],offset,count):将字节数组中的一部分转成字符串。`

- 将字符串转成字节数组。
`byte[]  getBytes():`

- 将基本数据类型转成字符串。
`static String valueOf(int)`
`static String valueOf(double)`
特殊：字符串和字节数组在转换过程中，是可以指定编码表的。
#### 替换
`String replace(oldchar,newchar);`
```
public static void method_replace()
	{
		String s = "hello java";
	 //String s1 = s.replace(\'q\',\'n\');
//如果要替换的字符不存在，返回的还是原串。
		String s1 = s.replace("java","world");
		sop("s="+s);
		sop("s1="+s1);
	}
```
#### 切割
`String[] split(regex);`
```
public static void  method_split()
	{
		String s = "zhagnsa,lisi,wangwu";

		String[] arr  = s.split(",");

		for(int x = 0; x<arr.length; x++)
		{
			sop(arr[x]);
		}
	}	
```
#### 子串（获取字符串中的一部分）
`String substring(begin);`
`String substring(begin,end);`
```
public static void method_sub()
	{
		String s = "abcdef";
		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。
		sop(s.substring(2,4)); 
 		//包含头，不包含尾。s.substring(0,s.length());
	}
```
#### 转换，去除空格，比较
- 将字符串转成大写或则小写。
`String toUpperCase();`
`String toLowerCase();`

- 将字符串两端的多个空格去除。
`String trim();`

- 对两个字符串进行自然顺序的比较。
`int compareTo(string);`
### StringBuffer
#### 特点
1. 长度是可变化的。
2. 可以直接操作多个数据类型。
3. 最终会通过 toString 方法变成字符串。
4. 是一个容器。

>为什么StringBuffer可以变长？

和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。

比如说new StringBuffer("the")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。

如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。

注： 19 这个数量，不同的JDK数量是不一样的
### StringBuilder
StringBuffer 是线程同步。
StringBuilder 是线程不同步。
建议使用 StringBuilder
#### 存储。
StringBuffer append():将指定数据作为参数添加到已有数据结尾处。
StringBuffer insert(index,数据):可以将数据插入到指定index位置。
### 删除。
StringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。
StringBuffer deleteCharAt(index):删除指定位置的字符。
### 获取。
char charAt(int index) 
int indexOf(String str) 
int lastIndexOf(String str) 
int length() 
String substring(int start, int end)  
### 修改。
StringBuffer replace(start,end,string);
void setCharAt(int index, char ch) ;
### 反转。
StringBuffer reverse(); 
### 将缓冲区中指定数据存储到指定字符数组中。
void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)
## Date
|字符|含义|
|-|
|y| 代表年|
|M| 代表月|
|d| 代表日|
|H| 代表24进制的小时|
|h| 代表12进制的小时|
|m| 代表分钟|
|s| 代表秒|
|S| 代表毫秒|

```
//时间原点
Date date = new Date(5000);
System.out.println(date);	//Thu Jan 01 08:00:05 CST 1970

//当前时间
Date dateNow = new Date();
System.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018

//时间格式化
SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date d= new Date();
String str = sdf.format(d);
System.out.println(str);	//2018-10-12 11:10:23
```
## Calendar
```
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateDemo {
	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	 
    public static void main(String[] args) {
    	//采用单例模式获取日历对象Calendar.getInstance();
        Calendar c = Calendar.getInstance();
        
        //通过日历对象得到日期对象
        Date now = c.getTime();
        
        //===== 当前日期 =====
        System.out.println("当前日期：\\t" + format(c.getTime()));
 
        //===== 下个月的今天 =====
        //set方法，直接设置年/月/日
        c.setTime(now);
        //add方法，在原日期上增加年/月/日
        c.add(Calendar.MONTH, 1);
        System.out.println("下个月的今天:\\t" +format(c.getTime()));
 
        //===== 去年的今天 =====
        c.setTime(now);
        c.add(Calendar.YEAR, -1);
        System.out.println("去年的今天:\\t" +format(c.getTime()));
 
        //===== 上个月的第三天 =====
        c.setTime(now);
        c.add(Calendar.MONTH, -1);
        c.set(Calendar.DATE, 3);
        System.out.println("上个月的第三天:\\t" +format(c.getTime()));
 
    }
 
    private static String format(Date time) {
        return sdf.format(time);
    }
}
```
## 异常
### finally
- finally中定义的通常是-->关闭资源代码,因为资源必须释放。
- finally只有一种情况不会执行。
当执行到System.exit(0); //系统退出 jvm 结束
fianlly不会执行。

### throw 和 throws 的区别
- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`
throw：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`
- throws：表示出现异常的一种可能性，并不一定会发生这些异常；
throw：执行 throw 则一定抛出了某个异常对象。
### 异常的分类
异常分类： 可查异常，运行时异常和错误 3 种。
- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。
- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。
- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。
### 自定义异常
**自定义异常必须继承 Exception**

>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。

```
package basics;

public class TestDemo {
    public static void main(String[] args) {
    	Demo d = new Demo();
    	try{
    		int x = d.div(4, -1);
    		System.out.println("除数为负数");
    	}catch(FuShuException e){
    		System.out.println(e.toString() + "\\t错误的负数："+e.GetNum());
    	}
    	System.out.println("Over!!!");
    }
}

/**
 * 自定义异常信息
 */
class FuShuException extends Exception{	//自定义异常必须继承 Exception
	private int num;
	FuShuException(String msg,int num){
		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。
		super(msg);
		this.num = num;
	}
	public int GetNum(){
		return num;
	}
}

class Demo{
	public int div(int a,int b)throws FuShuException{
		if(b<0)	{
			throw new FuShuException("异常信息，除负数啦！", b);
		}
		return a/b;
	}
}
```
### 异常在子父类中的覆盖
1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。
2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。
3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。















',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000724s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002001s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000699s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000442s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001335s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000396s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000373s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=209,`p_id`=2,`title`='Java SE - 基础\r',`content`='# Java SE - 基础\r\n[TOC]\r\n## Scanner\r\n```\r\npackage basics;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class ScannerDemo {\r\n	public static void main(String[] args) {\r\n		Scanner scan = new Scanner(System.in);\r\n		int num = scan.nextInt();\r\n		System.out.println(\"输入的整数是：\" + num);\r\n		\r\n		float f = scan.nextFloat();\r\n		System.out.println(\"输入的浮点数是：\" + f);\r\n		\r\n//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:\"\\r\\n\",因为 nextInt 仅仅读取数字信息，而不会读取回车换行\"\\r\\n\".\r\n//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串\r\n		String str = scan.nextLine(); //读取回车换行\r\n		String str2 = scan.nextLine(); //读取真正的字符串\r\n		System.out.println(\"str1是：\" + str);\r\n		System.out.println(\"输入的字符串是：\" + str2);\r\n	}\r\n}\r\n```\r\n## 匿名对象\r\n### 1.1 使用方式\r\n```\r\npackage study;\r\n\r\n/**\r\n * 匿名对象\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class AnonymousObject {\r\n    public static void main(String[] args) {\r\n        new Car().age = 5;\r\n        new Car().color = \"blue\";\r\n        new Car().show();   //每一次 new 都是一个新的对象\r\n    }\r\n}\r\n\r\nclass Car{\r\n    String color = \"red\";\r\n    int age = 4;\r\n    public void show(){\r\n        System.out.println(\"Car color = \" + this.color + \", Car age = \" + this.age);\r\n    }\r\n}\r\n```\r\n\r\n---\r\n~~Car color = red, Car age = 4~~\r\n\r\n---\r\n\r\n1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。\r\n\r\n1. 可以将匿名对象作为实际参数进行传递。\r\n`Show(new Car());`\r\n\r\n## JAVA 的默认修饰符\r\n### 1.default\r\n只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。\r\n\r\n## 多态\r\n### 1. 简单应用\r\n```\r\npackage study;\r\n\r\n/**\r\n * 多态\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Polymorphism {\r\n    public static void main(String[] args) {\r\n        function(new Cat());\r\n        function(new Dog());\r\n    }\r\n\r\n    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象\r\n        a.eat();\r\n//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员\r\n    }\r\n}\r\n\r\n/**\r\n * 抽象类\r\n */\r\nabstract class Animale{\r\n    abstract public void eat();\r\n}\r\n\r\n/**\r\n * 猫类 实现 抽象的 动物类\r\n */\r\nclass Cat extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n\r\n    public void catMouse(){\r\n        System.out.println(\"Cat catch mouse\");\r\n    }\r\n}\r\n\r\n/**\r\n * 狗类 实现 抽象的 动物类\r\n */\r\nclass Dog extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Dog eat bone\");\r\n    }\r\n\r\n    public void seeHome(){\r\n        System.out.println(\"Dog see Home\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nDog eat bone~~\r\n\r\n---\r\n### 2.向上转型和向下转型\r\n```\r\npackage study;\r\n\r\n/**\r\n * 向上转型和向下转型\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Transformation {\r\n    public static void main(String[] args) {\r\n        Animale2 a = new Cat2();    //向上转型\r\n        a.eat();    //此时不能调用子类的特有方法\r\n        Cat2 c = (Cat2)a;   //向下转型\r\n        c.catchMouse(); //此时才能调用子类的特有方法\r\n    }\r\n}\r\n\r\nabstract class Animale2{\r\n    abstract public void eat();\r\n}\r\n\r\nclass Cat2 extends Animale2{\r\n    public void eat(){\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n    public void catchMouse(){\r\n        System.out.println(\"Cat cat mouse\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nCat cat mouse~~\r\n\r\n---\r\n**千万不能出现这样的操作：就是将父类对象转成子类类型**\r\n\r\n```\r\nAnimale a = new Animale();\r\nCat c = (Cat)a;\r\n```\r\n## 内部类\r\n### 内部类的使用\r\n#### 内部类的访问规则\r\n1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）\r\n2．外部类要访问内部类，必须建立内部类对象。\r\n\r\n```\r\npackage basics;\r\n\r\nimport basics.Outer.StaticInner;\r\n\r\npublic class OutIn{\r\n	public static void main(String[] args) {\r\n		//外部类访问内部类\r\n		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()\r\n		Outer.Inner inner = new Outer().new Inner();\r\n		inner.fun();\r\n		\r\n		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()\r\n		StaticInner inner2 = new Outer.StaticInner();\r\n		inner2.fun();\r\n	}\r\n}\r\n\r\nclass Outer {\r\n	private static int x = 1;\r\n	\r\n	/**\r\n	 * 非静态内部类\r\n	 */\r\n	class Inner{\r\n		int x = 2;\r\n		public void fun(){\r\n			int x = 3;\r\n			System.out.println(x);//内部类方法中的变量\r\n			System.out.println(this.x);//内部类中的变量\r\n			System.out.println(Outer.this.x);//外部类中的变量\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * 静态内部类\r\n	 */\r\n	static class StaticInner{\r\n		public void fun(){\r\n			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。\r\n			System.out.println(\"此为静态内部类方法\" + x);\r\n		}\r\n	}\r\n}\r\n```\r\n#### 访问格式\r\n1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。\r\n格式\r\n```\r\n外部类名.内部类名  变量名 = 外部类对象.内部类对象;\r\nOuter.Inner in = new Outer().new Inner();\r\n```\r\n2．当内部类在成员位置上，就可以被成员修饰符所修饰。\r\n\r\n比如：\r\n- private：将内部类在外部类中进行封装。\r\n- static:  内部类就具备static的特性。\r\n\r\n当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。\r\n\r\n>在外部其他类中，如何直接访问static内部类的非静态成员呢？\r\n\r\nnew Outer.Inner().function();\r\n>在外部其他类中，如何直接访问static内部类的静态成员呢？\r\n\r\nuter.Inner.function();\r\n\r\n注意：\r\n当内部类中定义了静态成员，该内部类必须是static的。\r\n当外部类中的静态方法访问内部类时，内部类也必须是static的。\r\n\r\n### 匿名内部类\r\n匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类\r\n\r\n有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。\r\n\r\n#### 匿名内部类的格式\r\n**new 父类或者接口(){定义子类的内容};**\r\n```\r\nRunnable r = new Runnable(){};\r\n\r\n//多在 Android 中使用，例如监听方法的实现\r\nnew Demo(){	//匿名内部类\r\n	public void show(){\r\n		System.out.println(\"Inner show!\");\r\n	}\r\n}.show();\r\n```\r\n#### 例子\r\n```\r\npackage basics;\r\n\r\n/**\r\n * 接口\r\n */\r\ninterface Inter{\r\n	public void fun();\r\n}\r\n\r\n/**\r\n * 抽象方法\r\n */\r\nabstract class Inter2{\r\n	abstract public void fun();\r\n}\r\n\r\nclass Test{\r\n	//返回  Inter 对象\r\n	public static Inter fun2(){\r\n		return new Inter(){\r\n			public void fun(){\r\n				System.out.println(\"fun2 running!\");\r\n			}\r\n		};\r\n	}\r\n	\r\n	public static void fun3(){\r\n		//对象.方法();\r\n		new Inter2(){\r\n			public void fun(){\r\n				System.out.println(\"fun3 running!\");\r\n			}\r\n		}.fun();\r\n	}\r\n}\r\n\r\npublic class AnonymousInnerClass {\r\n	public static void main(String[] args) {\r\n		//Test.fun2() 返回的是  Inter 对象，对象.方法\r\n		Test.fun2().fun();\r\n		\r\n		Test.fun3();\r\n	}\r\n}\r\n```\r\n## 默认方法\r\n默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。\r\n```\r\npackage basics;\r\n\r\npublic interface Person {\r\n	public void eat();\r\n	\r\n	//默认方法，有实现体\r\n	default public void die(){\r\n		System.out.println(\"Game Over!\");\r\n	}\r\n}\r\n```\r\nPerson 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default\r\n\r\n>为什么会有默认方法\r\n\r\n假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。\r\n\r\n但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。\r\n\r\n通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class DefaultFunction implements Person{\r\n\r\n	@Override\r\n	public void eat() {\r\n		// TODO Auto-generated method stub\r\n	}\r\n	\r\n	public static void main(String[] args) {\r\n		//不需要做任何改动，直接得到这个默认方法\r\n		new DefaultFunction().die();\r\n	}\r\n}\r\n```\r\n## 装箱和拆箱\r\n### 封装类\r\n所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。\r\n### 自动装箱和自动拆箱\r\n```\r\nint i = 5;\r\n\r\n//把一个基本类型的变量,转换为 Integer 对象\r\nInteger it = new Integer(i);\r\n//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱\r\nInteger it2 = i;\r\n\r\n//把一个 Integer 对象，转换为一个基本类型的 int\r\nint i2 = it.intValue();\r\n//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱\r\nint i3 = it;\r\n```\r\n### Number 类\r\n数字封装类有：Byte,Short,Integer,Long,Float,Double\r\n这些类都是抽象类 Number 的子类\r\n```\r\nint i = 5;\r\n\r\nInteger it = new Integer(i);\r\n//Integer 是 Number 的子类，所以打印 true\r\nSystem.out.println(it instanceof Number);\r\n```\r\n## Math\r\n```\r\nfloat f1 = 5.4f;\r\n\r\n//四舍五入\r\nSystem.out.println(Math.round(f1));\r\n\r\n//得到一个 0-1 之间的随机浮点数（取不到1）\r\nSystem.out.println(Math.random());\r\n\r\n//得到一个 0-10 之间的随机整数 （取不到10）\r\nSystem.out.println((int)( Math.random()*10));\r\n\r\n//大于指定数据的最小整数\r\nSystem.out.println(Math.ceil(f1));	//6.0\r\n\r\n//小于指定数据的最大整数\r\nSystem.out.println(Math.floor(f1));	//5.0\r\n\r\n//开方\r\nSystem.out.println(Math.sqrt(9));\r\n\r\n//次方（2的4次方）\r\nSystem.out.println(Math.pow(2,4));\r\n\r\n//π\r\nSystem.out.println(Math.PI);\r\n\r\n//自然常数\r\nSystem.out.println(Math.E);\r\n```\r\n## 格式控制\r\n### 换行符和回车符\r\n- 换行符就是另起一行 --- \'\\n\' 换行（newline）\r\n- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）\r\n\r\n在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。\r\n\r\n然而在不同的操作系统，换行符是不一样的\r\n- 在DOS和Windows中，每行结尾是 “\\r\\n”；\r\n- Linux系统里，每行结尾只有 “\\n”；\r\n- Mac系统里，每行结尾是只有 \"\\r\"。\r\n\r\n为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。\r\n### \\\\t 空格对齐\r\n```\r\nSystem.out.println(\"使用空格无法达到对齐的效果\");\r\nSystem.out.println(\"abc def\");\r\nSystem.out.println(\"ab def\");\r\nSystem.out.println(\"a def\");\r\n\r\nSystem.out.println(\"使用\\\\t制表符可以达到对齐的效果\");\r\nSystem.out.println(\"abc\\tdef\");\r\nSystem.out.println(\"ab\\tdef\");\r\nSystem.out.println(\"a\\tdef\");\r\n```\r\n---\r\n~~使用空格无法达到对齐的效果\r\nabc def\r\nab def\r\na def\r\n使用 \\t 制表符可以达到对齐的效果\r\nabc	def\r\nab	def\r\na	def~~\r\n\r\n---\r\n## String\r\n### 概述\r\n字符串最大特点：一旦被初始化就不可以被改变。\r\n\r\nString 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。\r\n```\r\n//s1 在内存中有一个对象\r\nString s1 = \"abc\";\r\n//s2 在内存中有两个对象\r\nString s2 = new String(\"abc\");\r\nString s3 = \"abc\";\r\n\r\nSystem.out.println(s1==s2);//false\r\nSystem.out.println(s1==s3);//true\r\nSystem.out.println(s1.equals(s2));//true\r\n```\r\n\r\n### 常见方法\r\n#### 获取\r\n```\r\nString str = \"aabcbcc\";\r\n\r\n//字符串的长度\r\nSystem.out.println(str.length());\r\n\r\n//根据位置获取位置上某个字符\r\nSystem.out.println(str.charAt(1));\r\n\r\n//===== 根据字符获取该字符在字符串中位置 =====\r\n//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。\r\n//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。\r\n//如果没有找到，返回-1\r\nSystem.out.println(str.indexOf(\'b\',3));\r\n//可以用于对指定判断是否包含\r\nif(str.indexOf(\"aa\")!=-1)\r\n\r\n\r\n//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变\r\nSystem.out.println(str.lastIndexOf(\'b\'));\r\n```\r\n#### 判断\r\n```\r\n//判断文件名称是否是Array单词开头。\r\nsop(str.startsWith(\"Array\"));\r\n//判断文件名称是否是.java的文件。\r\nsop(str.endsWith(\".java\"));\r\n//判断文件中是否包含Demo\r\nsop(str.contains(\"Demo\"));\r\n```\r\n- 字符串中是否包含某一个子串。\r\n`boolean contains(str):`\r\n特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。\r\n所以，也可以用于对指定判断是否包含。\r\n`if(str.indexOf(\"aa\")!=-1)`\r\n\r\n而且该方法既可以判断，又可以获取出现的位置。\r\n\r\n- 字符中是否有内容。\r\n`boolean isEmpty(): 原理就是判断长度是否为0. `\r\n- 字符串是否是以指定内容开头。\r\n`boolean startsWith(str);`\r\n- 字符串是否是以指定内容结尾。\r\n`boolean endsWith(str);`\r\n- 判断字符串内容是否相同。复写了Object类中的equals方法。\r\n`boolean equals(str);`\r\n- 判断内容是否相同，并忽略大小写。\r\n`boolean equalsIgnoreCase();`\r\n\r\n#### 转换\r\n```\r\npublic static void method_trans()\r\n	{\r\n		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};\r\n		String s= new String(arr,1,3);//3是个数\r\n		sop(\"s=\"+s);\r\n		String s1 = \"zxcvbnm\";\r\n		char[] chs = s1.toCharArray();\r\n		for(int x=0; x<chs.length; x++)\r\n		{\r\n			sop(\"ch=\"+chs[x]);\r\n		}\r\n	}\r\n```\r\n- 将字符数组转成字符串。\r\n构造函数：\r\n```\r\nString(char[])\r\nString(char[],offset,count):将字符数组中的一部分转成字符串。\r\n```\r\n静态方法：\r\n```\r\nstatic String copyValueOf(char[]);\r\nstatic String copyValueOf(char[] data, int offset, int count) \r\nstatic String valueOf(char[]):\r\n```\r\n- 将字符串转成字符数组。**\r\n`char[] toCharArray():`\r\n\r\n- 将字节数组转成字符串。\r\n`String(byte[])`\r\n`String(byte[],offset,count):将字节数组中的一部分转成字符串。`\r\n\r\n- 将字符串转成字节数组。\r\n`byte[]  getBytes():`\r\n\r\n- 将基本数据类型转成字符串。\r\n`static String valueOf(int)`\r\n`static String valueOf(double)`\r\n特殊：字符串和字节数组在转换过程中，是可以指定编码表的。\r\n#### 替换\r\n`String replace(oldchar,newchar);`\r\n```\r\npublic static void method_replace()\r\n	{\r\n		String s = \"hello java\";\r\n	 //String s1 = s.replace(\'q\',\'n\');\r\n//如果要替换的字符不存在，返回的还是原串。\r\n		String s1 = s.replace(\"java\",\"world\");\r\n		sop(\"s=\"+s);\r\n		sop(\"s1=\"+s1);\r\n	}\r\n```\r\n#### 切割\r\n`String[] split(regex);`\r\n```\r\npublic static void  method_split()\r\n	{\r\n		String s = \"zhagnsa,lisi,wangwu\";\r\n\r\n		String[] arr  = s.split(\",\");\r\n\r\n		for(int x = 0; x<arr.length; x++)\r\n		{\r\n			sop(arr[x]);\r\n		}\r\n	}	\r\n```\r\n#### 子串（获取字符串中的一部分）\r\n`String substring(begin);`\r\n`String substring(begin,end);`\r\n```\r\npublic static void method_sub()\r\n	{\r\n		String s = \"abcdef\";\r\n		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。\r\n		sop(s.substring(2,4)); \r\n 		//包含头，不包含尾。s.substring(0,s.length());\r\n	}\r\n```\r\n#### 转换，去除空格，比较\r\n- 将字符串转成大写或则小写。\r\n`String toUpperCase();`\r\n`String toLowerCase();`\r\n\r\n- 将字符串两端的多个空格去除。\r\n`String trim();`\r\n\r\n- 对两个字符串进行自然顺序的比较。\r\n`int compareTo(string);`\r\n### StringBuffer\r\n#### 特点\r\n1. 长度是可变化的。\r\n2. 可以直接操作多个数据类型。\r\n3. 最终会通过 toString 方法变成字符串。\r\n4. 是一个容器。\r\n\r\n>为什么StringBuffer可以变长？\r\n\r\n和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。\r\n\r\n比如说new StringBuffer(\"the\")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。\r\n\r\n如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。\r\n\r\n注： 19 这个数量，不同的JDK数量是不一样的\r\n### StringBuilder\r\nStringBuffer 是线程同步。\r\nStringBuilder 是线程不同步。\r\n建议使用 StringBuilder\r\n#### 存储。\r\nStringBuffer append():将指定数据作为参数添加到已有数据结尾处。\r\nStringBuffer insert(index,数据):可以将数据插入到指定index位置。\r\n### 删除。\r\nStringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。\r\nStringBuffer deleteCharAt(index):删除指定位置的字符。\r\n### 获取。\r\nchar charAt(int index) \r\nint indexOf(String str) \r\nint lastIndexOf(String str) \r\nint length() \r\nString substring(int start, int end)  \r\n### 修改。\r\nStringBuffer replace(start,end,string);\r\nvoid setCharAt(int index, char ch) ;\r\n### 反转。\r\nStringBuffer reverse(); \r\n### 将缓冲区中指定数据存储到指定字符数组中。\r\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\r\n## Date\r\n|字符|含义|\r\n|-|\r\n|y| 代表年|\r\n|M| 代表月|\r\n|d| 代表日|\r\n|H| 代表24进制的小时|\r\n|h| 代表12进制的小时|\r\n|m| 代表分钟|\r\n|s| 代表秒|\r\n|S| 代表毫秒|\r\n\r\n```\r\n//时间原点\r\nDate date = new Date(5000);\r\nSystem.out.println(date);	//Thu Jan 01 08:00:05 CST 1970\r\n\r\n//当前时间\r\nDate dateNow = new Date();\r\nSystem.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018\r\n\r\n//时间格式化\r\nSimpleDateFormat sdf =new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\nDate d= new Date();\r\nString str = sdf.format(d);\r\nSystem.out.println(str);	//2018-10-12 11:10:23\r\n```\r\n## Calendar\r\n```\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n	private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n	 \r\n    public static void main(String[] args) {\r\n    	//采用单例模式获取日历对象Calendar.getInstance();\r\n        Calendar c = Calendar.getInstance();\r\n        \r\n        //通过日历对象得到日期对象\r\n        Date now = c.getTime();\r\n        \r\n        //===== 当前日期 =====\r\n        System.out.println(\"当前日期：\\t\" + format(c.getTime()));\r\n \r\n        //===== 下个月的今天 =====\r\n        //set方法，直接设置年/月/日\r\n        c.setTime(now);\r\n        //add方法，在原日期上增加年/月/日\r\n        c.add(Calendar.MONTH, 1);\r\n        System.out.println(\"下个月的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 去年的今天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.YEAR, -1);\r\n        System.out.println(\"去年的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 上个月的第三天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.MONTH, -1);\r\n        c.set(Calendar.DATE, 3);\r\n        System.out.println(\"上个月的第三天:\\t\" +format(c.getTime()));\r\n \r\n    }\r\n \r\n    private static String format(Date time) {\r\n        return sdf.format(time);\r\n    }\r\n}\r\n```\r\n## 异常\r\n### finally\r\n- finally中定义的通常是-->关闭资源代码,因为资源必须释放。\r\n- finally只有一种情况不会执行。\r\n当执行到System.exit(0); //系统退出 jvm 结束\r\nfianlly不会执行。\r\n\r\n### throw 和 throws 的区别\r\n- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`\r\nthrow：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`\r\n- throws：表示出现异常的一种可能性，并不一定会发生这些异常；\r\nthrow：执行 throw 则一定抛出了某个异常对象。\r\n### 异常的分类\r\n异常分类： 可查异常，运行时异常和错误 3 种。\r\n- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。\r\n- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。\r\n在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。\r\n- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。\r\n### 自定义异常\r\n**自定义异常必须继承 Exception**\r\n\r\n>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class TestDemo {\r\n    public static void main(String[] args) {\r\n    	Demo d = new Demo();\r\n    	try{\r\n    		int x = d.div(4, -1);\r\n    		System.out.println(\"除数为负数\");\r\n    	}catch(FuShuException e){\r\n    		System.out.println(e.toString() + \"\\t错误的负数：\"+e.GetNum());\r\n    	}\r\n    	System.out.println(\"Over!!!\");\r\n    }\r\n}\r\n\r\n/**\r\n * 自定义异常信息\r\n */\r\nclass FuShuException extends Exception{	//自定义异常必须继承 Exception\r\n	private int num;\r\n	FuShuException(String msg,int num){\r\n		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。\r\n		super(msg);\r\n		this.num = num;\r\n	}\r\n	public int GetNum(){\r\n		return num;\r\n	}\r\n}\r\n\r\nclass Demo{\r\n	public int div(int a,int b)throws FuShuException{\r\n		if(b<0)	{\r\n			throw new FuShuException(\"异常信息，除负数啦！\", b);\r\n		}\r\n		return a/b;\r\n	}\r\n}\r\n```\r\n### 异常在子父类中的覆盖\r\n1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。\r\n2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。\r\n3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 209 [ RunTime:0.001491s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001679s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000517s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001569s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000504s ]
---------------------------------------------------------------
[ 2018-10-15T17:53:29+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/209.html
[ info ] qingrang.top/daily/admin/note/shownote/id/209.html [运行时间：0.059351s][吞吐率：16.85req/s] [内存消耗：2,018.85kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000635s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001286s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000563s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001066s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000283s ]
---------------------------------------------------------------
[ 2018-10-15T17:54:40+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/209.html
[ info ] qingrang.top/daily/admin/note/editnote/id/209.html [运行时间：0.065272s][吞吐率：15.32req/s] [内存消耗：2,066.52kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000556s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001644s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000548s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001243s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000302s ]
---------------------------------------------------------------
[ 2018-10-15T17:55:07+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/209.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/209.html [运行时间：0.065456s][吞吐率：15.28req/s] [内存消耗：2,221.74kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '54408',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 基础
[TOC]
## Scanner
```
package basics;

import java.util.Scanner;

public class ScannerDemo {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt();
		System.out.println("输入的整数是：" + num);
		
		float f = scan.nextFloat();
		System.out.println("输入的浮点数是：" + f);
		
//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:"\\r\\n",因为 nextInt 仅仅读取数字信息，而不会读取回车换行"\\r\\n".
//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串
		String str = scan.nextLine(); //读取回车换行
		String str2 = scan.nextLine(); //读取真正的字符串
		System.out.println("str1是：" + str);
		System.out.println("输入的字符串是：" + str2);
	}
}
```
## 匿名对象
### 1.1 使用方式
```
package study;

/**
 * 匿名对象
 * Created by CaptainQR on 2018/9/26.
 */
public class AnonymousObject {
    public static void main(String[] args) {
        new Car().age = 5;
        new Car().color = "blue";
        new Car().show();   //每一次 new 都是一个新的对象
    }
}

class Car{
    String color = "red";
    int age = 4;
    public void show(){
        System.out.println("Car color = " + this.color + ", Car age = " + this.age);
    }
}
```

---
~~Car color = red, Car age = 4~~

---

1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。

1. 可以将匿名对象作为实际参数进行传递。
`Show(new Car());`

## JAVA 的默认修饰符
### 1.default
只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。

## 多态
### 1. 简单应用
```
package study;

/**
 * 多态
 * Created by CaptainQR on 2018/9/26.
 */
public class Polymorphism {
    public static void main(String[] args) {
        function(new Cat());
        function(new Dog());
    }

    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象
        a.eat();
//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员
    }
}

/**
 * 抽象类
 */
abstract class Animale{
    abstract public void eat();
}

/**
 * 猫类 实现 抽象的 动物类
 */
class Cat extends Animale{
    public void eat() {
        System.out.println("Cat eat finish");
    }

    public void catMouse(){
        System.out.println("Cat catch mouse");
    }
}

/**
 * 狗类 实现 抽象的 动物类
 */
class Dog extends Animale{
    public void eat() {
        System.out.println("Dog eat bone");
    }

    public void seeHome(){
        System.out.println("Dog see Home");
    }
}
```
---
~~Cat eat finish
Dog eat bone~~

---
### 2.向上转型和向下转型
```
package study;

/**
 * 向上转型和向下转型
 * Created by CaptainQR on 2018/9/26.
 */
public class Transformation {
    public static void main(String[] args) {
        Animale2 a = new Cat2();    //向上转型
        a.eat();    //此时不能调用子类的特有方法
        Cat2 c = (Cat2)a;   //向下转型
        c.catchMouse(); //此时才能调用子类的特有方法
    }
}

abstract class Animale2{
    abstract public void eat();
}

class Cat2 extends Animale2{
    public void eat(){
        System.out.println("Cat eat finish");
    }
    public void catchMouse(){
        System.out.println("Cat cat mouse");
    }
}
```
---
~~Cat eat finish
Cat cat mouse~~

---
**千万不能出现这样的操作：就是将父类对象转成子类类型**

```
Animale a = new Animale();
Cat c = (Cat)a;
```
## 内部类
### 内部类的使用
#### 内部类的访问规则
1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）
2．外部类要访问内部类，必须建立内部类对象。

```
package basics;

import basics.Outer.StaticInner;

public class OutIn{
	public static void main(String[] args) {
		//外部类访问内部类
		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()
		Outer.Inner inner = new Outer().new Inner();
		inner.fun();
		
		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()
		StaticInner inner2 = new Outer.StaticInner();
		inner2.fun();
	}
}

class Outer {
	private static int x = 1;
	
	/**
	 * 非静态内部类
	 */
	class Inner{
		int x = 2;
		public void fun(){
			int x = 3;
			System.out.println(x);//内部类方法中的变量
			System.out.println(this.x);//内部类中的变量
			System.out.println(Outer.this.x);//外部类中的变量
		}
	}
	
	/**
	 * 静态内部类
	 */
	static class StaticInner{
		public void fun(){
			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。
			System.out.println("此为静态内部类方法" + x);
		}
	}
}
```
#### 访问格式
1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。
格式
```
外部类名.内部类名  变量名 = 外部类对象.内部类对象;
Outer.Inner in = new Outer().new Inner();
```
2．当内部类在成员位置上，就可以被成员修饰符所修饰。

比如：
- private：将内部类在外部类中进行封装。
- static:  内部类就具备static的特性。

当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。

>在外部其他类中，如何直接访问static内部类的非静态成员呢？

new Outer.Inner().function();
>在外部其他类中，如何直接访问static内部类的静态成员呢？

uter.Inner.function();

注意：
当内部类中定义了静态成员，该内部类必须是static的。
当外部类中的静态方法访问内部类时，内部类也必须是static的。

### 匿名内部类
匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类

有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。

#### 匿名内部类的格式
**new 父类或者接口(){定义子类的内容};**
```
Runnable r = new Runnable(){};

//多在 Android 中使用，例如监听方法的实现
new Demo(){	//匿名内部类
	public void show(){
		System.out.println("Inner show!");
	}
}.show();
```
#### 例子
```
package basics;

/**
 * 接口
 */
interface Inter{
	public void fun();
}

/**
 * 抽象方法
 */
abstract class Inter2{
	abstract public void fun();
}

class Test{
	//返回  Inter 对象
	public static Inter fun2(){
		return new Inter(){
			public void fun(){
				System.out.println("fun2 running!");
			}
		};
	}
	
	public static void fun3(){
		//对象.方法();
		new Inter2(){
			public void fun(){
				System.out.println("fun3 running!");
			}
		}.fun();
	}
}

public class AnonymousInnerClass {
	public static void main(String[] args) {
		//Test.fun2() 返回的是  Inter 对象，对象.方法
		Test.fun2().fun();
		
		Test.fun3();
	}
}
```
## 默认方法
默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。
```
package basics;

public interface Person {
	public void eat();
	
	//默认方法，有实现体
	default public void die(){
		System.out.println("Game Over!");
	}
}
```
Person 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default

>为什么会有默认方法

假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。

但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。

通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。

```
package basics;

public class DefaultFunction implements Person{

	@Override
	public void eat() {
		// TODO Auto-generated method stub
	}
	
	public static void main(String[] args) {
		//不需要做任何改动，直接得到这个默认方法
		new DefaultFunction().die();
	}
}
```
## 装箱和拆箱
### 封装类
所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。
### 自动装箱和自动拆箱
```
int i = 5;

//把一个基本类型的变量,转换为 Integer 对象
Integer it = new Integer(i);
//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱
Integer it2 = i;

//把一个 Integer 对象，转换为一个基本类型的 int
int i2 = it.intValue();
//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱
int i3 = it;
```
### Number 类
数字封装类有：Byte,Short,Integer,Long,Float,Double
这些类都是抽象类 Number 的子类
```
int i = 5;

Integer it = new Integer(i);
//Integer 是 Number 的子类，所以打印 true
System.out.println(it instanceof Number);
```
## Math
```
float f1 = 5.4f;

//四舍五入
System.out.println(Math.round(f1));

//得到一个 0-1 之间的随机浮点数（取不到1）
System.out.println(Math.random());

//得到一个 0-10 之间的随机整数 （取不到10）
System.out.println((int)( Math.random()*10));

//大于指定数据的最小整数
System.out.println(Math.ceil(f1));	//6.0

//小于指定数据的最大整数
System.out.println(Math.floor(f1));	//5.0

//开方
System.out.println(Math.sqrt(9));

//次方（2的4次方）
System.out.println(Math.pow(2,4));

//π
System.out.println(Math.PI);

//自然常数
System.out.println(Math.E);
```
## 格式控制
### 换行符和回车符
- 换行符就是另起一行 --- \'\\n\' 换行（newline）
- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）

在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。

然而在不同的操作系统，换行符是不一样的
- 在DOS和Windows中，每行结尾是 “\\r\\n”；
- Linux系统里，每行结尾只有 “\\n”；
- Mac系统里，每行结尾是只有 "\\r"。

为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。
### \\\\t 空格对齐
```
System.out.println("使用空格无法达到对齐的效果");
System.out.println("abc def");
System.out.println("ab def");
System.out.println("a def");

System.out.println("使用\\\\t制表符可以达到对齐的效果");
System.out.println("abc\\tdef");
System.out.println("ab\\tdef");
System.out.println("a\\tdef");
```
---
~~使用空格无法达到对齐的效果
abc def
ab def
a def
使用 \\t 制表符可以达到对齐的效果
abc	def
ab	def
a	def~~

---
## String
### 概述
字符串最大特点：一旦被初始化就不可以被改变。

String 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。
```
//s1 在内存中有一个对象
String s1 = "abc";
//s2 在内存中有两个对象
String s2 = new String("abc");
String s3 = "abc";

System.out.println(s1==s2);//false
System.out.println(s1==s3);//true
System.out.println(s1.equals(s2));//true
```

### 常见方法
#### 获取
```
String str = "aabcbcc";

//字符串的长度
System.out.println(str.length());

//根据位置获取位置上某个字符
System.out.println(str.charAt(1));

//===== 根据字符获取该字符在字符串中位置 =====
//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。
//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
//如果没有找到，返回-1
System.out.println(str.indexOf(\'b\',3));
//可以用于对指定判断是否包含
if(str.indexOf("aa")!=-1)


//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变
System.out.println(str.lastIndexOf(\'b\'));
```
#### 判断
```
//判断文件名称是否是Array单词开头。
sop(str.startsWith("Array"));
//判断文件名称是否是.java的文件。
sop(str.endsWith(".java"));
//判断文件中是否包含Demo
sop(str.contains("Demo"));
```
- 字符串中是否包含某一个子串。
`boolean contains(str):`
特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。
所以，也可以用于对指定判断是否包含。
`if(str.indexOf("aa")!=-1)`

而且该方法既可以判断，又可以获取出现的位置。

- 字符中是否有内容。
`boolean isEmpty(): 原理就是判断长度是否为0. `
- 字符串是否是以指定内容开头。
`boolean startsWith(str);`
- 字符串是否是以指定内容结尾。
`boolean endsWith(str);`
- 判断字符串内容是否相同。复写了Object类中的equals方法。
`boolean equals(str);`
- 判断内容是否相同，并忽略大小写。
`boolean equalsIgnoreCase();`

#### 转换
```
public static void method_trans()
	{
		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};
		String s= new String(arr,1,3);//3是个数
		sop("s="+s);
		String s1 = "zxcvbnm";
		char[] chs = s1.toCharArray();
		for(int x=0; x<chs.length; x++)
		{
			sop("ch="+chs[x]);
		}
	}
```
- 将字符数组转成字符串。
构造函数：
```
String(char[])
String(char[],offset,count):将字符数组中的一部分转成字符串。
```
静态方法：
```
static String copyValueOf(char[]);
static String copyValueOf(char[] data, int offset, int count) 
static String valueOf(char[]):
```
- 将字符串转成字符数组。**
`char[] toCharArray():`

- 将字节数组转成字符串。
`String(byte[])`
`String(byte[],offset,count):将字节数组中的一部分转成字符串。`

- 将字符串转成字节数组。
`byte[]  getBytes():`

- 将基本数据类型转成字符串。
`static String valueOf(int)`
`static String valueOf(double)`
特殊：字符串和字节数组在转换过程中，是可以指定编码表的。
#### 替换
`String replace(oldchar,newchar);`
```
public static void method_replace()
	{
		String s = "hello java";
	 //String s1 = s.replace(\'q\',\'n\');
//如果要替换的字符不存在，返回的还是原串。
		String s1 = s.replace("java","world");
		sop("s="+s);
		sop("s1="+s1);
	}
```
#### 切割
`String[] split(regex);`
```
public static void  method_split()
	{
		String s = "zhagnsa,lisi,wangwu";

		String[] arr  = s.split(",");

		for(int x = 0; x<arr.length; x++)
		{
			sop(arr[x]);
		}
	}	
```
#### 子串（获取字符串中的一部分）
`String substring(begin);`
`String substring(begin,end);`
```
public static void method_sub()
	{
		String s = "abcdef";
		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。
		sop(s.substring(2,4)); 
 		//包含头，不包含尾。s.substring(0,s.length());
	}
```
#### 转换，去除空格，比较
- 将字符串转成大写或则小写。
`String toUpperCase();`
`String toLowerCase();`

- 将字符串两端的多个空格去除。
`String trim();`

- 对两个字符串进行自然顺序的比较。
`int compareTo(string);`
### StringBuffer
#### 特点
1. 长度是可变化的。
2. 可以直接操作多个数据类型。
3. 最终会通过 toString 方法变成字符串。
4. 是一个容器。

>为什么StringBuffer可以变长？

和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。

比如说new StringBuffer("the")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。

如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。

注： 19 这个数量，不同的JDK数量是不一样的
### StringBuilder
StringBuffer 是线程同步。
StringBuilder 是线程不同步。
建议使用 StringBuilder
#### 存储。
StringBuffer append():将指定数据作为参数添加到已有数据结尾处。
StringBuffer insert(index,数据):可以将数据插入到指定index位置。
### 删除。
StringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。
StringBuffer deleteCharAt(index):删除指定位置的字符。
### 获取。
char charAt(int index) 
int indexOf(String str) 
int lastIndexOf(String str) 
int length() 
String substring(int start, int end)  
### 修改。
StringBuffer replace(start,end,string);
void setCharAt(int index, char ch) ;
### 反转。
StringBuffer reverse(); 
### 将缓冲区中指定数据存储到指定字符数组中。
void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)
## Date
|字符|含义|
|-|
|y| 代表年|
|M| 代表月|
|d| 代表日|
|H| 代表24进制的小时|
|h| 代表12进制的小时|
|m| 代表分钟|
|s| 代表秒|
|S| 代表毫秒|

```
//时间原点
Date date = new Date(5000);
System.out.println(date);	//Thu Jan 01 08:00:05 CST 1970

//当前时间
Date dateNow = new Date();
System.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018

//时间格式化
SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date d= new Date();
String str = sdf.format(d);
System.out.println(str);	//2018-10-12 11:10:23
```
## Calendar
```
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateDemo {
	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	 
    public static void main(String[] args) {
    	//采用单例模式获取日历对象Calendar.getInstance();
        Calendar c = Calendar.getInstance();
        
        //通过日历对象得到日期对象
        Date now = c.getTime();
        
        //===== 当前日期 =====
        System.out.println("当前日期：\\t" + format(c.getTime()));
 
        //===== 下个月的今天 =====
        //set方法，直接设置年/月/日
        c.setTime(now);
        //add方法，在原日期上增加年/月/日
        c.add(Calendar.MONTH, 1);
        System.out.println("下个月的今天:\\t" +format(c.getTime()));
 
        //===== 去年的今天 =====
        c.setTime(now);
        c.add(Calendar.YEAR, -1);
        System.out.println("去年的今天:\\t" +format(c.getTime()));
 
        //===== 上个月的第三天 =====
        c.setTime(now);
        c.add(Calendar.MONTH, -1);
        c.set(Calendar.DATE, 3);
        System.out.println("上个月的第三天:\\t" +format(c.getTime()));
 
    }
 
    private static String format(Date time) {
        return sdf.format(time);
    }
}
```
## 异常
### finally
- finally中定义的通常是-->关闭资源代码,因为资源必须释放。
- finally只有一种情况不会执行。
当执行到System.exit(0); //系统退出 jvm 结束
fianlly不会执行。

### throw 和 throws 的区别
- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`
throw：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`
- throws：表示出现异常的一种可能性，并不一定会发生这些异常；
throw：执行 throw 则一定抛出了某个异常对象。
### 异常的分类
异常分类： 可查异常，运行时异常和错误 3 种。
- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。
- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。
- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。
### 自定义异常
**自定义异常必须继承 Exception**

>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。

```
package basics;

public class TestDemo {
    public static void main(String[] args) {
    	Demo d = new Demo();
    	try{
    		int x = d.div(4, -1);
    		System.out.println("除数为负数");
    	}catch(FuShuException e){
    		System.out.println(e.toString() + "\\t错误的负数："+e.GetNum());
    	}
    	System.out.println("Over!!!");
    }
}

/**
 * 自定义异常信息
 */
class FuShuException extends Exception{	//自定义异常必须继承 Exception
	private int num;
	FuShuException(String msg,int num){
		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。
		super(msg);
		this.num = num;
	}
	public int GetNum(){
		return num;
	}
}

class Demo{
	public int div(int a,int b)throws FuShuException{
		if(b<0)	{
			throw new FuShuException("异常信息，除负数啦！", b);
		}
		return a/b;
	}
}
```
---
~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1
Over!!!~~

---
### 异常在子父类中的覆盖
1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。
2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。
3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。















',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000554s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001216s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000480s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000387s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000952s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=209,`p_id`=2,`title`='Java SE - 基础\r',`content`='# Java SE - 基础\r\n[TOC]\r\n## Scanner\r\n```\r\npackage basics;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class ScannerDemo {\r\n	public static void main(String[] args) {\r\n		Scanner scan = new Scanner(System.in);\r\n		int num = scan.nextInt();\r\n		System.out.println(\"输入的整数是：\" + num);\r\n		\r\n		float f = scan.nextFloat();\r\n		System.out.println(\"输入的浮点数是：\" + f);\r\n		\r\n//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:\"\\r\\n\",因为 nextInt 仅仅读取数字信息，而不会读取回车换行\"\\r\\n\".\r\n//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串\r\n		String str = scan.nextLine(); //读取回车换行\r\n		String str2 = scan.nextLine(); //读取真正的字符串\r\n		System.out.println(\"str1是：\" + str);\r\n		System.out.println(\"输入的字符串是：\" + str2);\r\n	}\r\n}\r\n```\r\n## 匿名对象\r\n### 1.1 使用方式\r\n```\r\npackage study;\r\n\r\n/**\r\n * 匿名对象\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class AnonymousObject {\r\n    public static void main(String[] args) {\r\n        new Car().age = 5;\r\n        new Car().color = \"blue\";\r\n        new Car().show();   //每一次 new 都是一个新的对象\r\n    }\r\n}\r\n\r\nclass Car{\r\n    String color = \"red\";\r\n    int age = 4;\r\n    public void show(){\r\n        System.out.println(\"Car color = \" + this.color + \", Car age = \" + this.age);\r\n    }\r\n}\r\n```\r\n\r\n---\r\n~~Car color = red, Car age = 4~~\r\n\r\n---\r\n\r\n1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。\r\n\r\n1. 可以将匿名对象作为实际参数进行传递。\r\n`Show(new Car());`\r\n\r\n## JAVA 的默认修饰符\r\n### 1.default\r\n只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。\r\n\r\n## 多态\r\n### 1. 简单应用\r\n```\r\npackage study;\r\n\r\n/**\r\n * 多态\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Polymorphism {\r\n    public static void main(String[] args) {\r\n        function(new Cat());\r\n        function(new Dog());\r\n    }\r\n\r\n    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象\r\n        a.eat();\r\n//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员\r\n    }\r\n}\r\n\r\n/**\r\n * 抽象类\r\n */\r\nabstract class Animale{\r\n    abstract public void eat();\r\n}\r\n\r\n/**\r\n * 猫类 实现 抽象的 动物类\r\n */\r\nclass Cat extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n\r\n    public void catMouse(){\r\n        System.out.println(\"Cat catch mouse\");\r\n    }\r\n}\r\n\r\n/**\r\n * 狗类 实现 抽象的 动物类\r\n */\r\nclass Dog extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Dog eat bone\");\r\n    }\r\n\r\n    public void seeHome(){\r\n        System.out.println(\"Dog see Home\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nDog eat bone~~\r\n\r\n---\r\n### 2.向上转型和向下转型\r\n```\r\npackage study;\r\n\r\n/**\r\n * 向上转型和向下转型\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Transformation {\r\n    public static void main(String[] args) {\r\n        Animale2 a = new Cat2();    //向上转型\r\n        a.eat();    //此时不能调用子类的特有方法\r\n        Cat2 c = (Cat2)a;   //向下转型\r\n        c.catchMouse(); //此时才能调用子类的特有方法\r\n    }\r\n}\r\n\r\nabstract class Animale2{\r\n    abstract public void eat();\r\n}\r\n\r\nclass Cat2 extends Animale2{\r\n    public void eat(){\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n    public void catchMouse(){\r\n        System.out.println(\"Cat cat mouse\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nCat cat mouse~~\r\n\r\n---\r\n**千万不能出现这样的操作：就是将父类对象转成子类类型**\r\n\r\n```\r\nAnimale a = new Animale();\r\nCat c = (Cat)a;\r\n```\r\n## 内部类\r\n### 内部类的使用\r\n#### 内部类的访问规则\r\n1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）\r\n2．外部类要访问内部类，必须建立内部类对象。\r\n\r\n```\r\npackage basics;\r\n\r\nimport basics.Outer.StaticInner;\r\n\r\npublic class OutIn{\r\n	public static void main(String[] args) {\r\n		//外部类访问内部类\r\n		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()\r\n		Outer.Inner inner = new Outer().new Inner();\r\n		inner.fun();\r\n		\r\n		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()\r\n		StaticInner inner2 = new Outer.StaticInner();\r\n		inner2.fun();\r\n	}\r\n}\r\n\r\nclass Outer {\r\n	private static int x = 1;\r\n	\r\n	/**\r\n	 * 非静态内部类\r\n	 */\r\n	class Inner{\r\n		int x = 2;\r\n		public void fun(){\r\n			int x = 3;\r\n			System.out.println(x);//内部类方法中的变量\r\n			System.out.println(this.x);//内部类中的变量\r\n			System.out.println(Outer.this.x);//外部类中的变量\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * 静态内部类\r\n	 */\r\n	static class StaticInner{\r\n		public void fun(){\r\n			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。\r\n			System.out.println(\"此为静态内部类方法\" + x);\r\n		}\r\n	}\r\n}\r\n```\r\n#### 访问格式\r\n1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。\r\n格式\r\n```\r\n外部类名.内部类名  变量名 = 外部类对象.内部类对象;\r\nOuter.Inner in = new Outer().new Inner();\r\n```\r\n2．当内部类在成员位置上，就可以被成员修饰符所修饰。\r\n\r\n比如：\r\n- private：将内部类在外部类中进行封装。\r\n- static:  内部类就具备static的特性。\r\n\r\n当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。\r\n\r\n>在外部其他类中，如何直接访问static内部类的非静态成员呢？\r\n\r\nnew Outer.Inner().function();\r\n>在外部其他类中，如何直接访问static内部类的静态成员呢？\r\n\r\nuter.Inner.function();\r\n\r\n注意：\r\n当内部类中定义了静态成员，该内部类必须是static的。\r\n当外部类中的静态方法访问内部类时，内部类也必须是static的。\r\n\r\n### 匿名内部类\r\n匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类\r\n\r\n有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。\r\n\r\n#### 匿名内部类的格式\r\n**new 父类或者接口(){定义子类的内容};**\r\n```\r\nRunnable r = new Runnable(){};\r\n\r\n//多在 Android 中使用，例如监听方法的实现\r\nnew Demo(){	//匿名内部类\r\n	public void show(){\r\n		System.out.println(\"Inner show!\");\r\n	}\r\n}.show();\r\n```\r\n#### 例子\r\n```\r\npackage basics;\r\n\r\n/**\r\n * 接口\r\n */\r\ninterface Inter{\r\n	public void fun();\r\n}\r\n\r\n/**\r\n * 抽象方法\r\n */\r\nabstract class Inter2{\r\n	abstract public void fun();\r\n}\r\n\r\nclass Test{\r\n	//返回  Inter 对象\r\n	public static Inter fun2(){\r\n		return new Inter(){\r\n			public void fun(){\r\n				System.out.println(\"fun2 running!\");\r\n			}\r\n		};\r\n	}\r\n	\r\n	public static void fun3(){\r\n		//对象.方法();\r\n		new Inter2(){\r\n			public void fun(){\r\n				System.out.println(\"fun3 running!\");\r\n			}\r\n		}.fun();\r\n	}\r\n}\r\n\r\npublic class AnonymousInnerClass {\r\n	public static void main(String[] args) {\r\n		//Test.fun2() 返回的是  Inter 对象，对象.方法\r\n		Test.fun2().fun();\r\n		\r\n		Test.fun3();\r\n	}\r\n}\r\n```\r\n## 默认方法\r\n默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。\r\n```\r\npackage basics;\r\n\r\npublic interface Person {\r\n	public void eat();\r\n	\r\n	//默认方法，有实现体\r\n	default public void die(){\r\n		System.out.println(\"Game Over!\");\r\n	}\r\n}\r\n```\r\nPerson 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default\r\n\r\n>为什么会有默认方法\r\n\r\n假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。\r\n\r\n但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。\r\n\r\n通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class DefaultFunction implements Person{\r\n\r\n	@Override\r\n	public void eat() {\r\n		// TODO Auto-generated method stub\r\n	}\r\n	\r\n	public static void main(String[] args) {\r\n		//不需要做任何改动，直接得到这个默认方法\r\n		new DefaultFunction().die();\r\n	}\r\n}\r\n```\r\n## 装箱和拆箱\r\n### 封装类\r\n所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。\r\n### 自动装箱和自动拆箱\r\n```\r\nint i = 5;\r\n\r\n//把一个基本类型的变量,转换为 Integer 对象\r\nInteger it = new Integer(i);\r\n//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱\r\nInteger it2 = i;\r\n\r\n//把一个 Integer 对象，转换为一个基本类型的 int\r\nint i2 = it.intValue();\r\n//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱\r\nint i3 = it;\r\n```\r\n### Number 类\r\n数字封装类有：Byte,Short,Integer,Long,Float,Double\r\n这些类都是抽象类 Number 的子类\r\n```\r\nint i = 5;\r\n\r\nInteger it = new Integer(i);\r\n//Integer 是 Number 的子类，所以打印 true\r\nSystem.out.println(it instanceof Number);\r\n```\r\n## Math\r\n```\r\nfloat f1 = 5.4f;\r\n\r\n//四舍五入\r\nSystem.out.println(Math.round(f1));\r\n\r\n//得到一个 0-1 之间的随机浮点数（取不到1）\r\nSystem.out.println(Math.random());\r\n\r\n//得到一个 0-10 之间的随机整数 （取不到10）\r\nSystem.out.println((int)( Math.random()*10));\r\n\r\n//大于指定数据的最小整数\r\nSystem.out.println(Math.ceil(f1));	//6.0\r\n\r\n//小于指定数据的最大整数\r\nSystem.out.println(Math.floor(f1));	//5.0\r\n\r\n//开方\r\nSystem.out.println(Math.sqrt(9));\r\n\r\n//次方（2的4次方）\r\nSystem.out.println(Math.pow(2,4));\r\n\r\n//π\r\nSystem.out.println(Math.PI);\r\n\r\n//自然常数\r\nSystem.out.println(Math.E);\r\n```\r\n## 格式控制\r\n### 换行符和回车符\r\n- 换行符就是另起一行 --- \'\\n\' 换行（newline）\r\n- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）\r\n\r\n在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。\r\n\r\n然而在不同的操作系统，换行符是不一样的\r\n- 在DOS和Windows中，每行结尾是 “\\r\\n”；\r\n- Linux系统里，每行结尾只有 “\\n”；\r\n- Mac系统里，每行结尾是只有 \"\\r\"。\r\n\r\n为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。\r\n### \\\\t 空格对齐\r\n```\r\nSystem.out.println(\"使用空格无法达到对齐的效果\");\r\nSystem.out.println(\"abc def\");\r\nSystem.out.println(\"ab def\");\r\nSystem.out.println(\"a def\");\r\n\r\nSystem.out.println(\"使用\\\\t制表符可以达到对齐的效果\");\r\nSystem.out.println(\"abc\\tdef\");\r\nSystem.out.println(\"ab\\tdef\");\r\nSystem.out.println(\"a\\tdef\");\r\n```\r\n---\r\n~~使用空格无法达到对齐的效果\r\nabc def\r\nab def\r\na def\r\n使用 \\t 制表符可以达到对齐的效果\r\nabc	def\r\nab	def\r\na	def~~\r\n\r\n---\r\n## String\r\n### 概述\r\n字符串最大特点：一旦被初始化就不可以被改变。\r\n\r\nString 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。\r\n```\r\n//s1 在内存中有一个对象\r\nString s1 = \"abc\";\r\n//s2 在内存中有两个对象\r\nString s2 = new String(\"abc\");\r\nString s3 = \"abc\";\r\n\r\nSystem.out.println(s1==s2);//false\r\nSystem.out.println(s1==s3);//true\r\nSystem.out.println(s1.equals(s2));//true\r\n```\r\n\r\n### 常见方法\r\n#### 获取\r\n```\r\nString str = \"aabcbcc\";\r\n\r\n//字符串的长度\r\nSystem.out.println(str.length());\r\n\r\n//根据位置获取位置上某个字符\r\nSystem.out.println(str.charAt(1));\r\n\r\n//===== 根据字符获取该字符在字符串中位置 =====\r\n//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。\r\n//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。\r\n//如果没有找到，返回-1\r\nSystem.out.println(str.indexOf(\'b\',3));\r\n//可以用于对指定判断是否包含\r\nif(str.indexOf(\"aa\")!=-1)\r\n\r\n\r\n//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变\r\nSystem.out.println(str.lastIndexOf(\'b\'));\r\n```\r\n#### 判断\r\n```\r\n//判断文件名称是否是Array单词开头。\r\nsop(str.startsWith(\"Array\"));\r\n//判断文件名称是否是.java的文件。\r\nsop(str.endsWith(\".java\"));\r\n//判断文件中是否包含Demo\r\nsop(str.contains(\"Demo\"));\r\n```\r\n- 字符串中是否包含某一个子串。\r\n`boolean contains(str):`\r\n特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。\r\n所以，也可以用于对指定判断是否包含。\r\n`if(str.indexOf(\"aa\")!=-1)`\r\n\r\n而且该方法既可以判断，又可以获取出现的位置。\r\n\r\n- 字符中是否有内容。\r\n`boolean isEmpty(): 原理就是判断长度是否为0. `\r\n- 字符串是否是以指定内容开头。\r\n`boolean startsWith(str);`\r\n- 字符串是否是以指定内容结尾。\r\n`boolean endsWith(str);`\r\n- 判断字符串内容是否相同。复写了Object类中的equals方法。\r\n`boolean equals(str);`\r\n- 判断内容是否相同，并忽略大小写。\r\n`boolean equalsIgnoreCase();`\r\n\r\n#### 转换\r\n```\r\npublic static void method_trans()\r\n	{\r\n		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};\r\n		String s= new String(arr,1,3);//3是个数\r\n		sop(\"s=\"+s);\r\n		String s1 = \"zxcvbnm\";\r\n		char[] chs = s1.toCharArray();\r\n		for(int x=0; x<chs.length; x++)\r\n		{\r\n			sop(\"ch=\"+chs[x]);\r\n		}\r\n	}\r\n```\r\n- 将字符数组转成字符串。\r\n构造函数：\r\n```\r\nString(char[])\r\nString(char[],offset,count):将字符数组中的一部分转成字符串。\r\n```\r\n静态方法：\r\n```\r\nstatic String copyValueOf(char[]);\r\nstatic String copyValueOf(char[] data, int offset, int count) \r\nstatic String valueOf(char[]):\r\n```\r\n- 将字符串转成字符数组。**\r\n`char[] toCharArray():`\r\n\r\n- 将字节数组转成字符串。\r\n`String(byte[])`\r\n`String(byte[],offset,count):将字节数组中的一部分转成字符串。`\r\n\r\n- 将字符串转成字节数组。\r\n`byte[]  getBytes():`\r\n\r\n- 将基本数据类型转成字符串。\r\n`static String valueOf(int)`\r\n`static String valueOf(double)`\r\n特殊：字符串和字节数组在转换过程中，是可以指定编码表的。\r\n#### 替换\r\n`String replace(oldchar,newchar);`\r\n```\r\npublic static void method_replace()\r\n	{\r\n		String s = \"hello java\";\r\n	 //String s1 = s.replace(\'q\',\'n\');\r\n//如果要替换的字符不存在，返回的还是原串。\r\n		String s1 = s.replace(\"java\",\"world\");\r\n		sop(\"s=\"+s);\r\n		sop(\"s1=\"+s1);\r\n	}\r\n```\r\n#### 切割\r\n`String[] split(regex);`\r\n```\r\npublic static void  method_split()\r\n	{\r\n		String s = \"zhagnsa,lisi,wangwu\";\r\n\r\n		String[] arr  = s.split(\",\");\r\n\r\n		for(int x = 0; x<arr.length; x++)\r\n		{\r\n			sop(arr[x]);\r\n		}\r\n	}	\r\n```\r\n#### 子串（获取字符串中的一部分）\r\n`String substring(begin);`\r\n`String substring(begin,end);`\r\n```\r\npublic static void method_sub()\r\n	{\r\n		String s = \"abcdef\";\r\n		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。\r\n		sop(s.substring(2,4)); \r\n 		//包含头，不包含尾。s.substring(0,s.length());\r\n	}\r\n```\r\n#### 转换，去除空格，比较\r\n- 将字符串转成大写或则小写。\r\n`String toUpperCase();`\r\n`String toLowerCase();`\r\n\r\n- 将字符串两端的多个空格去除。\r\n`String trim();`\r\n\r\n- 对两个字符串进行自然顺序的比较。\r\n`int compareTo(string);`\r\n### StringBuffer\r\n#### 特点\r\n1. 长度是可变化的。\r\n2. 可以直接操作多个数据类型。\r\n3. 最终会通过 toString 方法变成字符串。\r\n4. 是一个容器。\r\n\r\n>为什么StringBuffer可以变长？\r\n\r\n和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。\r\n\r\n比如说new StringBuffer(\"the\")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。\r\n\r\n如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。\r\n\r\n注： 19 这个数量，不同的JDK数量是不一样的\r\n### StringBuilder\r\nStringBuffer 是线程同步。\r\nStringBuilder 是线程不同步。\r\n建议使用 StringBuilder\r\n#### 存储。\r\nStringBuffer append():将指定数据作为参数添加到已有数据结尾处。\r\nStringBuffer insert(index,数据):可以将数据插入到指定index位置。\r\n### 删除。\r\nStringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。\r\nStringBuffer deleteCharAt(index):删除指定位置的字符。\r\n### 获取。\r\nchar charAt(int index) \r\nint indexOf(String str) \r\nint lastIndexOf(String str) \r\nint length() \r\nString substring(int start, int end)  \r\n### 修改。\r\nStringBuffer replace(start,end,string);\r\nvoid setCharAt(int index, char ch) ;\r\n### 反转。\r\nStringBuffer reverse(); \r\n### 将缓冲区中指定数据存储到指定字符数组中。\r\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\r\n## Date\r\n|字符|含义|\r\n|-|\r\n|y| 代表年|\r\n|M| 代表月|\r\n|d| 代表日|\r\n|H| 代表24进制的小时|\r\n|h| 代表12进制的小时|\r\n|m| 代表分钟|\r\n|s| 代表秒|\r\n|S| 代表毫秒|\r\n\r\n```\r\n//时间原点\r\nDate date = new Date(5000);\r\nSystem.out.println(date);	//Thu Jan 01 08:00:05 CST 1970\r\n\r\n//当前时间\r\nDate dateNow = new Date();\r\nSystem.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018\r\n\r\n//时间格式化\r\nSimpleDateFormat sdf =new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\nDate d= new Date();\r\nString str = sdf.format(d);\r\nSystem.out.println(str);	//2018-10-12 11:10:23\r\n```\r\n## Calendar\r\n```\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n	private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n	 \r\n    public static void main(String[] args) {\r\n    	//采用单例模式获取日历对象Calendar.getInstance();\r\n        Calendar c = Calendar.getInstance();\r\n        \r\n        //通过日历对象得到日期对象\r\n        Date now = c.getTime();\r\n        \r\n        //===== 当前日期 =====\r\n        System.out.println(\"当前日期：\\t\" + format(c.getTime()));\r\n \r\n        //===== 下个月的今天 =====\r\n        //set方法，直接设置年/月/日\r\n        c.setTime(now);\r\n        //add方法，在原日期上增加年/月/日\r\n        c.add(Calendar.MONTH, 1);\r\n        System.out.println(\"下个月的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 去年的今天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.YEAR, -1);\r\n        System.out.println(\"去年的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 上个月的第三天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.MONTH, -1);\r\n        c.set(Calendar.DATE, 3);\r\n        System.out.println(\"上个月的第三天:\\t\" +format(c.getTime()));\r\n \r\n    }\r\n \r\n    private static String format(Date time) {\r\n        return sdf.format(time);\r\n    }\r\n}\r\n```\r\n## 异常\r\n### finally\r\n- finally中定义的通常是-->关闭资源代码,因为资源必须释放。\r\n- finally只有一种情况不会执行。\r\n当执行到System.exit(0); //系统退出 jvm 结束\r\nfianlly不会执行。\r\n\r\n### throw 和 throws 的区别\r\n- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`\r\nthrow：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`\r\n- throws：表示出现异常的一种可能性，并不一定会发生这些异常；\r\nthrow：执行 throw 则一定抛出了某个异常对象。\r\n### 异常的分类\r\n异常分类： 可查异常，运行时异常和错误 3 种。\r\n- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。\r\n- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。\r\n在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。\r\n- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。\r\n### 自定义异常\r\n**自定义异常必须继承 Exception**\r\n\r\n>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class TestDemo {\r\n    public static void main(String[] args) {\r\n    	Demo d = new Demo();\r\n    	try{\r\n    		int x = d.div(4, -1);\r\n    		System.out.println(\"除数为负数\");\r\n    	}catch(FuShuException e){\r\n    		System.out.println(e.toString() + \"\\t错误的负数：\"+e.GetNum());\r\n    	}\r\n    	System.out.println(\"Over!!!\");\r\n    }\r\n}\r\n\r\n/**\r\n * 自定义异常信息\r\n */\r\nclass FuShuException extends Exception{	//自定义异常必须继承 Exception\r\n	private int num;\r\n	FuShuException(String msg,int num){\r\n		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。\r\n		super(msg);\r\n		this.num = num;\r\n	}\r\n	public int GetNum(){\r\n		return num;\r\n	}\r\n}\r\n\r\nclass Demo{\r\n	public int div(int a,int b)throws FuShuException{\r\n		if(b<0)	{\r\n			throw new FuShuException(\"异常信息，除负数啦！\", b);\r\n		}\r\n		return a/b;\r\n	}\r\n}\r\n```\r\n---\r\n~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1\r\nOver!!!~~\r\n\r\n---\r\n### 异常在子父类中的覆盖\r\n1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。\r\n2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。\r\n3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 209 [ RunTime:0.000969s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001017s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000341s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000971s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-10-15T17:55:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/209.html
[ info ] qingrang.top/daily/admin/note/shownote/id/209.html [运行时间：0.058147s][吞吐率：17.20req/s] [内存消耗：2,018.95kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=13n2khbf9ad1ip055o1435phv4',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000477s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001310s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000489s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000937s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000278s ]
---------------------------------------------------------------
[ 2018-10-15T18:29:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.035486s][吞吐率：28.18req/s] [内存消耗：1,339.47kb] [文件加载：47]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/login/index.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-10-15T18:53:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.039361s][吞吐率：25.41req/s] [内存消耗：1,339.47kb] [文件加载：47]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/login/index.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-10-15T18:53:34+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.051002s][吞吐率：19.61req/s] [内存消耗：1,922.04kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'pwd' => 'shao',
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000665s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001326s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000357s ]
---------------------------------------------------------------
[ 2018-10-15T18:53:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.072823s][吞吐率：13.73req/s] [内存消耗：2,175.32kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000781s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001328s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001396s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000380s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001119s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000305s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000496s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001089s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000442s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000479s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001034s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000235s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001109s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000607s ]
---------------------------------------------------------------
[ 2018-10-15T18:53:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.053822s][吞吐率：18.58req/s] [内存消耗：2,256.10kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '14',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Java',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000534s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001614s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Java' ORDER BY date desc [ RunTime:0.001521s ]
---------------------------------------------------------------
[ 2018-10-15T18:53:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/214
[ info ] qingrang.top/daily/admin/note/editNote/id/214 [运行时间：0.079004s][吞吐率：12.66req/s] [内存消耗：2,075.38kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000509s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001414s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000541s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001016s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000395s ]
---------------------------------------------------------------
[ 2018-10-15T18:53:47+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/214
[ info ] qingrang.top/daily/admin/note/shownote/id/214 [运行时间：0.052787s][吞吐率：18.94req/s] [内存消耗：2,023.07kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000527s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002246s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000583s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000880s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000281s ]
---------------------------------------------------------------
[ 2018-10-15T19:23:30+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.101439s][吞吐率：9.86req/s] [内存消耗：2,174.49kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000975s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002633s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.002825s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000704s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001330s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000349s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000423s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000978s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000299s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000596s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000429s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000433s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001276s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000243s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001653s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000773s ]
---------------------------------------------------------------
[ 2018-10-15T19:23:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.050671s][吞吐率：19.74req/s] [内存消耗：2,128.54kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000636s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001568s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000412s ]
---------------------------------------------------------------
[ 2018-10-15T19:24:02+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/208.html
[ info ] qingrang.top/daily/admin/note/shownote/id/208.html [运行时间：0.078704s][吞吐率：12.71req/s] [内存消耗：1,981.20kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000616s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001481s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000424s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000389s ]
---------------------------------------------------------------
[ 2018-10-15T19:24:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/209.html
[ info ] qingrang.top/daily/admin/note/shownote/id/209.html [运行时间：0.058940s][吞吐率：16.97req/s] [内存消耗：2,018.64kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=t0aernf2hghfbn30lj80vlpoj3',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000489s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001370s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000630s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.003143s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000347s ]
---------------------------------------------------------------
[ 2018-10-15T20:30:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.036619s][吞吐率：27.31req/s] [内存消耗：1,339.79kb] [文件加载：47]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/login/index.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-10-15T20:31:06+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.055151s][吞吐率：18.13req/s] [内存消耗：1,922.04kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'pwd' => 'shao',
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000744s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001573s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000417s ]
---------------------------------------------------------------
[ 2018-10-15T20:31:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.078245s][吞吐率：12.78req/s] [内存消耗：2,175.32kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000523s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001314s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001732s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000393s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000990s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000426s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000846s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000270s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000444s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000318s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000434s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001085s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000343s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001056s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000577s ]
---------------------------------------------------------------
[ 2018-10-15T20:32:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/209.html
[ info ] qingrang.top/daily/admin/note/editnote/id/209.html [运行时间：0.056767s][吞吐率：17.62req/s] [内存消耗：2,066.94kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000602s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002402s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000552s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000919s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000325s ]
---------------------------------------------------------------
[ 2018-10-15T20:59:07+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.068916s][吞吐率：14.51req/s] [内存消耗：2,215.28kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '52710',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# Java SE - 基础
[TOC]
## Scanner
```
package basics;

import java.util.Scanner;

public class ScannerDemo {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt();
		System.out.println("输入的整数是：" + num);
		
		float f = scan.nextFloat();
		System.out.println("输入的浮点数是：" + f);
		
//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:"\\r\\n",因为 nextInt 仅仅读取数字信息，而不会读取回车换行"\\r\\n".
//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串
		String str = scan.nextLine(); //读取回车换行
		String str2 = scan.nextLine(); //读取真正的字符串
		System.out.println("str1是：" + str);
		System.out.println("输入的字符串是：" + str2);
	}
}
```
## 匿名对象
### 1.1 使用方式
```
package study;

/**
 * 匿名对象
 * Created by CaptainQR on 2018/9/26.
 */
public class AnonymousObject {
    public static void main(String[] args) {
        new Car().age = 5;
        new Car().color = "blue";
        new Car().show();   //每一次 new 都是一个新的对象
    }
}

class Car{
    String color = "red";
    int age = 4;
    public void show(){
        System.out.println("Car color = " + this.color + ", Car age = " + this.age);
    }
}
```

---
~~Car color = red, Car age = 4~~

---

1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。

1. 可以将匿名对象作为实际参数进行传递。
`Show(new Car());`

## JAVA 的默认修饰符
### 1.default
只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。

## 多态
### 1. 简单应用
```
package study;

/**
 * 多态
 * Created by CaptainQR on 2018/9/26.
 */
public class Polymorphism {
    public static void main(String[] args) {
        function(new Cat());
        function(new Dog());
    }

    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象
        a.eat();
//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员
    }
}

/**
 * 抽象类
 */
abstract class Animale{
    abstract public void eat();
}

/**
 * 猫类 实现 抽象的 动物类
 */
class Cat extends Animale{
    public void eat() {
        System.out.println("Cat eat finish");
    }

    public void catMouse(){
        System.out.println("Cat catch mouse");
    }
}

/**
 * 狗类 实现 抽象的 动物类
 */
class Dog extends Animale{
    public void eat() {
        System.out.println("Dog eat bone");
    }

    public void seeHome(){
        System.out.println("Dog see Home");
    }
}
```
---
~~Cat eat finish
Dog eat bone~~

---
### 2.向上转型和向下转型
```
package study;

/**
 * 向上转型和向下转型
 * Created by CaptainQR on 2018/9/26.
 */
public class Transformation {
    public static void main(String[] args) {
        Animale2 a = new Cat2();    //向上转型
        a.eat();    //此时不能调用子类的特有方法
        Cat2 c = (Cat2)a;   //向下转型
        c.catchMouse(); //此时才能调用子类的特有方法
    }
}

abstract class Animale2{
    abstract public void eat();
}

class Cat2 extends Animale2{
    public void eat(){
        System.out.println("Cat eat finish");
    }
    public void catchMouse(){
        System.out.println("Cat cat mouse");
    }
}
```
---
~~Cat eat finish
Cat cat mouse~~

---
**千万不能出现这样的操作：就是将父类对象转成子类类型**

```
Animale a = new Animale();
Cat c = (Cat)a;
```
## 内部类
### 内部类的使用
#### 内部类的访问规则
1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）
2．外部类要访问内部类，必须建立内部类对象。

```
package basics;

import basics.Outer.StaticInner;

public class OutIn{
	public static void main(String[] args) {
		//外部类访问内部类
		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()
		Outer.Inner inner = new Outer().new Inner();
		inner.fun();
		
		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()
		StaticInner inner2 = new Outer.StaticInner();
		inner2.fun();
	}
}

class Outer {
	private static int x = 1;
	
	/**
	 * 非静态内部类
	 */
	class Inner{
		int x = 2;
		public void fun(){
			int x = 3;
			System.out.println(x);//内部类方法中的变量
			System.out.println(this.x);//内部类中的变量
			System.out.println(Outer.this.x);//外部类中的变量
		}
	}
	
	/**
	 * 静态内部类
	 */
	static class StaticInner{
		public void fun(){
			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。
			System.out.println("此为静态内部类方法" + x);
		}
	}
}
```
#### 访问格式
1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。
格式
```
外部类名.内部类名  变量名 = 外部类对象.内部类对象;
Outer.Inner in = new Outer().new Inner();
```
2．当内部类在成员位置上，就可以被成员修饰符所修饰。

比如：
- private：将内部类在外部类中进行封装。
- static:  内部类就具备static的特性。

当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。

>在外部其他类中，如何直接访问static内部类的非静态成员呢？

new Outer.Inner().function();
>在外部其他类中，如何直接访问static内部类的静态成员呢？

uter.Inner.function();

注意：
当内部类中定义了静态成员，该内部类必须是static的。
当外部类中的静态方法访问内部类时，内部类也必须是static的。

### 匿名内部类
匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类

有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。

#### 匿名内部类的格式
**new 父类或者接口(){定义子类的内容};**
```
Runnable r = new Runnable(){};

//多在 Android 中使用，例如监听方法的实现
new Demo(){	//匿名内部类
	public void show(){
		System.out.println("Inner show!");
	}
}.show();
```
#### 例子
```
package basics;

/**
 * 接口
 */
interface Inter{
	public void fun();
}

/**
 * 抽象方法
 */
abstract class Inter2{
	abstract public void fun();
}

class Test{
	//返回  Inter 对象
	public static Inter fun2(){
		return new Inter(){
			public void fun(){
				System.out.println("fun2 running!");
			}
		};
	}
	
	public static void fun3(){
		//对象.方法();
		new Inter2(){
			public void fun(){
				System.out.println("fun3 running!");
			}
		}.fun();
	}
}

public class AnonymousInnerClass {
	public static void main(String[] args) {
		//Test.fun2() 返回的是  Inter 对象，对象.方法
		Test.fun2().fun();
		
		Test.fun3();
	}
}
```
## 默认方法
默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。
```
package basics;

public interface Person {
	public void eat();
	
	//默认方法，有实现体
	default public void die(){
		System.out.println("Game Over!");
	}
}
```
Person 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default

>为什么会有默认方法

假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。

但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。

通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。

```
package basics;

public class DefaultFunction implements Person{

	@Override
	public void eat() {
		// TODO Auto-generated method stub
	}
	
	public static void main(String[] args) {
		//不需要做任何改动，直接得到这个默认方法
		new DefaultFunction().die();
	}
}
```
## 装箱和拆箱
### 封装类
所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。
### 自动装箱和自动拆箱
```
int i = 5;

//把一个基本类型的变量,转换为 Integer 对象
Integer it = new Integer(i);
//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱
Integer it2 = i;

//把一个 Integer 对象，转换为一个基本类型的 int
int i2 = it.intValue();
//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱
int i3 = it;
```
### Number 类
数字封装类有：Byte,Short,Integer,Long,Float,Double
这些类都是抽象类 Number 的子类
```
int i = 5;

Integer it = new Integer(i);
//Integer 是 Number 的子类，所以打印 true
System.out.println(it instanceof Number);
```
## Math
```
float f1 = 5.4f;

//四舍五入
System.out.println(Math.round(f1));

//得到一个 0-1 之间的随机浮点数（取不到1）
System.out.println(Math.random());

//得到一个 0-10 之间的随机整数 （取不到10）
System.out.println((int)( Math.random()*10));

//大于指定数据的最小整数
System.out.println(Math.ceil(f1));	//6.0

//小于指定数据的最大整数
System.out.println(Math.floor(f1));	//5.0

//开方
System.out.println(Math.sqrt(9));

//次方（2的4次方）
System.out.println(Math.pow(2,4));

//π
System.out.println(Math.PI);

//自然常数
System.out.println(Math.E);
```
## 格式控制
### 换行符和回车符
- 换行符就是另起一行 --- \'\\n\' 换行（newline）
- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）

在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。

然而在不同的操作系统，换行符是不一样的
- 在DOS和Windows中，每行结尾是 “\\r\\n”；
- Linux系统里，每行结尾只有 “\\n”；
- Mac系统里，每行结尾是只有 "\\r"。

为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。
### \\\\t 空格对齐
```
System.out.println("使用空格无法达到对齐的效果");
System.out.println("abc def");
System.out.println("ab def");
System.out.println("a def");

System.out.println("使用\\\\t制表符可以达到对齐的效果");
System.out.println("abc\\tdef");
System.out.println("ab\\tdef");
System.out.println("a\\tdef");
```
---
~~使用空格无法达到对齐的效果
abc def
ab def
a def
使用 \\t 制表符可以达到对齐的效果
abc	def
ab	def
a	def~~

---
## String
### 概述
字符串最大特点：一旦被初始化就不可以被改变。

String 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。
```
//s1 在内存中有一个对象
String s1 = "abc";
//s2 在内存中有两个对象
String s2 = new String("abc");
String s3 = "abc";

System.out.println(s1==s2);//false
System.out.println(s1==s3);//true
System.out.println(s1.equals(s2));//true
```

### 常见方法
#### 获取
```
String str = "aabcbcc";

//字符串的长度
System.out.println(str.length());

//根据位置获取位置上某个字符
System.out.println(str.charAt(1));

//===== 根据字符获取该字符在字符串中位置 =====
//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。
//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
//如果没有找到，返回-1
System.out.println(str.indexOf(\'b\',3));
//可以用于对指定判断是否包含
if(str.indexOf("aa")!=-1)


//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变
System.out.println(str.lastIndexOf(\'b\'));
```
#### 判断
```
//判断文件名称是否是Array单词开头。
sop(str.startsWith("Array"));
//判断文件名称是否是.java的文件。
sop(str.endsWith(".java"));
//判断文件中是否包含Demo
sop(str.contains("Demo"));
```
- 字符串中是否包含某一个子串。
`boolean contains(str):`
特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。
所以，也可以用于对指定判断是否包含。
`if(str.indexOf("aa")!=-1)`

而且该方法既可以判断，又可以获取出现的位置。

- 字符中是否有内容。
`boolean isEmpty(): 原理就是判断长度是否为0. `
- 字符串是否是以指定内容开头。
`boolean startsWith(str);`
- 字符串是否是以指定内容结尾。
`boolean endsWith(str);`
- 判断字符串内容是否相同。复写了Object类中的equals方法。
`boolean equals(str);`
- 判断内容是否相同，并忽略大小写。
`boolean equalsIgnoreCase();`

#### 转换
```
public static void method_trans()
	{
		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};
		String s= new String(arr,1,3);//3是个数
		sop("s="+s);
		String s1 = "zxcvbnm";
		char[] chs = s1.toCharArray();
		for(int x=0; x<chs.length; x++)
		{
			sop("ch="+chs[x]);
		}
	}
```
- 将字符数组转成字符串。
构造函数：
```
String(char[])
String(char[],offset,count):将字符数组中的一部分转成字符串。
```
静态方法：
```
static String copyValueOf(char[]);
static String copyValueOf(char[] data, int offset, int count) 
static String valueOf(char[]):
```
- 将字符串转成字符数组。**
`char[] toCharArray():`

- 将字节数组转成字符串。
`String(byte[])`
`String(byte[],offset,count):将字节数组中的一部分转成字符串。`

- 将字符串转成字节数组。
`byte[]  getBytes():`

- 将基本数据类型转成字符串。
`static String valueOf(int)`
`static String valueOf(double)`
特殊：字符串和字节数组在转换过程中，是可以指定编码表的。
#### 替换
`String replace(oldchar,newchar);`
```
public static void method_replace()
	{
		String s = "hello java";
	 //String s1 = s.replace(\'q\',\'n\');
//如果要替换的字符不存在，返回的还是原串。
		String s1 = s.replace("java","world");
		sop("s="+s);
		sop("s1="+s1);
	}
```
#### 切割
`String[] split(regex);`
```
public static void  method_split()
	{
		String s = "zhagnsa,lisi,wangwu";

		String[] arr  = s.split(",");

		for(int x = 0; x<arr.length; x++)
		{
			sop(arr[x]);
		}
	}	
```
#### 子串（获取字符串中的一部分）
`String substring(begin);`
`String substring(begin,end);`
```
public static void method_sub()
	{
		String s = "abcdef";
		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。
		sop(s.substring(2,4)); 
 		//包含头，不包含尾。s.substring(0,s.length());
	}
```
#### 转换，去除空格，比较
- 将字符串转成大写或则小写。
`String toUpperCase();`
`String toLowerCase();`

- 将字符串两端的多个空格去除。
`String trim();`

- 对两个字符串进行自然顺序的比较。
`int compareTo(string);`
### StringBuffer
#### 特点
1. 长度是可变化的。
2. 可以直接操作多个数据类型。
3. 最终会通过 toString 方法变成字符串。
4. 是一个容器。

>为什么StringBuffer可以变长？

和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。

比如说new StringBuffer("the")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。

如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。

注： 19 这个数量，不同的JDK数量是不一样的
### StringBuilder
StringBuffer 是线程同步。
StringBuilder 是线程不同步。
建议使用 StringBuilder
#### 存储。
StringBuffer append():将指定数据作为参数添加到已有数据结尾处。
StringBuffer insert(index,数据):可以将数据插入到指定index位置。
### 删除。
StringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。
StringBuffer deleteCharAt(index):删除指定位置的字符。
### 获取。
char charAt(int index) 
int indexOf(String str) 
int lastIndexOf(String str) 
int length() 
String substring(int start, int end)  
### 修改。
StringBuffer replace(start,end,string);
void setCharAt(int index, char ch) ;
### 反转。
StringBuffer reverse(); 
### 将缓冲区中指定数据存储到指定字符数组中。
void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)
## Date
|字符|含义|
|-|
|y| 代表年|
|M| 代表月|
|d| 代表日|
|H| 代表24进制的小时|
|h| 代表12进制的小时|
|m| 代表分钟|
|s| 代表秒|
|S| 代表毫秒|

```
//时间原点
Date date = new Date(5000);
System.out.println(date);	//Thu Jan 01 08:00:05 CST 1970

//当前时间
Date dateNow = new Date();
System.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018

//时间格式化
SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date d= new Date();
String str = sdf.format(d);
System.out.println(str);	//2018-10-12 11:10:23
```
## Calendar
```
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateDemo {
	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	 
    public static void main(String[] args) {
    	//采用单例模式获取日历对象Calendar.getInstance();
        Calendar c = Calendar.getInstance();
        
        //通过日历对象得到日期对象
        Date now = c.getTime();
        
        //===== 当前日期 =====
        System.out.println("当前日期：\\t" + format(c.getTime()));
 
        //===== 下个月的今天 =====
        //set方法，直接设置年/月/日
        c.setTime(now);
        //add方法，在原日期上增加年/月/日
        c.add(Calendar.MONTH, 1);
        System.out.println("下个月的今天:\\t" +format(c.getTime()));
 
        //===== 去年的今天 =====
        c.setTime(now);
        c.add(Calendar.YEAR, -1);
        System.out.println("去年的今天:\\t" +format(c.getTime()));
 
        //===== 上个月的第三天 =====
        c.setTime(now);
        c.add(Calendar.MONTH, -1);
        c.set(Calendar.DATE, 3);
        System.out.println("上个月的第三天:\\t" +format(c.getTime()));
 
    }
 
    private static String format(Date time) {
        return sdf.format(time);
    }
}
```
## 异常
### finally
- finally中定义的通常是-->关闭资源代码,因为资源必须释放。
- finally只有一种情况不会执行。
当执行到System.exit(0); //系统退出 jvm 结束
fianlly不会执行。

### throw 和 throws 的区别
- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`
throw：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`
- throws：表示出现异常的一种可能性，并不一定会发生这些异常；
throw：执行 throw 则一定抛出了某个异常对象。
### 异常的分类
异常分类： 可查异常，运行时异常和错误 3 种。
- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。
- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。
- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。
### 自定义异常
**自定义异常必须继承 Exception**

>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。

```
package basics;

public class TestDemo {
    public static void main(String[] args) {
    	Demo d = new Demo();
    	try{
    		int x = d.div(4, -1);
    		System.out.println("除数为负数");
    	}catch(FuShuException e){
    		System.out.println(e.toString() + "\\t错误的负数："+e.GetNum());
    	}
    	System.out.println("Over!!!");
    }
}

/**
 * 自定义异常信息
 */
class FuShuException extends Exception{	//自定义异常必须继承 Exception
	private int num;
	FuShuException(String msg,int num){
		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。
		super(msg);
		this.num = num;
	}
	public int GetNum(){
		return num;
	}
}

class Demo{
	public int div(int a,int b)throws FuShuException{
		if(b<0)	{
			throw new FuShuException("异常信息，除负数啦！", b);
		}
		return a/b;
	}
}
```
---
~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1
Over!!!~~

---
### 异常在子父类中的覆盖
1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。
2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。
3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。
## 集合框架
### LinkedList
除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。

>1.添加

addFirst();
addLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会出现 NoSuchElementException 异常。
getFirst();
getLast();

获取元素，但是元素被删除。
如果集合中没有元素，会出现 NoSuchElementException 异常。
removeFirst();
removeLast();

---

在JDK1.6出现了替代方法。
>1.添加

offerFirst();
offerLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会返回null。
peekFirst();
peekLast();

获取元素，但是元素被删除。
如果集合中没有元素，会返回null。
pollFirst();
pollLast();
















',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001372s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002496s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='Java SE - 基础',`content`='# Java SE - 基础\n[TOC]\n## Scanner\n```\npackage basics;\n\nimport java.util.Scanner;\n\npublic class ScannerDemo {\n	public static void main(String[] args) {\n		Scanner scan = new Scanner(System.in);\n		int num = scan.nextInt();\n		System.out.println(\"输入的整数是：\" + num);\n		\n		float f = scan.nextFloat();\n		System.out.println(\"输入的浮点数是：\" + f);\n		\n//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:\"\\r\\n\",因为 nextInt 仅仅读取数字信息，而不会读取回车换行\"\\r\\n\".\n//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串\n		String str = scan.nextLine(); //读取回车换行\n		String str2 = scan.nextLine(); //读取真正的字符串\n		System.out.println(\"str1是：\" + str);\n		System.out.println(\"输入的字符串是：\" + str2);\n	}\n}\n```\n## 匿名对象\n### 1.1 使用方式\n```\npackage study;\n\n/**\n * 匿名对象\n * Created by CaptainQR on 2018/9/26.\n */\npublic class AnonymousObject {\n    public static void main(String[] args) {\n        new Car().age = 5;\n        new Car().color = \"blue\";\n        new Car().show();   //每一次 new 都是一个新的对象\n    }\n}\n\nclass Car{\n    String color = \"red\";\n    int age = 4;\n    public void show(){\n        System.out.println(\"Car color = \" + this.color + \", Car age = \" + this.age);\n    }\n}\n```\n\n---\n~~Car color = red, Car age = 4~~\n\n---\n\n1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。\n\n1. 可以将匿名对象作为实际参数进行传递。\n`Show(new Car());`\n\n## JAVA 的默认修饰符\n### 1.default\n只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。\n\n## 多态\n### 1. 简单应用\n```\npackage study;\n\n/**\n * 多态\n * Created by CaptainQR on 2018/9/26.\n */\npublic class Polymorphism {\n    public static void main(String[] args) {\n        function(new Cat());\n        function(new Dog());\n    }\n\n    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象\n        a.eat();\n//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员\n    }\n}\n\n/**\n * 抽象类\n */\nabstract class Animale{\n    abstract public void eat();\n}\n\n/**\n * 猫类 实现 抽象的 动物类\n */\nclass Cat extends Animale{\n    public void eat() {\n        System.out.println(\"Cat eat finish\");\n    }\n\n    public void catMouse(){\n        System.out.println(\"Cat catch mouse\");\n    }\n}\n\n/**\n * 狗类 实现 抽象的 动物类\n */\nclass Dog extends Animale{\n    public void eat() {\n        System.out.println(\"Dog eat bone\");\n    }\n\n    public void seeHome(){\n        System.out.println(\"Dog see Home\");\n    }\n}\n```\n---\n~~Cat eat finish\nDog eat bone~~\n\n---\n### 2.向上转型和向下转型\n```\npackage study;\n\n/**\n * 向上转型和向下转型\n * Created by CaptainQR on 2018/9/26.\n */\npublic class Transformation {\n    public static void main(String[] args) {\n        Animale2 a = new Cat2();    //向上转型\n        a.eat();    //此时不能调用子类的特有方法\n        Cat2 c = (Cat2)a;   //向下转型\n        c.catchMouse(); //此时才能调用子类的特有方法\n    }\n}\n\nabstract class Animale2{\n    abstract public void eat();\n}\n\nclass Cat2 extends Animale2{\n    public void eat(){\n        System.out.println(\"Cat eat finish\");\n    }\n    public void catchMouse(){\n        System.out.println(\"Cat cat mouse\");\n    }\n}\n```\n---\n~~Cat eat finish\nCat cat mouse~~\n\n---\n**千万不能出现这样的操作：就是将父类对象转成子类类型**\n\n```\nAnimale a = new Animale();\nCat c = (Cat)a;\n```\n## 内部类\n### 内部类的使用\n#### 内部类的访问规则\n1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）\n2．外部类要访问内部类，必须建立内部类对象。\n\n```\npackage basics;\n\nimport basics.Outer.StaticInner;\n\npublic class OutIn{\n	public static void main(String[] args) {\n		//外部类访问内部类\n		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()\n		Outer.Inner inner = new Outer().new Inner();\n		inner.fun();\n		\n		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()\n		StaticInner inner2 = new Outer.StaticInner();\n		inner2.fun();\n	}\n}\n\nclass Outer {\n	private static int x = 1;\n	\n	/**\n	 * 非静态内部类\n	 */\n	class Inner{\n		int x = 2;\n		public void fun(){\n			int x = 3;\n			System.out.println(x);//内部类方法中的变量\n			System.out.println(this.x);//内部类中的变量\n			System.out.println(Outer.this.x);//外部类中的变量\n		}\n	}\n	\n	/**\n	 * 静态内部类\n	 */\n	static class StaticInner{\n		public void fun(){\n			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。\n			System.out.println(\"此为静态内部类方法\" + x);\n		}\n	}\n}\n```\n#### 访问格式\n1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。\n格式\n```\n外部类名.内部类名  变量名 = 外部类对象.内部类对象;\nOuter.Inner in = new Outer().new Inner();\n```\n2．当内部类在成员位置上，就可以被成员修饰符所修饰。\n\n比如：\n- private：将内部类在外部类中进行封装。\n- static:  内部类就具备static的特性。\n\n当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。\n\n>在外部其他类中，如何直接访问static内部类的非静态成员呢？\n\nnew Outer.Inner().function();\n>在外部其他类中，如何直接访问static内部类的静态成员呢？\n\nuter.Inner.function();\n\n注意：\n当内部类中定义了静态成员，该内部类必须是static的。\n当外部类中的静态方法访问内部类时，内部类也必须是static的。\n\n### 匿名内部类\n匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类\n\n有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。\n\n#### 匿名内部类的格式\n**new 父类或者接口(){定义子类的内容};**\n```\nRunnable r = new Runnable(){};\n\n//多在 Android 中使用，例如监听方法的实现\nnew Demo(){	//匿名内部类\n	public void show(){\n		System.out.println(\"Inner show!\");\n	}\n}.show();\n```\n#### 例子\n```\npackage basics;\n\n/**\n * 接口\n */\ninterface Inter{\n	public void fun();\n}\n\n/**\n * 抽象方法\n */\nabstract class Inter2{\n	abstract public void fun();\n}\n\nclass Test{\n	//返回  Inter 对象\n	public static Inter fun2(){\n		return new Inter(){\n			public void fun(){\n				System.out.println(\"fun2 running!\");\n			}\n		};\n	}\n	\n	public static void fun3(){\n		//对象.方法();\n		new Inter2(){\n			public void fun(){\n				System.out.println(\"fun3 running!\");\n			}\n		}.fun();\n	}\n}\n\npublic class AnonymousInnerClass {\n	public static void main(String[] args) {\n		//Test.fun2() 返回的是  Inter 对象，对象.方法\n		Test.fun2().fun();\n		\n		Test.fun3();\n	}\n}\n```\n## 默认方法\n默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。\n```\npackage basics;\n\npublic interface Person {\n	public void eat();\n	\n	//默认方法，有实现体\n	default public void die(){\n		System.out.println(\"Game Over!\");\n	}\n}\n```\nPerson 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default\n\n>为什么会有默认方法\n\n假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。\n\n但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。\n\n通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。\n\n```\npackage basics;\n\npublic class DefaultFunction implements Person{\n\n	@Override\n	public void eat() {\n		// TODO Auto-generated method stub\n	}\n	\n	public static void main(String[] args) {\n		//不需要做任何改动，直接得到这个默认方法\n		new DefaultFunction().die();\n	}\n}\n```\n## 装箱和拆箱\n### 封装类\n所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。\n### 自动装箱和自动拆箱\n```\nint i = 5;\n\n//把一个基本类型的变量,转换为 Integer 对象\nInteger it = new Integer(i);\n//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱\nInteger it2 = i;\n\n//把一个 Integer 对象，转换为一个基本类型的 int\nint i2 = it.intValue();\n//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱\nint i3 = it;\n```\n### Number 类\n数字封装类有：Byte,Short,Integer,Long,Float,Double\n这些类都是抽象类 Number 的子类\n```\nint i = 5;\n\nInteger it = new Integer(i);\n//Integer 是 Number 的子类，所以打印 true\nSystem.out.println(it instanceof Number);\n```\n## Math\n```\nfloat f1 = 5.4f;\n\n//四舍五入\nSystem.out.println(Math.round(f1));\n\n//得到一个 0-1 之间的随机浮点数（取不到1）\nSystem.out.println(Math.random());\n\n//得到一个 0-10 之间的随机整数 （取不到10）\nSystem.out.println((int)( Math.random()*10));\n\n//大于指定数据的最小整数\nSystem.out.println(Math.ceil(f1));	//6.0\n\n//小于指定数据的最大整数\nSystem.out.println(Math.floor(f1));	//5.0\n\n//开方\nSystem.out.println(Math.sqrt(9));\n\n//次方（2的4次方）\nSystem.out.println(Math.pow(2,4));\n\n//π\nSystem.out.println(Math.PI);\n\n//自然常数\nSystem.out.println(Math.E);\n```\n## 格式控制\n### 换行符和回车符\n- 换行符就是另起一行 --- \'\\n\' 换行（newline）\n- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）\n\n在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。\n\n然而在不同的操作系统，换行符是不一样的\n- 在DOS和Windows中，每行结尾是 “\\r\\n”；\n- Linux系统里，每行结尾只有 “\\n”；\n- Mac系统里，每行结尾是只有 \"\\r\"。\n\n为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。\n### \\\\t 空格对齐\n```\nSystem.out.println(\"使用空格无法达到对齐的效果\");\nSystem.out.println(\"abc def\");\nSystem.out.println(\"ab def\");\nSystem.out.println(\"a def\");\n\nSystem.out.println(\"使用\\\\t制表符可以达到对齐的效果\");\nSystem.out.println(\"abc\\tdef\");\nSystem.out.println(\"ab\\tdef\");\nSystem.out.println(\"a\\tdef\");\n```\n---\n~~使用空格无法达到对齐的效果\nabc def\nab def\na def\n使用 \\t 制表符可以达到对齐的效果\nabc	def\nab	def\na	def~~\n\n---\n## String\n### 概述\n字符串最大特点：一旦被初始化就不可以被改变。\n\nString 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。\n```\n//s1 在内存中有一个对象\nString s1 = \"abc\";\n//s2 在内存中有两个对象\nString s2 = new String(\"abc\");\nString s3 = \"abc\";\n\nSystem.out.println(s1==s2);//false\nSystem.out.println(s1==s3);//true\nSystem.out.println(s1.equals(s2));//true\n```\n\n### 常见方法\n#### 获取\n```\nString str = \"aabcbcc\";\n\n//字符串的长度\nSystem.out.println(str.length());\n\n//根据位置获取位置上某个字符\nSystem.out.println(str.charAt(1));\n\n//===== 根据字符获取该字符在字符串中位置 =====\n//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。\n//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。\n//如果没有找到，返回-1\nSystem.out.println(str.indexOf(\'b\',3));\n//可以用于对指定判断是否包含\nif(str.indexOf(\"aa\")!=-1)\n\n\n//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变\nSystem.out.println(str.lastIndexOf(\'b\'));\n```\n#### 判断\n```\n//判断文件名称是否是Array单词开头。\nsop(str.startsWith(\"Array\"));\n//判断文件名称是否是.java的文件。\nsop(str.endsWith(\".java\"));\n//判断文件中是否包含Demo\nsop(str.contains(\"Demo\"));\n```\n- 字符串中是否包含某一个子串。\n`boolean contains(str):`\n特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。\n所以，也可以用于对指定判断是否包含。\n`if(str.indexOf(\"aa\")!=-1)`\n\n而且该方法既可以判断，又可以获取出现的位置。\n\n- 字符中是否有内容。\n`boolean isEmpty(): 原理就是判断长度是否为0. `\n- 字符串是否是以指定内容开头。\n`boolean startsWith(str);`\n- 字符串是否是以指定内容结尾。\n`boolean endsWith(str);`\n- 判断字符串内容是否相同。复写了Object类中的equals方法。\n`boolean equals(str);`\n- 判断内容是否相同，并忽略大小写。\n`boolean equalsIgnoreCase();`\n\n#### 转换\n```\npublic static void method_trans()\n	{\n		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};\n		String s= new String(arr,1,3);//3是个数\n		sop(\"s=\"+s);\n		String s1 = \"zxcvbnm\";\n		char[] chs = s1.toCharArray();\n		for(int x=0; x<chs.length; x++)\n		{\n			sop(\"ch=\"+chs[x]);\n		}\n	}\n```\n- 将字符数组转成字符串。\n构造函数：\n```\nString(char[])\nString(char[],offset,count):将字符数组中的一部分转成字符串。\n```\n静态方法：\n```\nstatic String copyValueOf(char[]);\nstatic String copyValueOf(char[] data, int offset, int count) \nstatic String valueOf(char[]):\n```\n- 将字符串转成字符数组。**\n`char[] toCharArray():`\n\n- 将字节数组转成字符串。\n`String(byte[])`\n`String(byte[],offset,count):将字节数组中的一部分转成字符串。`\n\n- 将字符串转成字节数组。\n`byte[]  getBytes():`\n\n- 将基本数据类型转成字符串。\n`static String valueOf(int)`\n`static String valueOf(double)`\n特殊：字符串和字节数组在转换过程中，是可以指定编码表的。\n#### 替换\n`String replace(oldchar,newchar);`\n```\npublic static void method_replace()\n	{\n		String s = \"hello java\";\n	 //String s1 = s.replace(\'q\',\'n\');\n//如果要替换的字符不存在，返回的还是原串。\n		String s1 = s.replace(\"java\",\"world\");\n		sop(\"s=\"+s);\n		sop(\"s1=\"+s1);\n	}\n```\n#### 切割\n`String[] split(regex);`\n```\npublic static void  method_split()\n	{\n		String s = \"zhagnsa,lisi,wangwu\";\n\n		String[] arr  = s.split(\",\");\n\n		for(int x = 0; x<arr.length; x++)\n		{\n			sop(arr[x]);\n		}\n	}	\n```\n#### 子串（获取字符串中的一部分）\n`String substring(begin);`\n`String substring(begin,end);`\n```\npublic static void method_sub()\n	{\n		String s = \"abcdef\";\n		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。\n		sop(s.substring(2,4)); \n 		//包含头，不包含尾。s.substring(0,s.length());\n	}\n```\n#### 转换，去除空格，比较\n- 将字符串转成大写或则小写。\n`String toUpperCase();`\n`String toLowerCase();`\n\n- 将字符串两端的多个空格去除。\n`String trim();`\n\n- 对两个字符串进行自然顺序的比较。\n`int compareTo(string);`\n### StringBuffer\n#### 特点\n1. 长度是可变化的。\n2. 可以直接操作多个数据类型。\n3. 最终会通过 toString 方法变成字符串。\n4. 是一个容器。\n\n>为什么StringBuffer可以变长？\n\n和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。\n\n比如说new StringBuffer(\"the\")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。\n\n如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。\n\n注： 19 这个数量，不同的JDK数量是不一样的\n### StringBuilder\nStringBuffer 是线程同步。\nStringBuilder 是线程不同步。\n建议使用 StringBuilder\n#### 存储。\nStringBuffer append():将指定数据作为参数添加到已有数据结尾处。\nStringBuffer insert(index,数据):可以将数据插入到指定index位置。\n### 删除。\nStringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。\nStringBuffer deleteCharAt(index):删除指定位置的字符。\n### 获取。\nchar charAt(int index) \nint indexOf(String str) \nint lastIndexOf(String str) \nint length() \nString substring(int start, int end)  \n### 修改。\nStringBuffer replace(start,end,string);\nvoid setCharAt(int index, char ch) ;\n### 反转。\nStringBuffer reverse(); \n### 将缓冲区中指定数据存储到指定字符数组中。\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\n## Date\n|字符|含义|\n|-|\n|y| 代表年|\n|M| 代表月|\n|d| 代表日|\n|H| 代表24进制的小时|\n|h| 代表12进制的小时|\n|m| 代表分钟|\n|s| 代表秒|\n|S| 代表毫秒|\n\n```\n//时间原点\nDate date = new Date(5000);\nSystem.out.println(date);	//Thu Jan 01 08:00:05 CST 1970\n\n//当前时间\nDate dateNow = new Date();\nSystem.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018\n\n//时间格式化\nSimpleDateFormat sdf =new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\nDate d= new Date();\nString str = sdf.format(d);\nSystem.out.println(str);	//2018-10-12 11:10:23\n```\n## Calendar\n```\nimport java.text.SimpleDateFormat;\nimport java.util.Calendar;\nimport java.util.Date;\n\npublic class DateDemo {\n	private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n	 \n    public static void main(String[] args) {\n    	//采用单例模式获取日历对象Calendar.getInstance();\n        Calendar c = Calendar.getInstance();\n        \n        //通过日历对象得到日期对象\n        Date now = c.getTime();\n        \n        //===== 当前日期 =====\n        System.out.println(\"当前日期：\\t\" + format(c.getTime()));\n \n        //===== 下个月的今天 =====\n        //set方法，直接设置年/月/日\n        c.setTime(now);\n        //add方法，在原日期上增加年/月/日\n        c.add(Calendar.MONTH, 1);\n        System.out.println(\"下个月的今天:\\t\" +format(c.getTime()));\n \n        //===== 去年的今天 =====\n        c.setTime(now);\n        c.add(Calendar.YEAR, -1);\n        System.out.println(\"去年的今天:\\t\" +format(c.getTime()));\n \n        //===== 上个月的第三天 =====\n        c.setTime(now);\n        c.add(Calendar.MONTH, -1);\n        c.set(Calendar.DATE, 3);\n        System.out.println(\"上个月的第三天:\\t\" +format(c.getTime()));\n \n    }\n \n    private static String format(Date time) {\n        return sdf.format(time);\n    }\n}\n```\n## 异常\n### finally\n- finally中定义的通常是-->关闭资源代码,因为资源必须释放。\n- finally只有一种情况不会执行。\n当执行到System.exit(0); //系统退出 jvm 结束\nfianlly不会执行。\n\n### throw 和 throws 的区别\n- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`\nthrow：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`\n- throws：表示出现异常的一种可能性，并不一定会发生这些异常；\nthrow：执行 throw 则一定抛出了某个异常对象。\n### 异常的分类\n异常分类： 可查异常，运行时异常和错误 3 种。\n- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。\n- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。\n在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。\n- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。\n### 自定义异常\n**自定义异常必须继承 Exception**\n\n>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。\n\n```\npackage basics;\n\npublic class TestDemo {\n    public static void main(String[] args) {\n    	Demo d = new Demo();\n    	try{\n    		int x = d.div(4, -1);\n    		System.out.println(\"除数为负数\");\n    	}catch(FuShuException e){\n    		System.out.println(e.toString() + \"\\t错误的负数：\"+e.GetNum());\n    	}\n    	System.out.println(\"Over!!!\");\n    }\n}\n\n/**\n * 自定义异常信息\n */\nclass FuShuException extends Exception{	//自定义异常必须继承 Exception\n	private int num;\n	FuShuException(String msg,int num){\n		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。\n		super(msg);\n		this.num = num;\n	}\n	public int GetNum(){\n		return num;\n	}\n}\n\nclass Demo{\n	public int div(int a,int b)throws FuShuException{\n		if(b<0)	{\n			throw new FuShuException(\"异常信息，除负数啦！\", b);\n		}\n		return a/b;\n	}\n}\n```\n---\n~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1\nOver!!!~~\n\n---\n### 异常在子父类中的覆盖\n1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。\n2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。\n3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。\n## 集合框架\n### LinkedList\n除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。\n\n>1.添加\n\naddFirst();\naddLast();\n>2.获取\n\n获取元素，但不删除元素。\n如果集合中没有元素，会出现 NoSuchElementException 异常。\ngetFirst();\ngetLast();\n\n获取元素，但是元素被删除。\n如果集合中没有元素，会出现 NoSuchElementException 异常。\nremoveFirst();\nremoveLast();\n\n---\n\n在JDK1.6出现了替代方法。\n>1.添加\n\nofferFirst();\nofferLast();\n>2.获取\n\n获取元素，但不删除元素。\n如果集合中没有元素，会返回null。\npeekFirst();\npeekLast();\n\n获取元素，但是元素被删除。\n如果集合中没有元素，会返回null。\npollFirst();\npollLast();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.001650s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:23+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/209.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/209.html [运行时间：0.089554s][吞吐率：11.17req/s] [内存消耗：2,228.06kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '56492',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 基础
[TOC]
## Scanner
```
package basics;

import java.util.Scanner;

public class ScannerDemo {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt();
		System.out.println("输入的整数是：" + num);
		
		float f = scan.nextFloat();
		System.out.println("输入的浮点数是：" + f);
		
//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:"\\r\\n",因为 nextInt 仅仅读取数字信息，而不会读取回车换行"\\r\\n".
//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串
		String str = scan.nextLine(); //读取回车换行
		String str2 = scan.nextLine(); //读取真正的字符串
		System.out.println("str1是：" + str);
		System.out.println("输入的字符串是：" + str2);
	}
}
```
## 匿名对象
### 1.1 使用方式
```
package study;

/**
 * 匿名对象
 * Created by CaptainQR on 2018/9/26.
 */
public class AnonymousObject {
    public static void main(String[] args) {
        new Car().age = 5;
        new Car().color = "blue";
        new Car().show();   //每一次 new 都是一个新的对象
    }
}

class Car{
    String color = "red";
    int age = 4;
    public void show(){
        System.out.println("Car color = " + this.color + ", Car age = " + this.age);
    }
}
```

---
~~Car color = red, Car age = 4~~

---

1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。

1. 可以将匿名对象作为实际参数进行传递。
`Show(new Car());`

## JAVA 的默认修饰符
### 1.default
只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。

## 多态
### 1. 简单应用
```
package study;

/**
 * 多态
 * Created by CaptainQR on 2018/9/26.
 */
public class Polymorphism {
    public static void main(String[] args) {
        function(new Cat());
        function(new Dog());
    }

    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象
        a.eat();
//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员
    }
}

/**
 * 抽象类
 */
abstract class Animale{
    abstract public void eat();
}

/**
 * 猫类 实现 抽象的 动物类
 */
class Cat extends Animale{
    public void eat() {
        System.out.println("Cat eat finish");
    }

    public void catMouse(){
        System.out.println("Cat catch mouse");
    }
}

/**
 * 狗类 实现 抽象的 动物类
 */
class Dog extends Animale{
    public void eat() {
        System.out.println("Dog eat bone");
    }

    public void seeHome(){
        System.out.println("Dog see Home");
    }
}
```
---
~~Cat eat finish
Dog eat bone~~

---
### 2.向上转型和向下转型
```
package study;

/**
 * 向上转型和向下转型
 * Created by CaptainQR on 2018/9/26.
 */
public class Transformation {
    public static void main(String[] args) {
        Animale2 a = new Cat2();    //向上转型
        a.eat();    //此时不能调用子类的特有方法
        Cat2 c = (Cat2)a;   //向下转型
        c.catchMouse(); //此时才能调用子类的特有方法
    }
}

abstract class Animale2{
    abstract public void eat();
}

class Cat2 extends Animale2{
    public void eat(){
        System.out.println("Cat eat finish");
    }
    public void catchMouse(){
        System.out.println("Cat cat mouse");
    }
}
```
---
~~Cat eat finish
Cat cat mouse~~

---
**千万不能出现这样的操作：就是将父类对象转成子类类型**

```
Animale a = new Animale();
Cat c = (Cat)a;
```
## 内部类
### 内部类的使用
#### 内部类的访问规则
1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）
2．外部类要访问内部类，必须建立内部类对象。

```
package basics;

import basics.Outer.StaticInner;

public class OutIn{
	public static void main(String[] args) {
		//外部类访问内部类
		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()
		Outer.Inner inner = new Outer().new Inner();
		inner.fun();
		
		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()
		StaticInner inner2 = new Outer.StaticInner();
		inner2.fun();
	}
}

class Outer {
	private static int x = 1;
	
	/**
	 * 非静态内部类
	 */
	class Inner{
		int x = 2;
		public void fun(){
			int x = 3;
			System.out.println(x);//内部类方法中的变量
			System.out.println(this.x);//内部类中的变量
			System.out.println(Outer.this.x);//外部类中的变量
		}
	}
	
	/**
	 * 静态内部类
	 */
	static class StaticInner{
		public void fun(){
			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。
			System.out.println("此为静态内部类方法" + x);
		}
	}
}
```
#### 访问格式
1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。
格式
```
外部类名.内部类名  变量名 = 外部类对象.内部类对象;
Outer.Inner in = new Outer().new Inner();
```
2．当内部类在成员位置上，就可以被成员修饰符所修饰。

比如：
- private：将内部类在外部类中进行封装。
- static:  内部类就具备static的特性。

当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。

>在外部其他类中，如何直接访问static内部类的非静态成员呢？

new Outer.Inner().function();
>在外部其他类中，如何直接访问static内部类的静态成员呢？

uter.Inner.function();

注意：
当内部类中定义了静态成员，该内部类必须是static的。
当外部类中的静态方法访问内部类时，内部类也必须是static的。

### 匿名内部类
匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类

有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。

#### 匿名内部类的格式
**new 父类或者接口(){定义子类的内容};**
```
Runnable r = new Runnable(){};

//多在 Android 中使用，例如监听方法的实现
new Demo(){	//匿名内部类
	public void show(){
		System.out.println("Inner show!");
	}
}.show();
```
#### 例子
```
package basics;

/**
 * 接口
 */
interface Inter{
	public void fun();
}

/**
 * 抽象方法
 */
abstract class Inter2{
	abstract public void fun();
}

class Test{
	//返回  Inter 对象
	public static Inter fun2(){
		return new Inter(){
			public void fun(){
				System.out.println("fun2 running!");
			}
		};
	}
	
	public static void fun3(){
		//对象.方法();
		new Inter2(){
			public void fun(){
				System.out.println("fun3 running!");
			}
		}.fun();
	}
}

public class AnonymousInnerClass {
	public static void main(String[] args) {
		//Test.fun2() 返回的是  Inter 对象，对象.方法
		Test.fun2().fun();
		
		Test.fun3();
	}
}
```
## 默认方法
默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。
```
package basics;

public interface Person {
	public void eat();
	
	//默认方法，有实现体
	default public void die(){
		System.out.println("Game Over!");
	}
}
```
Person 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default

>为什么会有默认方法

假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。

但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。

通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。

```
package basics;

public class DefaultFunction implements Person{

	@Override
	public void eat() {
		// TODO Auto-generated method stub
	}
	
	public static void main(String[] args) {
		//不需要做任何改动，直接得到这个默认方法
		new DefaultFunction().die();
	}
}
```
## 装箱和拆箱
### 封装类
所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。
### 自动装箱和自动拆箱
```
int i = 5;

//把一个基本类型的变量,转换为 Integer 对象
Integer it = new Integer(i);
//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱
Integer it2 = i;

//把一个 Integer 对象，转换为一个基本类型的 int
int i2 = it.intValue();
//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱
int i3 = it;
```
### Number 类
数字封装类有：Byte,Short,Integer,Long,Float,Double
这些类都是抽象类 Number 的子类
```
int i = 5;

Integer it = new Integer(i);
//Integer 是 Number 的子类，所以打印 true
System.out.println(it instanceof Number);
```
## Math
```
float f1 = 5.4f;

//四舍五入
System.out.println(Math.round(f1));

//得到一个 0-1 之间的随机浮点数（取不到1）
System.out.println(Math.random());

//得到一个 0-10 之间的随机整数 （取不到10）
System.out.println((int)( Math.random()*10));

//大于指定数据的最小整数
System.out.println(Math.ceil(f1));	//6.0

//小于指定数据的最大整数
System.out.println(Math.floor(f1));	//5.0

//开方
System.out.println(Math.sqrt(9));

//次方（2的4次方）
System.out.println(Math.pow(2,4));

//π
System.out.println(Math.PI);

//自然常数
System.out.println(Math.E);
```
## 格式控制
### 换行符和回车符
- 换行符就是另起一行 --- \'\\n\' 换行（newline）
- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）

在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。

然而在不同的操作系统，换行符是不一样的
- 在DOS和Windows中，每行结尾是 “\\r\\n”；
- Linux系统里，每行结尾只有 “\\n”；
- Mac系统里，每行结尾是只有 "\\r"。

为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。
### \\\\t 空格对齐
```
System.out.println("使用空格无法达到对齐的效果");
System.out.println("abc def");
System.out.println("ab def");
System.out.println("a def");

System.out.println("使用\\\\t制表符可以达到对齐的效果");
System.out.println("abc\\tdef");
System.out.println("ab\\tdef");
System.out.println("a\\tdef");
```
---
~~使用空格无法达到对齐的效果
abc def
ab def
a def
使用 \\t 制表符可以达到对齐的效果
abc	def
ab	def
a	def~~

---
## String
### 概述
字符串最大特点：一旦被初始化就不可以被改变。

String 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。
```
//s1 在内存中有一个对象
String s1 = "abc";
//s2 在内存中有两个对象
String s2 = new String("abc");
String s3 = "abc";

System.out.println(s1==s2);//false
System.out.println(s1==s3);//true
System.out.println(s1.equals(s2));//true
```

### 常见方法
#### 获取
```
String str = "aabcbcc";

//字符串的长度
System.out.println(str.length());

//根据位置获取位置上某个字符
System.out.println(str.charAt(1));

//===== 根据字符获取该字符在字符串中位置 =====
//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。
//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
//如果没有找到，返回-1
System.out.println(str.indexOf(\'b\',3));
//可以用于对指定判断是否包含
if(str.indexOf("aa")!=-1)


//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变
System.out.println(str.lastIndexOf(\'b\'));
```
#### 判断
```
//判断文件名称是否是Array单词开头。
sop(str.startsWith("Array"));
//判断文件名称是否是.java的文件。
sop(str.endsWith(".java"));
//判断文件中是否包含Demo
sop(str.contains("Demo"));
```
- 字符串中是否包含某一个子串。
`boolean contains(str):`
特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。
所以，也可以用于对指定判断是否包含。
`if(str.indexOf("aa")!=-1)`

而且该方法既可以判断，又可以获取出现的位置。

- 字符中是否有内容。
`boolean isEmpty(): 原理就是判断长度是否为0. `
- 字符串是否是以指定内容开头。
`boolean startsWith(str);`
- 字符串是否是以指定内容结尾。
`boolean endsWith(str);`
- 判断字符串内容是否相同。复写了Object类中的equals方法。
`boolean equals(str);`
- 判断内容是否相同，并忽略大小写。
`boolean equalsIgnoreCase();`

#### 转换
```
public static void method_trans()
	{
		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};
		String s= new String(arr,1,3);//3是个数
		sop("s="+s);
		String s1 = "zxcvbnm";
		char[] chs = s1.toCharArray();
		for(int x=0; x<chs.length; x++)
		{
			sop("ch="+chs[x]);
		}
	}
```
- 将字符数组转成字符串。
构造函数：
```
String(char[])
String(char[],offset,count):将字符数组中的一部分转成字符串。
```
静态方法：
```
static String copyValueOf(char[]);
static String copyValueOf(char[] data, int offset, int count) 
static String valueOf(char[]):
```
- 将字符串转成字符数组。**
`char[] toCharArray():`

- 将字节数组转成字符串。
`String(byte[])`
`String(byte[],offset,count):将字节数组中的一部分转成字符串。`

- 将字符串转成字节数组。
`byte[]  getBytes():`

- 将基本数据类型转成字符串。
`static String valueOf(int)`
`static String valueOf(double)`
特殊：字符串和字节数组在转换过程中，是可以指定编码表的。
#### 替换
`String replace(oldchar,newchar);`
```
public static void method_replace()
	{
		String s = "hello java";
	 //String s1 = s.replace(\'q\',\'n\');
//如果要替换的字符不存在，返回的还是原串。
		String s1 = s.replace("java","world");
		sop("s="+s);
		sop("s1="+s1);
	}
```
#### 切割
`String[] split(regex);`
```
public static void  method_split()
	{
		String s = "zhagnsa,lisi,wangwu";

		String[] arr  = s.split(",");

		for(int x = 0; x<arr.length; x++)
		{
			sop(arr[x]);
		}
	}	
```
#### 子串（获取字符串中的一部分）
`String substring(begin);`
`String substring(begin,end);`
```
public static void method_sub()
	{
		String s = "abcdef";
		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。
		sop(s.substring(2,4)); 
 		//包含头，不包含尾。s.substring(0,s.length());
	}
```
#### 转换，去除空格，比较
- 将字符串转成大写或则小写。
`String toUpperCase();`
`String toLowerCase();`

- 将字符串两端的多个空格去除。
`String trim();`

- 对两个字符串进行自然顺序的比较。
`int compareTo(string);`
### StringBuffer
#### 特点
1. 长度是可变化的。
2. 可以直接操作多个数据类型。
3. 最终会通过 toString 方法变成字符串。
4. 是一个容器。

>为什么StringBuffer可以变长？

和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。

比如说new StringBuffer("the")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。

如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。

注： 19 这个数量，不同的JDK数量是不一样的
### StringBuilder
StringBuffer 是线程同步。
StringBuilder 是线程不同步。
建议使用 StringBuilder
#### 存储。
StringBuffer append():将指定数据作为参数添加到已有数据结尾处。
StringBuffer insert(index,数据):可以将数据插入到指定index位置。
### 删除。
StringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。
StringBuffer deleteCharAt(index):删除指定位置的字符。
### 获取。
char charAt(int index) 
int indexOf(String str) 
int lastIndexOf(String str) 
int length() 
String substring(int start, int end)  
### 修改。
StringBuffer replace(start,end,string);
void setCharAt(int index, char ch) ;
### 反转。
StringBuffer reverse(); 
### 将缓冲区中指定数据存储到指定字符数组中。
void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)
## Date
|字符|含义|
|-|
|y| 代表年|
|M| 代表月|
|d| 代表日|
|H| 代表24进制的小时|
|h| 代表12进制的小时|
|m| 代表分钟|
|s| 代表秒|
|S| 代表毫秒|

```
//时间原点
Date date = new Date(5000);
System.out.println(date);	//Thu Jan 01 08:00:05 CST 1970

//当前时间
Date dateNow = new Date();
System.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018

//时间格式化
SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date d= new Date();
String str = sdf.format(d);
System.out.println(str);	//2018-10-12 11:10:23
```
## Calendar
```
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateDemo {
	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	 
    public static void main(String[] args) {
    	//采用单例模式获取日历对象Calendar.getInstance();
        Calendar c = Calendar.getInstance();
        
        //通过日历对象得到日期对象
        Date now = c.getTime();
        
        //===== 当前日期 =====
        System.out.println("当前日期：\\t" + format(c.getTime()));
 
        //===== 下个月的今天 =====
        //set方法，直接设置年/月/日
        c.setTime(now);
        //add方法，在原日期上增加年/月/日
        c.add(Calendar.MONTH, 1);
        System.out.println("下个月的今天:\\t" +format(c.getTime()));
 
        //===== 去年的今天 =====
        c.setTime(now);
        c.add(Calendar.YEAR, -1);
        System.out.println("去年的今天:\\t" +format(c.getTime()));
 
        //===== 上个月的第三天 =====
        c.setTime(now);
        c.add(Calendar.MONTH, -1);
        c.set(Calendar.DATE, 3);
        System.out.println("上个月的第三天:\\t" +format(c.getTime()));
 
    }
 
    private static String format(Date time) {
        return sdf.format(time);
    }
}
```
## 异常
### finally
- finally中定义的通常是-->关闭资源代码,因为资源必须释放。
- finally只有一种情况不会执行。
当执行到System.exit(0); //系统退出 jvm 结束
fianlly不会执行。

### throw 和 throws 的区别
- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`
throw：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`
- throws：表示出现异常的一种可能性，并不一定会发生这些异常；
throw：执行 throw 则一定抛出了某个异常对象。
### 异常的分类
异常分类： 可查异常，运行时异常和错误 3 种。
- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。
- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。
- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。
### 自定义异常
**自定义异常必须继承 Exception**

>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。

```
package basics;

public class TestDemo {
    public static void main(String[] args) {
    	Demo d = new Demo();
    	try{
    		int x = d.div(4, -1);
    		System.out.println("除数为负数");
    	}catch(FuShuException e){
    		System.out.println(e.toString() + "\\t错误的负数："+e.GetNum());
    	}
    	System.out.println("Over!!!");
    }
}

/**
 * 自定义异常信息
 */
class FuShuException extends Exception{	//自定义异常必须继承 Exception
	private int num;
	FuShuException(String msg,int num){
		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。
		super(msg);
		this.num = num;
	}
	public int GetNum(){
		return num;
	}
}

class Demo{
	public int div(int a,int b)throws FuShuException{
		if(b<0)	{
			throw new FuShuException("异常信息，除负数啦！", b);
		}
		return a/b;
	}
}
```
---
~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1
Over!!!~~

---
### 异常在子父类中的覆盖
1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。
2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。
3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。
## 集合框架
### LinkedList
除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。

>1.添加

addFirst();
addLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会出现 NoSuchElementException 异常。
getFirst();
getLast();

获取元素，但是元素被删除。
如果集合中没有元素，会出现 NoSuchElementException 异常。
removeFirst();
removeLast();

---

在JDK1.6出现了替代方法。
>1.添加

offerFirst();
offerLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会返回null。
peekFirst();
peekLast();

获取元素，但是元素被删除。
如果集合中没有元素，会返回null。
pollFirst();
pollLast();
















',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001153s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001845s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.001150s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000503s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001111s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000282s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=209,`p_id`=2,`title`='Java SE - 基础\r',`content`='# Java SE - 基础\r\n[TOC]\r\n## Scanner\r\n```\r\npackage basics;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class ScannerDemo {\r\n	public static void main(String[] args) {\r\n		Scanner scan = new Scanner(System.in);\r\n		int num = scan.nextInt();\r\n		System.out.println(\"输入的整数是：\" + num);\r\n		\r\n		float f = scan.nextFloat();\r\n		System.out.println(\"输入的浮点数是：\" + f);\r\n		\r\n//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:\"\\r\\n\",因为 nextInt 仅仅读取数字信息，而不会读取回车换行\"\\r\\n\".\r\n//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串\r\n		String str = scan.nextLine(); //读取回车换行\r\n		String str2 = scan.nextLine(); //读取真正的字符串\r\n		System.out.println(\"str1是：\" + str);\r\n		System.out.println(\"输入的字符串是：\" + str2);\r\n	}\r\n}\r\n```\r\n## 匿名对象\r\n### 1.1 使用方式\r\n```\r\npackage study;\r\n\r\n/**\r\n * 匿名对象\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class AnonymousObject {\r\n    public static void main(String[] args) {\r\n        new Car().age = 5;\r\n        new Car().color = \"blue\";\r\n        new Car().show();   //每一次 new 都是一个新的对象\r\n    }\r\n}\r\n\r\nclass Car{\r\n    String color = \"red\";\r\n    int age = 4;\r\n    public void show(){\r\n        System.out.println(\"Car color = \" + this.color + \", Car age = \" + this.age);\r\n    }\r\n}\r\n```\r\n\r\n---\r\n~~Car color = red, Car age = 4~~\r\n\r\n---\r\n\r\n1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。\r\n\r\n1. 可以将匿名对象作为实际参数进行传递。\r\n`Show(new Car());`\r\n\r\n## JAVA 的默认修饰符\r\n### 1.default\r\n只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。\r\n\r\n## 多态\r\n### 1. 简单应用\r\n```\r\npackage study;\r\n\r\n/**\r\n * 多态\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Polymorphism {\r\n    public static void main(String[] args) {\r\n        function(new Cat());\r\n        function(new Dog());\r\n    }\r\n\r\n    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象\r\n        a.eat();\r\n//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员\r\n    }\r\n}\r\n\r\n/**\r\n * 抽象类\r\n */\r\nabstract class Animale{\r\n    abstract public void eat();\r\n}\r\n\r\n/**\r\n * 猫类 实现 抽象的 动物类\r\n */\r\nclass Cat extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n\r\n    public void catMouse(){\r\n        System.out.println(\"Cat catch mouse\");\r\n    }\r\n}\r\n\r\n/**\r\n * 狗类 实现 抽象的 动物类\r\n */\r\nclass Dog extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Dog eat bone\");\r\n    }\r\n\r\n    public void seeHome(){\r\n        System.out.println(\"Dog see Home\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nDog eat bone~~\r\n\r\n---\r\n### 2.向上转型和向下转型\r\n```\r\npackage study;\r\n\r\n/**\r\n * 向上转型和向下转型\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Transformation {\r\n    public static void main(String[] args) {\r\n        Animale2 a = new Cat2();    //向上转型\r\n        a.eat();    //此时不能调用子类的特有方法\r\n        Cat2 c = (Cat2)a;   //向下转型\r\n        c.catchMouse(); //此时才能调用子类的特有方法\r\n    }\r\n}\r\n\r\nabstract class Animale2{\r\n    abstract public void eat();\r\n}\r\n\r\nclass Cat2 extends Animale2{\r\n    public void eat(){\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n    public void catchMouse(){\r\n        System.out.println(\"Cat cat mouse\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nCat cat mouse~~\r\n\r\n---\r\n**千万不能出现这样的操作：就是将父类对象转成子类类型**\r\n\r\n```\r\nAnimale a = new Animale();\r\nCat c = (Cat)a;\r\n```\r\n## 内部类\r\n### 内部类的使用\r\n#### 内部类的访问规则\r\n1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）\r\n2．外部类要访问内部类，必须建立内部类对象。\r\n\r\n```\r\npackage basics;\r\n\r\nimport basics.Outer.StaticInner;\r\n\r\npublic class OutIn{\r\n	public static void main(String[] args) {\r\n		//外部类访问内部类\r\n		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()\r\n		Outer.Inner inner = new Outer().new Inner();\r\n		inner.fun();\r\n		\r\n		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()\r\n		StaticInner inner2 = new Outer.StaticInner();\r\n		inner2.fun();\r\n	}\r\n}\r\n\r\nclass Outer {\r\n	private static int x = 1;\r\n	\r\n	/**\r\n	 * 非静态内部类\r\n	 */\r\n	class Inner{\r\n		int x = 2;\r\n		public void fun(){\r\n			int x = 3;\r\n			System.out.println(x);//内部类方法中的变量\r\n			System.out.println(this.x);//内部类中的变量\r\n			System.out.println(Outer.this.x);//外部类中的变量\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * 静态内部类\r\n	 */\r\n	static class StaticInner{\r\n		public void fun(){\r\n			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。\r\n			System.out.println(\"此为静态内部类方法\" + x);\r\n		}\r\n	}\r\n}\r\n```\r\n#### 访问格式\r\n1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。\r\n格式\r\n```\r\n外部类名.内部类名  变量名 = 外部类对象.内部类对象;\r\nOuter.Inner in = new Outer().new Inner();\r\n```\r\n2．当内部类在成员位置上，就可以被成员修饰符所修饰。\r\n\r\n比如：\r\n- private：将内部类在外部类中进行封装。\r\n- static:  内部类就具备static的特性。\r\n\r\n当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。\r\n\r\n>在外部其他类中，如何直接访问static内部类的非静态成员呢？\r\n\r\nnew Outer.Inner().function();\r\n>在外部其他类中，如何直接访问static内部类的静态成员呢？\r\n\r\nuter.Inner.function();\r\n\r\n注意：\r\n当内部类中定义了静态成员，该内部类必须是static的。\r\n当外部类中的静态方法访问内部类时，内部类也必须是static的。\r\n\r\n### 匿名内部类\r\n匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类\r\n\r\n有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。\r\n\r\n#### 匿名内部类的格式\r\n**new 父类或者接口(){定义子类的内容};**\r\n```\r\nRunnable r = new Runnable(){};\r\n\r\n//多在 Android 中使用，例如监听方法的实现\r\nnew Demo(){	//匿名内部类\r\n	public void show(){\r\n		System.out.println(\"Inner show!\");\r\n	}\r\n}.show();\r\n```\r\n#### 例子\r\n```\r\npackage basics;\r\n\r\n/**\r\n * 接口\r\n */\r\ninterface Inter{\r\n	public void fun();\r\n}\r\n\r\n/**\r\n * 抽象方法\r\n */\r\nabstract class Inter2{\r\n	abstract public void fun();\r\n}\r\n\r\nclass Test{\r\n	//返回  Inter 对象\r\n	public static Inter fun2(){\r\n		return new Inter(){\r\n			public void fun(){\r\n				System.out.println(\"fun2 running!\");\r\n			}\r\n		};\r\n	}\r\n	\r\n	public static void fun3(){\r\n		//对象.方法();\r\n		new Inter2(){\r\n			public void fun(){\r\n				System.out.println(\"fun3 running!\");\r\n			}\r\n		}.fun();\r\n	}\r\n}\r\n\r\npublic class AnonymousInnerClass {\r\n	public static void main(String[] args) {\r\n		//Test.fun2() 返回的是  Inter 对象，对象.方法\r\n		Test.fun2().fun();\r\n		\r\n		Test.fun3();\r\n	}\r\n}\r\n```\r\n## 默认方法\r\n默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。\r\n```\r\npackage basics;\r\n\r\npublic interface Person {\r\n	public void eat();\r\n	\r\n	//默认方法，有实现体\r\n	default public void die(){\r\n		System.out.println(\"Game Over!\");\r\n	}\r\n}\r\n```\r\nPerson 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default\r\n\r\n>为什么会有默认方法\r\n\r\n假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。\r\n\r\n但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。\r\n\r\n通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class DefaultFunction implements Person{\r\n\r\n	@Override\r\n	public void eat() {\r\n		// TODO Auto-generated method stub\r\n	}\r\n	\r\n	public static void main(String[] args) {\r\n		//不需要做任何改动，直接得到这个默认方法\r\n		new DefaultFunction().die();\r\n	}\r\n}\r\n```\r\n## 装箱和拆箱\r\n### 封装类\r\n所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。\r\n### 自动装箱和自动拆箱\r\n```\r\nint i = 5;\r\n\r\n//把一个基本类型的变量,转换为 Integer 对象\r\nInteger it = new Integer(i);\r\n//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱\r\nInteger it2 = i;\r\n\r\n//把一个 Integer 对象，转换为一个基本类型的 int\r\nint i2 = it.intValue();\r\n//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱\r\nint i3 = it;\r\n```\r\n### Number 类\r\n数字封装类有：Byte,Short,Integer,Long,Float,Double\r\n这些类都是抽象类 Number 的子类\r\n```\r\nint i = 5;\r\n\r\nInteger it = new Integer(i);\r\n//Integer 是 Number 的子类，所以打印 true\r\nSystem.out.println(it instanceof Number);\r\n```\r\n## Math\r\n```\r\nfloat f1 = 5.4f;\r\n\r\n//四舍五入\r\nSystem.out.println(Math.round(f1));\r\n\r\n//得到一个 0-1 之间的随机浮点数（取不到1）\r\nSystem.out.println(Math.random());\r\n\r\n//得到一个 0-10 之间的随机整数 （取不到10）\r\nSystem.out.println((int)( Math.random()*10));\r\n\r\n//大于指定数据的最小整数\r\nSystem.out.println(Math.ceil(f1));	//6.0\r\n\r\n//小于指定数据的最大整数\r\nSystem.out.println(Math.floor(f1));	//5.0\r\n\r\n//开方\r\nSystem.out.println(Math.sqrt(9));\r\n\r\n//次方（2的4次方）\r\nSystem.out.println(Math.pow(2,4));\r\n\r\n//π\r\nSystem.out.println(Math.PI);\r\n\r\n//自然常数\r\nSystem.out.println(Math.E);\r\n```\r\n## 格式控制\r\n### 换行符和回车符\r\n- 换行符就是另起一行 --- \'\\n\' 换行（newline）\r\n- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）\r\n\r\n在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。\r\n\r\n然而在不同的操作系统，换行符是不一样的\r\n- 在DOS和Windows中，每行结尾是 “\\r\\n”；\r\n- Linux系统里，每行结尾只有 “\\n”；\r\n- Mac系统里，每行结尾是只有 \"\\r\"。\r\n\r\n为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。\r\n### \\\\t 空格对齐\r\n```\r\nSystem.out.println(\"使用空格无法达到对齐的效果\");\r\nSystem.out.println(\"abc def\");\r\nSystem.out.println(\"ab def\");\r\nSystem.out.println(\"a def\");\r\n\r\nSystem.out.println(\"使用\\\\t制表符可以达到对齐的效果\");\r\nSystem.out.println(\"abc\\tdef\");\r\nSystem.out.println(\"ab\\tdef\");\r\nSystem.out.println(\"a\\tdef\");\r\n```\r\n---\r\n~~使用空格无法达到对齐的效果\r\nabc def\r\nab def\r\na def\r\n使用 \\t 制表符可以达到对齐的效果\r\nabc	def\r\nab	def\r\na	def~~\r\n\r\n---\r\n## String\r\n### 概述\r\n字符串最大特点：一旦被初始化就不可以被改变。\r\n\r\nString 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。\r\n```\r\n//s1 在内存中有一个对象\r\nString s1 = \"abc\";\r\n//s2 在内存中有两个对象\r\nString s2 = new String(\"abc\");\r\nString s3 = \"abc\";\r\n\r\nSystem.out.println(s1==s2);//false\r\nSystem.out.println(s1==s3);//true\r\nSystem.out.println(s1.equals(s2));//true\r\n```\r\n\r\n### 常见方法\r\n#### 获取\r\n```\r\nString str = \"aabcbcc\";\r\n\r\n//字符串的长度\r\nSystem.out.println(str.length());\r\n\r\n//根据位置获取位置上某个字符\r\nSystem.out.println(str.charAt(1));\r\n\r\n//===== 根据字符获取该字符在字符串中位置 =====\r\n//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。\r\n//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。\r\n//如果没有找到，返回-1\r\nSystem.out.println(str.indexOf(\'b\',3));\r\n//可以用于对指定判断是否包含\r\nif(str.indexOf(\"aa\")!=-1)\r\n\r\n\r\n//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变\r\nSystem.out.println(str.lastIndexOf(\'b\'));\r\n```\r\n#### 判断\r\n```\r\n//判断文件名称是否是Array单词开头。\r\nsop(str.startsWith(\"Array\"));\r\n//判断文件名称是否是.java的文件。\r\nsop(str.endsWith(\".java\"));\r\n//判断文件中是否包含Demo\r\nsop(str.contains(\"Demo\"));\r\n```\r\n- 字符串中是否包含某一个子串。\r\n`boolean contains(str):`\r\n特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。\r\n所以，也可以用于对指定判断是否包含。\r\n`if(str.indexOf(\"aa\")!=-1)`\r\n\r\n而且该方法既可以判断，又可以获取出现的位置。\r\n\r\n- 字符中是否有内容。\r\n`boolean isEmpty(): 原理就是判断长度是否为0. `\r\n- 字符串是否是以指定内容开头。\r\n`boolean startsWith(str);`\r\n- 字符串是否是以指定内容结尾。\r\n`boolean endsWith(str);`\r\n- 判断字符串内容是否相同。复写了Object类中的equals方法。\r\n`boolean equals(str);`\r\n- 判断内容是否相同，并忽略大小写。\r\n`boolean equalsIgnoreCase();`\r\n\r\n#### 转换\r\n```\r\npublic static void method_trans()\r\n	{\r\n		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};\r\n		String s= new String(arr,1,3);//3是个数\r\n		sop(\"s=\"+s);\r\n		String s1 = \"zxcvbnm\";\r\n		char[] chs = s1.toCharArray();\r\n		for(int x=0; x<chs.length; x++)\r\n		{\r\n			sop(\"ch=\"+chs[x]);\r\n		}\r\n	}\r\n```\r\n- 将字符数组转成字符串。\r\n构造函数：\r\n```\r\nString(char[])\r\nString(char[],offset,count):将字符数组中的一部分转成字符串。\r\n```\r\n静态方法：\r\n```\r\nstatic String copyValueOf(char[]);\r\nstatic String copyValueOf(char[] data, int offset, int count) \r\nstatic String valueOf(char[]):\r\n```\r\n- 将字符串转成字符数组。**\r\n`char[] toCharArray():`\r\n\r\n- 将字节数组转成字符串。\r\n`String(byte[])`\r\n`String(byte[],offset,count):将字节数组中的一部分转成字符串。`\r\n\r\n- 将字符串转成字节数组。\r\n`byte[]  getBytes():`\r\n\r\n- 将基本数据类型转成字符串。\r\n`static String valueOf(int)`\r\n`static String valueOf(double)`\r\n特殊：字符串和字节数组在转换过程中，是可以指定编码表的。\r\n#### 替换\r\n`String replace(oldchar,newchar);`\r\n```\r\npublic static void method_replace()\r\n	{\r\n		String s = \"hello java\";\r\n	 //String s1 = s.replace(\'q\',\'n\');\r\n//如果要替换的字符不存在，返回的还是原串。\r\n		String s1 = s.replace(\"java\",\"world\");\r\n		sop(\"s=\"+s);\r\n		sop(\"s1=\"+s1);\r\n	}\r\n```\r\n#### 切割\r\n`String[] split(regex);`\r\n```\r\npublic static void  method_split()\r\n	{\r\n		String s = \"zhagnsa,lisi,wangwu\";\r\n\r\n		String[] arr  = s.split(\",\");\r\n\r\n		for(int x = 0; x<arr.length; x++)\r\n		{\r\n			sop(arr[x]);\r\n		}\r\n	}	\r\n```\r\n#### 子串（获取字符串中的一部分）\r\n`String substring(begin);`\r\n`String substring(begin,end);`\r\n```\r\npublic static void method_sub()\r\n	{\r\n		String s = \"abcdef\";\r\n		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。\r\n		sop(s.substring(2,4)); \r\n 		//包含头，不包含尾。s.substring(0,s.length());\r\n	}\r\n```\r\n#### 转换，去除空格，比较\r\n- 将字符串转成大写或则小写。\r\n`String toUpperCase();`\r\n`String toLowerCase();`\r\n\r\n- 将字符串两端的多个空格去除。\r\n`String trim();`\r\n\r\n- 对两个字符串进行自然顺序的比较。\r\n`int compareTo(string);`\r\n### StringBuffer\r\n#### 特点\r\n1. 长度是可变化的。\r\n2. 可以直接操作多个数据类型。\r\n3. 最终会通过 toString 方法变成字符串。\r\n4. 是一个容器。\r\n\r\n>为什么StringBuffer可以变长？\r\n\r\n和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。\r\n\r\n比如说new StringBuffer(\"the\")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。\r\n\r\n如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。\r\n\r\n注： 19 这个数量，不同的JDK数量是不一样的\r\n### StringBuilder\r\nStringBuffer 是线程同步。\r\nStringBuilder 是线程不同步。\r\n建议使用 StringBuilder\r\n#### 存储。\r\nStringBuffer append():将指定数据作为参数添加到已有数据结尾处。\r\nStringBuffer insert(index,数据):可以将数据插入到指定index位置。\r\n### 删除。\r\nStringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。\r\nStringBuffer deleteCharAt(index):删除指定位置的字符。\r\n### 获取。\r\nchar charAt(int index) \r\nint indexOf(String str) \r\nint lastIndexOf(String str) \r\nint length() \r\nString substring(int start, int end)  \r\n### 修改。\r\nStringBuffer replace(start,end,string);\r\nvoid setCharAt(int index, char ch) ;\r\n### 反转。\r\nStringBuffer reverse(); \r\n### 将缓冲区中指定数据存储到指定字符数组中。\r\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\r\n## Date\r\n|字符|含义|\r\n|-|\r\n|y| 代表年|\r\n|M| 代表月|\r\n|d| 代表日|\r\n|H| 代表24进制的小时|\r\n|h| 代表12进制的小时|\r\n|m| 代表分钟|\r\n|s| 代表秒|\r\n|S| 代表毫秒|\r\n\r\n```\r\n//时间原点\r\nDate date = new Date(5000);\r\nSystem.out.println(date);	//Thu Jan 01 08:00:05 CST 1970\r\n\r\n//当前时间\r\nDate dateNow = new Date();\r\nSystem.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018\r\n\r\n//时间格式化\r\nSimpleDateFormat sdf =new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\nDate d= new Date();\r\nString str = sdf.format(d);\r\nSystem.out.println(str);	//2018-10-12 11:10:23\r\n```\r\n## Calendar\r\n```\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n	private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n	 \r\n    public static void main(String[] args) {\r\n    	//采用单例模式获取日历对象Calendar.getInstance();\r\n        Calendar c = Calendar.getInstance();\r\n        \r\n        //通过日历对象得到日期对象\r\n        Date now = c.getTime();\r\n        \r\n        //===== 当前日期 =====\r\n        System.out.println(\"当前日期：\\t\" + format(c.getTime()));\r\n \r\n        //===== 下个月的今天 =====\r\n        //set方法，直接设置年/月/日\r\n        c.setTime(now);\r\n        //add方法，在原日期上增加年/月/日\r\n        c.add(Calendar.MONTH, 1);\r\n        System.out.println(\"下个月的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 去年的今天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.YEAR, -1);\r\n        System.out.println(\"去年的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 上个月的第三天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.MONTH, -1);\r\n        c.set(Calendar.DATE, 3);\r\n        System.out.println(\"上个月的第三天:\\t\" +format(c.getTime()));\r\n \r\n    }\r\n \r\n    private static String format(Date time) {\r\n        return sdf.format(time);\r\n    }\r\n}\r\n```\r\n## 异常\r\n### finally\r\n- finally中定义的通常是-->关闭资源代码,因为资源必须释放。\r\n- finally只有一种情况不会执行。\r\n当执行到System.exit(0); //系统退出 jvm 结束\r\nfianlly不会执行。\r\n\r\n### throw 和 throws 的区别\r\n- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`\r\nthrow：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`\r\n- throws：表示出现异常的一种可能性，并不一定会发生这些异常；\r\nthrow：执行 throw 则一定抛出了某个异常对象。\r\n### 异常的分类\r\n异常分类： 可查异常，运行时异常和错误 3 种。\r\n- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。\r\n- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。\r\n在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。\r\n- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。\r\n### 自定义异常\r\n**自定义异常必须继承 Exception**\r\n\r\n>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class TestDemo {\r\n    public static void main(String[] args) {\r\n    	Demo d = new Demo();\r\n    	try{\r\n    		int x = d.div(4, -1);\r\n    		System.out.println(\"除数为负数\");\r\n    	}catch(FuShuException e){\r\n    		System.out.println(e.toString() + \"\\t错误的负数：\"+e.GetNum());\r\n    	}\r\n    	System.out.println(\"Over!!!\");\r\n    }\r\n}\r\n\r\n/**\r\n * 自定义异常信息\r\n */\r\nclass FuShuException extends Exception{	//自定义异常必须继承 Exception\r\n	private int num;\r\n	FuShuException(String msg,int num){\r\n		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。\r\n		super(msg);\r\n		this.num = num;\r\n	}\r\n	public int GetNum(){\r\n		return num;\r\n	}\r\n}\r\n\r\nclass Demo{\r\n	public int div(int a,int b)throws FuShuException{\r\n		if(b<0)	{\r\n			throw new FuShuException(\"异常信息，除负数啦！\", b);\r\n		}\r\n		return a/b;\r\n	}\r\n}\r\n```\r\n---\r\n~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1\r\nOver!!!~~\r\n\r\n---\r\n### 异常在子父类中的覆盖\r\n1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。\r\n2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。\r\n3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。\r\n## 集合框架\r\n### LinkedList\r\n除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。\r\n\r\n>1.添加\r\n\r\naddFirst();\r\naddLast();\r\n>2.获取\r\n\r\n获取元素，但不删除元素。\r\n如果集合中没有元素，会出现 NoSuchElementException 异常。\r\ngetFirst();\r\ngetLast();\r\n\r\n获取元素，但是元素被删除。\r\n如果集合中没有元素，会出现 NoSuchElementException 异常。\r\nremoveFirst();\r\nremoveLast();\r\n\r\n---\r\n\r\n在JDK1.6出现了替代方法。\r\n>1.添加\r\n\r\nofferFirst();\r\nofferLast();\r\n>2.获取\r\n\r\n获取元素，但不删除元素。\r\n如果集合中没有元素，会返回null。\r\npeekFirst();\r\npeekLast();\r\n\r\n获取元素，但是元素被删除。\r\n如果集合中没有元素，会返回null。\r\npollFirst();\r\npollLast();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 209 [ RunTime:0.001238s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.002272s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000575s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001112s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000395s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/209.html
[ info ] qingrang.top/daily/admin/note/shownote/id/209.html [运行时间：0.073331s][吞吐率：13.64req/s] [内存消耗：2,019.76kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000717s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001409s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000605s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001086s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000284s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/209.html
[ info ] qingrang.top/daily/admin/note/editnote/id/209.html [运行时间：0.064272s][吞吐率：15.56req/s] [内存消耗：2,067.75kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000445s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001907s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000652s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000940s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000310s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:38+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/209.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/209.html [运行时间：0.061531s][吞吐率：16.25req/s] [内存消耗：2,267.70kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '56492',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 基础
[TOC]
## Scanner
```
package basics;

import java.util.Scanner;

public class ScannerDemo {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt();
		System.out.println("输入的整数是：" + num);
		
		float f = scan.nextFloat();
		System.out.println("输入的浮点数是：" + f);
		
//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:"\\r\\n",因为 nextInt 仅仅读取数字信息，而不会读取回车换行"\\r\\n".
//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串
		String str = scan.nextLine(); //读取回车换行
		String str2 = scan.nextLine(); //读取真正的字符串
		System.out.println("str1是：" + str);
		System.out.println("输入的字符串是：" + str2);
	}
}
```
## 匿名对象
### 1.1 使用方式
```
package study;

/**
 * 匿名对象
 * Created by CaptainQR on 2018/9/26.
 */
public class AnonymousObject {
    public static void main(String[] args) {
        new Car().age = 5;
        new Car().color = "blue";
        new Car().show();   //每一次 new 都是一个新的对象
    }
}

class Car{
    String color = "red";
    int age = 4;
    public void show(){
        System.out.println("Car color = " + this.color + ", Car age = " + this.age);
    }
}
```

---
~~Car color = red, Car age = 4~~

---

1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。

1. 可以将匿名对象作为实际参数进行传递。
`Show(new Car());`

## JAVA 的默认修饰符
### 1.default
只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。

## 多态
### 1. 简单应用
```
package study;

/**
 * 多态
 * Created by CaptainQR on 2018/9/26.
 */
public class Polymorphism {
    public static void main(String[] args) {
        function(new Cat());
        function(new Dog());
    }

    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象
        a.eat();
//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员
    }
}

/**
 * 抽象类
 */
abstract class Animale{
    abstract public void eat();
}

/**
 * 猫类 实现 抽象的 动物类
 */
class Cat extends Animale{
    public void eat() {
        System.out.println("Cat eat finish");
    }

    public void catMouse(){
        System.out.println("Cat catch mouse");
    }
}

/**
 * 狗类 实现 抽象的 动物类
 */
class Dog extends Animale{
    public void eat() {
        System.out.println("Dog eat bone");
    }

    public void seeHome(){
        System.out.println("Dog see Home");
    }
}
```
---
~~Cat eat finish
Dog eat bone~~

---
### 2.向上转型和向下转型
```
package study;

/**
 * 向上转型和向下转型
 * Created by CaptainQR on 2018/9/26.
 */
public class Transformation {
    public static void main(String[] args) {
        Animale2 a = new Cat2();    //向上转型
        a.eat();    //此时不能调用子类的特有方法
        Cat2 c = (Cat2)a;   //向下转型
        c.catchMouse(); //此时才能调用子类的特有方法
    }
}

abstract class Animale2{
    abstract public void eat();
}

class Cat2 extends Animale2{
    public void eat(){
        System.out.println("Cat eat finish");
    }
    public void catchMouse(){
        System.out.println("Cat cat mouse");
    }
}
```
---
~~Cat eat finish
Cat cat mouse~~

---
**千万不能出现这样的操作：就是将父类对象转成子类类型**

```
Animale a = new Animale();
Cat c = (Cat)a;
```
## 内部类
### 内部类的使用
#### 内部类的访问规则
1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）
2．外部类要访问内部类，必须建立内部类对象。

```
package basics;

import basics.Outer.StaticInner;

public class OutIn{
	public static void main(String[] args) {
		//外部类访问内部类
		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()
		Outer.Inner inner = new Outer().new Inner();
		inner.fun();
		
		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()
		StaticInner inner2 = new Outer.StaticInner();
		inner2.fun();
	}
}

class Outer {
	private static int x = 1;
	
	/**
	 * 非静态内部类
	 */
	class Inner{
		int x = 2;
		public void fun(){
			int x = 3;
			System.out.println(x);//内部类方法中的变量
			System.out.println(this.x);//内部类中的变量
			System.out.println(Outer.this.x);//外部类中的变量
		}
	}
	
	/**
	 * 静态内部类
	 */
	static class StaticInner{
		public void fun(){
			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。
			System.out.println("此为静态内部类方法" + x);
		}
	}
}
```
#### 访问格式
1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。
格式
```
外部类名.内部类名  变量名 = 外部类对象.内部类对象;
Outer.Inner in = new Outer().new Inner();
```
2．当内部类在成员位置上，就可以被成员修饰符所修饰。

比如：
- private：将内部类在外部类中进行封装。
- static:  内部类就具备static的特性。

当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。

>在外部其他类中，如何直接访问static内部类的非静态成员呢？

new Outer.Inner().function();
>在外部其他类中，如何直接访问static内部类的静态成员呢？

uter.Inner.function();

注意：
当内部类中定义了静态成员，该内部类必须是static的。
当外部类中的静态方法访问内部类时，内部类也必须是static的。

### 匿名内部类
匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类

有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。

#### 匿名内部类的格式
**new 父类或者接口(){定义子类的内容};**
```
Runnable r = new Runnable(){};

//多在 Android 中使用，例如监听方法的实现
new Demo(){	//匿名内部类
	public void show(){
		System.out.println("Inner show!");
	}
}.show();
```
#### 例子
```
package basics;

/**
 * 接口
 */
interface Inter{
	public void fun();
}

/**
 * 抽象方法
 */
abstract class Inter2{
	abstract public void fun();
}

class Test{
	//返回  Inter 对象
	public static Inter fun2(){
		return new Inter(){
			public void fun(){
				System.out.println("fun2 running!");
			}
		};
	}
	
	public static void fun3(){
		//对象.方法();
		new Inter2(){
			public void fun(){
				System.out.println("fun3 running!");
			}
		}.fun();
	}
}

public class AnonymousInnerClass {
	public static void main(String[] args) {
		//Test.fun2() 返回的是  Inter 对象，对象.方法
		Test.fun2().fun();
		
		Test.fun3();
	}
}
```
## 默认方法
默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。
```
package basics;

public interface Person {
	public void eat();
	
	//默认方法，有实现体
	default public void die(){
		System.out.println("Game Over!");
	}
}
```
Person 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default

>为什么会有默认方法

假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。

但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。

通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。

```
package basics;

public class DefaultFunction implements Person{

	@Override
	public void eat() {
		// TODO Auto-generated method stub
	}
	
	public static void main(String[] args) {
		//不需要做任何改动，直接得到这个默认方法
		new DefaultFunction().die();
	}
}
```
## 装箱和拆箱
### 封装类
所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。
### 自动装箱和自动拆箱
```
int i = 5;

//把一个基本类型的变量,转换为 Integer 对象
Integer it = new Integer(i);
//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱
Integer it2 = i;

//把一个 Integer 对象，转换为一个基本类型的 int
int i2 = it.intValue();
//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱
int i3 = it;
```
### Number 类
数字封装类有：Byte,Short,Integer,Long,Float,Double
这些类都是抽象类 Number 的子类
```
int i = 5;

Integer it = new Integer(i);
//Integer 是 Number 的子类，所以打印 true
System.out.println(it instanceof Number);
```
## Math
```
float f1 = 5.4f;

//四舍五入
System.out.println(Math.round(f1));

//得到一个 0-1 之间的随机浮点数（取不到1）
System.out.println(Math.random());

//得到一个 0-10 之间的随机整数 （取不到10）
System.out.println((int)( Math.random()*10));

//大于指定数据的最小整数
System.out.println(Math.ceil(f1));	//6.0

//小于指定数据的最大整数
System.out.println(Math.floor(f1));	//5.0

//开方
System.out.println(Math.sqrt(9));

//次方（2的4次方）
System.out.println(Math.pow(2,4));

//π
System.out.println(Math.PI);

//自然常数
System.out.println(Math.E);
```
## 格式控制
### 换行符和回车符
- 换行符就是另起一行 --- \'\\n\' 换行（newline）
- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）

在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。

然而在不同的操作系统，换行符是不一样的
- 在DOS和Windows中，每行结尾是 “\\r\\n”；
- Linux系统里，每行结尾只有 “\\n”；
- Mac系统里，每行结尾是只有 "\\r"。

为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。
### \\\\t 空格对齐
```
System.out.println("使用空格无法达到对齐的效果");
System.out.println("abc def");
System.out.println("ab def");
System.out.println("a def");

System.out.println("使用\\\\t制表符可以达到对齐的效果");
System.out.println("abc\\tdef");
System.out.println("ab\\tdef");
System.out.println("a\\tdef");
```
---
~~使用空格无法达到对齐的效果
abc def
ab def
a def
使用 \\t 制表符可以达到对齐的效果
abc	def
ab	def
a	def~~

---
## String
### 概述
字符串最大特点：一旦被初始化就不可以被改变。

String 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。
```
//s1 在内存中有一个对象
String s1 = "abc";
//s2 在内存中有两个对象
String s2 = new String("abc");
String s3 = "abc";

System.out.println(s1==s2);//false
System.out.println(s1==s3);//true
System.out.println(s1.equals(s2));//true
```

### 常见方法
#### 获取
```
String str = "aabcbcc";

//字符串的长度
System.out.println(str.length());

//根据位置获取位置上某个字符
System.out.println(str.charAt(1));

//===== 根据字符获取该字符在字符串中位置 =====
//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。
//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
//如果没有找到，返回-1
System.out.println(str.indexOf(\'b\',3));
//可以用于对指定判断是否包含
if(str.indexOf("aa")!=-1)


//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变
System.out.println(str.lastIndexOf(\'b\'));
```
#### 判断
```
//判断文件名称是否是Array单词开头。
sop(str.startsWith("Array"));
//判断文件名称是否是.java的文件。
sop(str.endsWith(".java"));
//判断文件中是否包含Demo
sop(str.contains("Demo"));
```
- 字符串中是否包含某一个子串。
`boolean contains(str):`
特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。
所以，也可以用于对指定判断是否包含。
`if(str.indexOf("aa")!=-1)`

而且该方法既可以判断，又可以获取出现的位置。

- 字符中是否有内容。
`boolean isEmpty(): 原理就是判断长度是否为0. `
- 字符串是否是以指定内容开头。
`boolean startsWith(str);`
- 字符串是否是以指定内容结尾。
`boolean endsWith(str);`
- 判断字符串内容是否相同。复写了Object类中的equals方法。
`boolean equals(str);`
- 判断内容是否相同，并忽略大小写。
`boolean equalsIgnoreCase();`

#### 转换
```
public static void method_trans()
	{
		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};
		String s= new String(arr,1,3);//3是个数
		sop("s="+s);
		String s1 = "zxcvbnm";
		char[] chs = s1.toCharArray();
		for(int x=0; x<chs.length; x++)
		{
			sop("ch="+chs[x]);
		}
	}
```
- 将字符数组转成字符串。
构造函数：
```
String(char[])
String(char[],offset,count):将字符数组中的一部分转成字符串。
```
静态方法：
```
static String copyValueOf(char[]);
static String copyValueOf(char[] data, int offset, int count) 
static String valueOf(char[]):
```
- 将字符串转成字符数组。**
`char[] toCharArray():`

- 将字节数组转成字符串。
`String(byte[])`
`String(byte[],offset,count):将字节数组中的一部分转成字符串。`

- 将字符串转成字节数组。
`byte[]  getBytes():`

- 将基本数据类型转成字符串。
`static String valueOf(int)`
`static String valueOf(double)`
特殊：字符串和字节数组在转换过程中，是可以指定编码表的。
#### 替换
`String replace(oldchar,newchar);`
```
public static void method_replace()
	{
		String s = "hello java";
	 //String s1 = s.replace(\'q\',\'n\');
//如果要替换的字符不存在，返回的还是原串。
		String s1 = s.replace("java","world");
		sop("s="+s);
		sop("s1="+s1);
	}
```
#### 切割
`String[] split(regex);`
```
public static void  method_split()
	{
		String s = "zhagnsa,lisi,wangwu";

		String[] arr  = s.split(",");

		for(int x = 0; x<arr.length; x++)
		{
			sop(arr[x]);
		}
	}	
```
#### 子串（获取字符串中的一部分）
`String substring(begin);`
`String substring(begin,end);`
```
public static void method_sub()
	{
		String s = "abcdef";
		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。
		sop(s.substring(2,4)); 
 		//包含头，不包含尾。s.substring(0,s.length());
	}
```
#### 转换，去除空格，比较
- 将字符串转成大写或则小写。
`String toUpperCase();`
`String toLowerCase();`

- 将字符串两端的多个空格去除。
`String trim();`

- 对两个字符串进行自然顺序的比较。
`int compareTo(string);`
### StringBuffer
#### 特点
1. 长度是可变化的。
2. 可以直接操作多个数据类型。
3. 最终会通过 toString 方法变成字符串。
4. 是一个容器。

>为什么StringBuffer可以变长？

和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。

比如说new StringBuffer("the")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。

如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。

注： 19 这个数量，不同的JDK数量是不一样的
### StringBuilder
StringBuffer 是线程同步。
StringBuilder 是线程不同步。
建议使用 StringBuilder
#### 存储。
StringBuffer append():将指定数据作为参数添加到已有数据结尾处。
StringBuffer insert(index,数据):可以将数据插入到指定index位置。
### 删除。
StringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。
StringBuffer deleteCharAt(index):删除指定位置的字符。
### 获取。
char charAt(int index) 
int indexOf(String str) 
int lastIndexOf(String str) 
int length() 
String substring(int start, int end)  
### 修改。
StringBuffer replace(start,end,string);
void setCharAt(int index, char ch) ;
### 反转。
StringBuffer reverse(); 
### 将缓冲区中指定数据存储到指定字符数组中。
void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)
## Date
|字符|含义|
|-|
|y| 代表年|
|M| 代表月|
|d| 代表日|
|H| 代表24进制的小时|
|h| 代表12进制的小时|
|m| 代表分钟|
|s| 代表秒|
|S| 代表毫秒|

```
//时间原点
Date date = new Date(5000);
System.out.println(date);	//Thu Jan 01 08:00:05 CST 1970

//当前时间
Date dateNow = new Date();
System.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018

//时间格式化
SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date d= new Date();
String str = sdf.format(d);
System.out.println(str);	//2018-10-12 11:10:23
```
## Calendar
```
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateDemo {
	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	 
    public static void main(String[] args) {
    	//采用单例模式获取日历对象Calendar.getInstance();
        Calendar c = Calendar.getInstance();
        
        //通过日历对象得到日期对象
        Date now = c.getTime();
        
        //===== 当前日期 =====
        System.out.println("当前日期：\\t" + format(c.getTime()));
 
        //===== 下个月的今天 =====
        //set方法，直接设置年/月/日
        c.setTime(now);
        //add方法，在原日期上增加年/月/日
        c.add(Calendar.MONTH, 1);
        System.out.println("下个月的今天:\\t" +format(c.getTime()));
 
        //===== 去年的今天 =====
        c.setTime(now);
        c.add(Calendar.YEAR, -1);
        System.out.println("去年的今天:\\t" +format(c.getTime()));
 
        //===== 上个月的第三天 =====
        c.setTime(now);
        c.add(Calendar.MONTH, -1);
        c.set(Calendar.DATE, 3);
        System.out.println("上个月的第三天:\\t" +format(c.getTime()));
 
    }
 
    private static String format(Date time) {
        return sdf.format(time);
    }
}
```
## 异常
### finally
- finally中定义的通常是-->关闭资源代码,因为资源必须释放。
- finally只有一种情况不会执行。
当执行到System.exit(0); //系统退出 jvm 结束
fianlly不会执行。

### throw 和 throws 的区别
- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`
throw：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`
- throws：表示出现异常的一种可能性，并不一定会发生这些异常；
throw：执行 throw 则一定抛出了某个异常对象。
### 异常的分类
异常分类： 可查异常，运行时异常和错误 3 种。
- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。
- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。
- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。
### 自定义异常
**自定义异常必须继承 Exception**

>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。

```
package basics;

public class TestDemo {
    public static void main(String[] args) {
    	Demo d = new Demo();
    	try{
    		int x = d.div(4, -1);
    		System.out.println("除数为负数");
    	}catch(FuShuException e){
    		System.out.println(e.toString() + "\\t错误的负数："+e.GetNum());
    	}
    	System.out.println("Over!!!");
    }
}

/**
 * 自定义异常信息
 */
class FuShuException extends Exception{	//自定义异常必须继承 Exception
	private int num;
	FuShuException(String msg,int num){
		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。
		super(msg);
		this.num = num;
	}
	public int GetNum(){
		return num;
	}
}

class Demo{
	public int div(int a,int b)throws FuShuException{
		if(b<0)	{
			throw new FuShuException("异常信息，除负数啦！", b);
		}
		return a/b;
	}
}
```
---
~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1
Over!!!~~

---
### 异常在子父类中的覆盖
1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。
2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。
3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。
## 集合框架
### LinkedList
除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。

>1.添加

addFirst();
addLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会出现 NoSuchElementException 异常。
getFirst();
getLast();

获取元素，但是元素被删除。
如果集合中没有元素，会出现 NoSuchElementException 异常。
removeFirst();
removeLast();

---

在JDK1.6出现了替代方法。
>1.添加

offerFirst();
offerLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会返回null。
peekFirst();
peekLast();

获取元素，但是元素被删除。
如果集合中没有元素，会返回null。
pollFirst();
pollLast();
















',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ VIEW ] /var/www/html/daily/thinkphp/tpl/dispatch_jump.tpl [ array (
  0 => 'code',
  1 => 'msg',
  2 => 'data',
  3 => 'url',
  4 => 'wait',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000568s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001584s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000564s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000327s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000284s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=209,`p_id`=2,`title`='Java SE - 基础\r',`content`='# Java SE - 基础\r\n[TOC]\r\n## Scanner\r\n```\r\npackage basics;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class ScannerDemo {\r\n	public static void main(String[] args) {\r\n		Scanner scan = new Scanner(System.in);\r\n		int num = scan.nextInt();\r\n		System.out.println(\"输入的整数是：\" + num);\r\n		\r\n		float f = scan.nextFloat();\r\n		System.out.println(\"输入的浮点数是：\" + f);\r\n		\r\n//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:\"\\r\\n\",因为 nextInt 仅仅读取数字信息，而不会读取回车换行\"\\r\\n\".\r\n//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串\r\n		String str = scan.nextLine(); //读取回车换行\r\n		String str2 = scan.nextLine(); //读取真正的字符串\r\n		System.out.println(\"str1是：\" + str);\r\n		System.out.println(\"输入的字符串是：\" + str2);\r\n	}\r\n}\r\n```\r\n## 匿名对象\r\n### 1.1 使用方式\r\n```\r\npackage study;\r\n\r\n/**\r\n * 匿名对象\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class AnonymousObject {\r\n    public static void main(String[] args) {\r\n        new Car().age = 5;\r\n        new Car().color = \"blue\";\r\n        new Car().show();   //每一次 new 都是一个新的对象\r\n    }\r\n}\r\n\r\nclass Car{\r\n    String color = \"red\";\r\n    int age = 4;\r\n    public void show(){\r\n        System.out.println(\"Car color = \" + this.color + \", Car age = \" + this.age);\r\n    }\r\n}\r\n```\r\n\r\n---\r\n~~Car color = red, Car age = 4~~\r\n\r\n---\r\n\r\n1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。\r\n\r\n1. 可以将匿名对象作为实际参数进行传递。\r\n`Show(new Car());`\r\n\r\n## JAVA 的默认修饰符\r\n### 1.default\r\n只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。\r\n\r\n## 多态\r\n### 1. 简单应用\r\n```\r\npackage study;\r\n\r\n/**\r\n * 多态\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Polymorphism {\r\n    public static void main(String[] args) {\r\n        function(new Cat());\r\n        function(new Dog());\r\n    }\r\n\r\n    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象\r\n        a.eat();\r\n//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员\r\n    }\r\n}\r\n\r\n/**\r\n * 抽象类\r\n */\r\nabstract class Animale{\r\n    abstract public void eat();\r\n}\r\n\r\n/**\r\n * 猫类 实现 抽象的 动物类\r\n */\r\nclass Cat extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n\r\n    public void catMouse(){\r\n        System.out.println(\"Cat catch mouse\");\r\n    }\r\n}\r\n\r\n/**\r\n * 狗类 实现 抽象的 动物类\r\n */\r\nclass Dog extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Dog eat bone\");\r\n    }\r\n\r\n    public void seeHome(){\r\n        System.out.println(\"Dog see Home\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nDog eat bone~~\r\n\r\n---\r\n### 2.向上转型和向下转型\r\n```\r\npackage study;\r\n\r\n/**\r\n * 向上转型和向下转型\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Transformation {\r\n    public static void main(String[] args) {\r\n        Animale2 a = new Cat2();    //向上转型\r\n        a.eat();    //此时不能调用子类的特有方法\r\n        Cat2 c = (Cat2)a;   //向下转型\r\n        c.catchMouse(); //此时才能调用子类的特有方法\r\n    }\r\n}\r\n\r\nabstract class Animale2{\r\n    abstract public void eat();\r\n}\r\n\r\nclass Cat2 extends Animale2{\r\n    public void eat(){\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n    public void catchMouse(){\r\n        System.out.println(\"Cat cat mouse\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nCat cat mouse~~\r\n\r\n---\r\n**千万不能出现这样的操作：就是将父类对象转成子类类型**\r\n\r\n```\r\nAnimale a = new Animale();\r\nCat c = (Cat)a;\r\n```\r\n## 内部类\r\n### 内部类的使用\r\n#### 内部类的访问规则\r\n1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）\r\n2．外部类要访问内部类，必须建立内部类对象。\r\n\r\n```\r\npackage basics;\r\n\r\nimport basics.Outer.StaticInner;\r\n\r\npublic class OutIn{\r\n	public static void main(String[] args) {\r\n		//外部类访问内部类\r\n		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()\r\n		Outer.Inner inner = new Outer().new Inner();\r\n		inner.fun();\r\n		\r\n		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()\r\n		StaticInner inner2 = new Outer.StaticInner();\r\n		inner2.fun();\r\n	}\r\n}\r\n\r\nclass Outer {\r\n	private static int x = 1;\r\n	\r\n	/**\r\n	 * 非静态内部类\r\n	 */\r\n	class Inner{\r\n		int x = 2;\r\n		public void fun(){\r\n			int x = 3;\r\n			System.out.println(x);//内部类方法中的变量\r\n			System.out.println(this.x);//内部类中的变量\r\n			System.out.println(Outer.this.x);//外部类中的变量\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * 静态内部类\r\n	 */\r\n	static class StaticInner{\r\n		public void fun(){\r\n			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。\r\n			System.out.println(\"此为静态内部类方法\" + x);\r\n		}\r\n	}\r\n}\r\n```\r\n#### 访问格式\r\n1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。\r\n格式\r\n```\r\n外部类名.内部类名  变量名 = 外部类对象.内部类对象;\r\nOuter.Inner in = new Outer().new Inner();\r\n```\r\n2．当内部类在成员位置上，就可以被成员修饰符所修饰。\r\n\r\n比如：\r\n- private：将内部类在外部类中进行封装。\r\n- static:  内部类就具备static的特性。\r\n\r\n当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。\r\n\r\n>在外部其他类中，如何直接访问static内部类的非静态成员呢？\r\n\r\nnew Outer.Inner().function();\r\n>在外部其他类中，如何直接访问static内部类的静态成员呢？\r\n\r\nuter.Inner.function();\r\n\r\n注意：\r\n当内部类中定义了静态成员，该内部类必须是static的。\r\n当外部类中的静态方法访问内部类时，内部类也必须是static的。\r\n\r\n### 匿名内部类\r\n匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类\r\n\r\n有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。\r\n\r\n#### 匿名内部类的格式\r\n**new 父类或者接口(){定义子类的内容};**\r\n```\r\nRunnable r = new Runnable(){};\r\n\r\n//多在 Android 中使用，例如监听方法的实现\r\nnew Demo(){	//匿名内部类\r\n	public void show(){\r\n		System.out.println(\"Inner show!\");\r\n	}\r\n}.show();\r\n```\r\n#### 例子\r\n```\r\npackage basics;\r\n\r\n/**\r\n * 接口\r\n */\r\ninterface Inter{\r\n	public void fun();\r\n}\r\n\r\n/**\r\n * 抽象方法\r\n */\r\nabstract class Inter2{\r\n	abstract public void fun();\r\n}\r\n\r\nclass Test{\r\n	//返回  Inter 对象\r\n	public static Inter fun2(){\r\n		return new Inter(){\r\n			public void fun(){\r\n				System.out.println(\"fun2 running!\");\r\n			}\r\n		};\r\n	}\r\n	\r\n	public static void fun3(){\r\n		//对象.方法();\r\n		new Inter2(){\r\n			public void fun(){\r\n				System.out.println(\"fun3 running!\");\r\n			}\r\n		}.fun();\r\n	}\r\n}\r\n\r\npublic class AnonymousInnerClass {\r\n	public static void main(String[] args) {\r\n		//Test.fun2() 返回的是  Inter 对象，对象.方法\r\n		Test.fun2().fun();\r\n		\r\n		Test.fun3();\r\n	}\r\n}\r\n```\r\n## 默认方法\r\n默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。\r\n```\r\npackage basics;\r\n\r\npublic interface Person {\r\n	public void eat();\r\n	\r\n	//默认方法，有实现体\r\n	default public void die(){\r\n		System.out.println(\"Game Over!\");\r\n	}\r\n}\r\n```\r\nPerson 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default\r\n\r\n>为什么会有默认方法\r\n\r\n假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。\r\n\r\n但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。\r\n\r\n通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class DefaultFunction implements Person{\r\n\r\n	@Override\r\n	public void eat() {\r\n		// TODO Auto-generated method stub\r\n	}\r\n	\r\n	public static void main(String[] args) {\r\n		//不需要做任何改动，直接得到这个默认方法\r\n		new DefaultFunction().die();\r\n	}\r\n}\r\n```\r\n## 装箱和拆箱\r\n### 封装类\r\n所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。\r\n### 自动装箱和自动拆箱\r\n```\r\nint i = 5;\r\n\r\n//把一个基本类型的变量,转换为 Integer 对象\r\nInteger it = new Integer(i);\r\n//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱\r\nInteger it2 = i;\r\n\r\n//把一个 Integer 对象，转换为一个基本类型的 int\r\nint i2 = it.intValue();\r\n//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱\r\nint i3 = it;\r\n```\r\n### Number 类\r\n数字封装类有：Byte,Short,Integer,Long,Float,Double\r\n这些类都是抽象类 Number 的子类\r\n```\r\nint i = 5;\r\n\r\nInteger it = new Integer(i);\r\n//Integer 是 Number 的子类，所以打印 true\r\nSystem.out.println(it instanceof Number);\r\n```\r\n## Math\r\n```\r\nfloat f1 = 5.4f;\r\n\r\n//四舍五入\r\nSystem.out.println(Math.round(f1));\r\n\r\n//得到一个 0-1 之间的随机浮点数（取不到1）\r\nSystem.out.println(Math.random());\r\n\r\n//得到一个 0-10 之间的随机整数 （取不到10）\r\nSystem.out.println((int)( Math.random()*10));\r\n\r\n//大于指定数据的最小整数\r\nSystem.out.println(Math.ceil(f1));	//6.0\r\n\r\n//小于指定数据的最大整数\r\nSystem.out.println(Math.floor(f1));	//5.0\r\n\r\n//开方\r\nSystem.out.println(Math.sqrt(9));\r\n\r\n//次方（2的4次方）\r\nSystem.out.println(Math.pow(2,4));\r\n\r\n//π\r\nSystem.out.println(Math.PI);\r\n\r\n//自然常数\r\nSystem.out.println(Math.E);\r\n```\r\n## 格式控制\r\n### 换行符和回车符\r\n- 换行符就是另起一行 --- \'\\n\' 换行（newline）\r\n- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）\r\n\r\n在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。\r\n\r\n然而在不同的操作系统，换行符是不一样的\r\n- 在DOS和Windows中，每行结尾是 “\\r\\n”；\r\n- Linux系统里，每行结尾只有 “\\n”；\r\n- Mac系统里，每行结尾是只有 \"\\r\"。\r\n\r\n为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。\r\n### \\\\t 空格对齐\r\n```\r\nSystem.out.println(\"使用空格无法达到对齐的效果\");\r\nSystem.out.println(\"abc def\");\r\nSystem.out.println(\"ab def\");\r\nSystem.out.println(\"a def\");\r\n\r\nSystem.out.println(\"使用\\\\t制表符可以达到对齐的效果\");\r\nSystem.out.println(\"abc\\tdef\");\r\nSystem.out.println(\"ab\\tdef\");\r\nSystem.out.println(\"a\\tdef\");\r\n```\r\n---\r\n~~使用空格无法达到对齐的效果\r\nabc def\r\nab def\r\na def\r\n使用 \\t 制表符可以达到对齐的效果\r\nabc	def\r\nab	def\r\na	def~~\r\n\r\n---\r\n## String\r\n### 概述\r\n字符串最大特点：一旦被初始化就不可以被改变。\r\n\r\nString 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。\r\n```\r\n//s1 在内存中有一个对象\r\nString s1 = \"abc\";\r\n//s2 在内存中有两个对象\r\nString s2 = new String(\"abc\");\r\nString s3 = \"abc\";\r\n\r\nSystem.out.println(s1==s2);//false\r\nSystem.out.println(s1==s3);//true\r\nSystem.out.println(s1.equals(s2));//true\r\n```\r\n\r\n### 常见方法\r\n#### 获取\r\n```\r\nString str = \"aabcbcc\";\r\n\r\n//字符串的长度\r\nSystem.out.println(str.length());\r\n\r\n//根据位置获取位置上某个字符\r\nSystem.out.println(str.charAt(1));\r\n\r\n//===== 根据字符获取该字符在字符串中位置 =====\r\n//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。\r\n//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。\r\n//如果没有找到，返回-1\r\nSystem.out.println(str.indexOf(\'b\',3));\r\n//可以用于对指定判断是否包含\r\nif(str.indexOf(\"aa\")!=-1)\r\n\r\n\r\n//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变\r\nSystem.out.println(str.lastIndexOf(\'b\'));\r\n```\r\n#### 判断\r\n```\r\n//判断文件名称是否是Array单词开头。\r\nsop(str.startsWith(\"Array\"));\r\n//判断文件名称是否是.java的文件。\r\nsop(str.endsWith(\".java\"));\r\n//判断文件中是否包含Demo\r\nsop(str.contains(\"Demo\"));\r\n```\r\n- 字符串中是否包含某一个子串。\r\n`boolean contains(str):`\r\n特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。\r\n所以，也可以用于对指定判断是否包含。\r\n`if(str.indexOf(\"aa\")!=-1)`\r\n\r\n而且该方法既可以判断，又可以获取出现的位置。\r\n\r\n- 字符中是否有内容。\r\n`boolean isEmpty(): 原理就是判断长度是否为0. `\r\n- 字符串是否是以指定内容开头。\r\n`boolean startsWith(str);`\r\n- 字符串是否是以指定内容结尾。\r\n`boolean endsWith(str);`\r\n- 判断字符串内容是否相同。复写了Object类中的equals方法。\r\n`boolean equals(str);`\r\n- 判断内容是否相同，并忽略大小写。\r\n`boolean equalsIgnoreCase();`\r\n\r\n#### 转换\r\n```\r\npublic static void method_trans()\r\n	{\r\n		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};\r\n		String s= new String(arr,1,3);//3是个数\r\n		sop(\"s=\"+s);\r\n		String s1 = \"zxcvbnm\";\r\n		char[] chs = s1.toCharArray();\r\n		for(int x=0; x<chs.length; x++)\r\n		{\r\n			sop(\"ch=\"+chs[x]);\r\n		}\r\n	}\r\n```\r\n- 将字符数组转成字符串。\r\n构造函数：\r\n```\r\nString(char[])\r\nString(char[],offset,count):将字符数组中的一部分转成字符串。\r\n```\r\n静态方法：\r\n```\r\nstatic String copyValueOf(char[]);\r\nstatic String copyValueOf(char[] data, int offset, int count) \r\nstatic String valueOf(char[]):\r\n```\r\n- 将字符串转成字符数组。**\r\n`char[] toCharArray():`\r\n\r\n- 将字节数组转成字符串。\r\n`String(byte[])`\r\n`String(byte[],offset,count):将字节数组中的一部分转成字符串。`\r\n\r\n- 将字符串转成字节数组。\r\n`byte[]  getBytes():`\r\n\r\n- 将基本数据类型转成字符串。\r\n`static String valueOf(int)`\r\n`static String valueOf(double)`\r\n特殊：字符串和字节数组在转换过程中，是可以指定编码表的。\r\n#### 替换\r\n`String replace(oldchar,newchar);`\r\n```\r\npublic static void method_replace()\r\n	{\r\n		String s = \"hello java\";\r\n	 //String s1 = s.replace(\'q\',\'n\');\r\n//如果要替换的字符不存在，返回的还是原串。\r\n		String s1 = s.replace(\"java\",\"world\");\r\n		sop(\"s=\"+s);\r\n		sop(\"s1=\"+s1);\r\n	}\r\n```\r\n#### 切割\r\n`String[] split(regex);`\r\n```\r\npublic static void  method_split()\r\n	{\r\n		String s = \"zhagnsa,lisi,wangwu\";\r\n\r\n		String[] arr  = s.split(\",\");\r\n\r\n		for(int x = 0; x<arr.length; x++)\r\n		{\r\n			sop(arr[x]);\r\n		}\r\n	}	\r\n```\r\n#### 子串（获取字符串中的一部分）\r\n`String substring(begin);`\r\n`String substring(begin,end);`\r\n```\r\npublic static void method_sub()\r\n	{\r\n		String s = \"abcdef\";\r\n		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。\r\n		sop(s.substring(2,4)); \r\n 		//包含头，不包含尾。s.substring(0,s.length());\r\n	}\r\n```\r\n#### 转换，去除空格，比较\r\n- 将字符串转成大写或则小写。\r\n`String toUpperCase();`\r\n`String toLowerCase();`\r\n\r\n- 将字符串两端的多个空格去除。\r\n`String trim();`\r\n\r\n- 对两个字符串进行自然顺序的比较。\r\n`int compareTo(string);`\r\n### StringBuffer\r\n#### 特点\r\n1. 长度是可变化的。\r\n2. 可以直接操作多个数据类型。\r\n3. 最终会通过 toString 方法变成字符串。\r\n4. 是一个容器。\r\n\r\n>为什么StringBuffer可以变长？\r\n\r\n和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。\r\n\r\n比如说new StringBuffer(\"the\")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。\r\n\r\n如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。\r\n\r\n注： 19 这个数量，不同的JDK数量是不一样的\r\n### StringBuilder\r\nStringBuffer 是线程同步。\r\nStringBuilder 是线程不同步。\r\n建议使用 StringBuilder\r\n#### 存储。\r\nStringBuffer append():将指定数据作为参数添加到已有数据结尾处。\r\nStringBuffer insert(index,数据):可以将数据插入到指定index位置。\r\n### 删除。\r\nStringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。\r\nStringBuffer deleteCharAt(index):删除指定位置的字符。\r\n### 获取。\r\nchar charAt(int index) \r\nint indexOf(String str) \r\nint lastIndexOf(String str) \r\nint length() \r\nString substring(int start, int end)  \r\n### 修改。\r\nStringBuffer replace(start,end,string);\r\nvoid setCharAt(int index, char ch) ;\r\n### 反转。\r\nStringBuffer reverse(); \r\n### 将缓冲区中指定数据存储到指定字符数组中。\r\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\r\n## Date\r\n|字符|含义|\r\n|-|\r\n|y| 代表年|\r\n|M| 代表月|\r\n|d| 代表日|\r\n|H| 代表24进制的小时|\r\n|h| 代表12进制的小时|\r\n|m| 代表分钟|\r\n|s| 代表秒|\r\n|S| 代表毫秒|\r\n\r\n```\r\n//时间原点\r\nDate date = new Date(5000);\r\nSystem.out.println(date);	//Thu Jan 01 08:00:05 CST 1970\r\n\r\n//当前时间\r\nDate dateNow = new Date();\r\nSystem.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018\r\n\r\n//时间格式化\r\nSimpleDateFormat sdf =new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\nDate d= new Date();\r\nString str = sdf.format(d);\r\nSystem.out.println(str);	//2018-10-12 11:10:23\r\n```\r\n## Calendar\r\n```\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n	private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n	 \r\n    public static void main(String[] args) {\r\n    	//采用单例模式获取日历对象Calendar.getInstance();\r\n        Calendar c = Calendar.getInstance();\r\n        \r\n        //通过日历对象得到日期对象\r\n        Date now = c.getTime();\r\n        \r\n        //===== 当前日期 =====\r\n        System.out.println(\"当前日期：\\t\" + format(c.getTime()));\r\n \r\n        //===== 下个月的今天 =====\r\n        //set方法，直接设置年/月/日\r\n        c.setTime(now);\r\n        //add方法，在原日期上增加年/月/日\r\n        c.add(Calendar.MONTH, 1);\r\n        System.out.println(\"下个月的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 去年的今天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.YEAR, -1);\r\n        System.out.println(\"去年的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 上个月的第三天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.MONTH, -1);\r\n        c.set(Calendar.DATE, 3);\r\n        System.out.println(\"上个月的第三天:\\t\" +format(c.getTime()));\r\n \r\n    }\r\n \r\n    private static String format(Date time) {\r\n        return sdf.format(time);\r\n    }\r\n}\r\n```\r\n## 异常\r\n### finally\r\n- finally中定义的通常是-->关闭资源代码,因为资源必须释放。\r\n- finally只有一种情况不会执行。\r\n当执行到System.exit(0); //系统退出 jvm 结束\r\nfianlly不会执行。\r\n\r\n### throw 和 throws 的区别\r\n- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`\r\nthrow：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`\r\n- throws：表示出现异常的一种可能性，并不一定会发生这些异常；\r\nthrow：执行 throw 则一定抛出了某个异常对象。\r\n### 异常的分类\r\n异常分类： 可查异常，运行时异常和错误 3 种。\r\n- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。\r\n- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。\r\n在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。\r\n- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。\r\n### 自定义异常\r\n**自定义异常必须继承 Exception**\r\n\r\n>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class TestDemo {\r\n    public static void main(String[] args) {\r\n    	Demo d = new Demo();\r\n    	try{\r\n    		int x = d.div(4, -1);\r\n    		System.out.println(\"除数为负数\");\r\n    	}catch(FuShuException e){\r\n    		System.out.println(e.toString() + \"\\t错误的负数：\"+e.GetNum());\r\n    	}\r\n    	System.out.println(\"Over!!!\");\r\n    }\r\n}\r\n\r\n/**\r\n * 自定义异常信息\r\n */\r\nclass FuShuException extends Exception{	//自定义异常必须继承 Exception\r\n	private int num;\r\n	FuShuException(String msg,int num){\r\n		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。\r\n		super(msg);\r\n		this.num = num;\r\n	}\r\n	public int GetNum(){\r\n		return num;\r\n	}\r\n}\r\n\r\nclass Demo{\r\n	public int div(int a,int b)throws FuShuException{\r\n		if(b<0)	{\r\n			throw new FuShuException(\"异常信息，除负数啦！\", b);\r\n		}\r\n		return a/b;\r\n	}\r\n}\r\n```\r\n---\r\n~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1\r\nOver!!!~~\r\n\r\n---\r\n### 异常在子父类中的覆盖\r\n1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。\r\n2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。\r\n3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。\r\n## 集合框架\r\n### LinkedList\r\n除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。\r\n\r\n>1.添加\r\n\r\naddFirst();\r\naddLast();\r\n>2.获取\r\n\r\n获取元素，但不删除元素。\r\n如果集合中没有元素，会出现 NoSuchElementException 异常。\r\ngetFirst();\r\ngetLast();\r\n\r\n获取元素，但是元素被删除。\r\n如果集合中没有元素，会出现 NoSuchElementException 异常。\r\nremoveFirst();\r\nremoveLast();\r\n\r\n---\r\n\r\n在JDK1.6出现了替代方法。\r\n>1.添加\r\n\r\nofferFirst();\r\nofferLast();\r\n>2.获取\r\n\r\n获取元素，但不删除元素。\r\n如果集合中没有元素，会返回null。\r\npeekFirst();\r\npeekLast();\r\n\r\n获取元素，但是元素被删除。\r\n如果集合中没有元素，会返回null。\r\npollFirst();\r\npollLast();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 209 [ RunTime:0.000988s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/209.html
[ info ] qingrang.top/daily/admin/note/editnote/id/209.html [运行时间：0.062368s][吞吐率：16.03req/s] [内存消耗：2,067.78kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/updatenote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000521s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001306s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000571s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000887s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000322s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:52+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/209.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/209.html [运行时间：0.076271s][吞吐率：13.11req/s] [内存消耗：2,228.00kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '56493',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 基础
[TOC]
## Scanner
```
package basics;

import java.util.Scanner;

public class ScannerDemo {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int num = scan.nextInt();
		System.out.println("输入的整数是：" + num);
		
		float f = scan.nextFloat();
		System.out.println("输入的浮点数是：" + f);
		
//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:"\\r\\n",因为 nextInt 仅仅读取数字信息，而不会读取回车换行"\\r\\n".
//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串
		String str = scan.nextLine(); //读取回车换行
		String str2 = scan.nextLine(); //读取真正的字符串
		System.out.println("str1是：" + str);
		System.out.println("输入的字符串是：" + str2);
	}
}
```
## 匿名对象
### 1.1 使用方式
```
package study;

/**
 * 匿名对象
 * Created by CaptainQR on 2018/9/26.
 */
public class AnonymousObject {
    public static void main(String[] args) {
        new Car().age = 5;
        new Car().color = "blue";
        new Car().show();   //每一次 new 都是一个新的对象
    }
}

class Car{
    String color = "red";
    int age = 4;
    public void show(){
        System.out.println("Car color = " + this.color + ", Car age = " + this.age);
    }
}
```

---
~~Car color = red, Car age = 4~~

---

1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。

1. 可以将匿名对象作为实际参数进行传递。
`Show(new Car());`

## JAVA 的默认修饰符
### 1.default
只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。

## 多态
### 1. 简单应用
```
package study;

/**
 * 多态
 * Created by CaptainQR on 2018/9/26.
 */
public class Polymorphism {
    public static void main(String[] args) {
        function(new Cat());
        function(new Dog());
    }

    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象
        a.eat();
//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员
    }
}

/**
 * 抽象类
 */
abstract class Animale{
    abstract public void eat();
}

/**
 * 猫类 实现 抽象的 动物类
 */
class Cat extends Animale{
    public void eat() {
        System.out.println("Cat eat finish");
    }

    public void catMouse(){
        System.out.println("Cat catch mouse");
    }
}

/**
 * 狗类 实现 抽象的 动物类
 */
class Dog extends Animale{
    public void eat() {
        System.out.println("Dog eat bone");
    }

    public void seeHome(){
        System.out.println("Dog see Home");
    }
}
```
---
~~Cat eat finish
Dog eat bone~~

---
### 2.向上转型和向下转型
```
package study;

/**
 * 向上转型和向下转型
 * Created by CaptainQR on 2018/9/26.
 */
public class Transformation {
    public static void main(String[] args) {
        Animale2 a = new Cat2();    //向上转型
        a.eat();    //此时不能调用子类的特有方法
        Cat2 c = (Cat2)a;   //向下转型
        c.catchMouse(); //此时才能调用子类的特有方法
    }
}

abstract class Animale2{
    abstract public void eat();
}

class Cat2 extends Animale2{
    public void eat(){
        System.out.println("Cat eat finish");
    }
    public void catchMouse(){
        System.out.println("Cat cat mouse");
    }
}
```
---
~~Cat eat finish
Cat cat mouse~~

---
**千万不能出现这样的操作：就是将父类对象转成子类类型**

```
Animale a = new Animale();
Cat c = (Cat)a;
```
## 内部类
### 内部类的使用
#### 内部类的访问规则
1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）
2．外部类要访问内部类，必须建立内部类对象。

```
package basics;

import basics.Outer.StaticInner;

public class OutIn{
	public static void main(String[] args) {
		//外部类访问内部类
		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()
		Outer.Inner inner = new Outer().new Inner();
		inner.fun();
		
		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()
		StaticInner inner2 = new Outer.StaticInner();
		inner2.fun();
	}
}

class Outer {
	private static int x = 1;
	
	/**
	 * 非静态内部类
	 */
	class Inner{
		int x = 2;
		public void fun(){
			int x = 3;
			System.out.println(x);//内部类方法中的变量
			System.out.println(this.x);//内部类中的变量
			System.out.println(Outer.this.x);//外部类中的变量
		}
	}
	
	/**
	 * 静态内部类
	 */
	static class StaticInner{
		public void fun(){
			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。
			System.out.println("此为静态内部类方法" + x);
		}
	}
}
```
#### 访问格式
1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。
格式
```
外部类名.内部类名  变量名 = 外部类对象.内部类对象;
Outer.Inner in = new Outer().new Inner();
```
2．当内部类在成员位置上，就可以被成员修饰符所修饰。

比如：
- private：将内部类在外部类中进行封装。
- static:  内部类就具备static的特性。

当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。

>在外部其他类中，如何直接访问static内部类的非静态成员呢？

new Outer.Inner().function();
>在外部其他类中，如何直接访问static内部类的静态成员呢？

uter.Inner.function();

注意：
当内部类中定义了静态成员，该内部类必须是static的。
当外部类中的静态方法访问内部类时，内部类也必须是static的。

### 匿名内部类
匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类

有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。

#### 匿名内部类的格式
**new 父类或者接口(){定义子类的内容};**
```
Runnable r = new Runnable(){};

//多在 Android 中使用，例如监听方法的实现
new Demo(){	//匿名内部类
	public void show(){
		System.out.println("Inner show!");
	}
}.show();
```
#### 例子
```
package basics;

/**
 * 接口
 */
interface Inter{
	public void fun();
}

/**
 * 抽象方法
 */
abstract class Inter2{
	abstract public void fun();
}

class Test{
	//返回  Inter 对象
	public static Inter fun2(){
		return new Inter(){
			public void fun(){
				System.out.println("fun2 running!");
			}
		};
	}
	
	public static void fun3(){
		//对象.方法();
		new Inter2(){
			public void fun(){
				System.out.println("fun3 running!");
			}
		}.fun();
	}
}

public class AnonymousInnerClass {
	public static void main(String[] args) {
		//Test.fun2() 返回的是  Inter 对象，对象.方法
		Test.fun2().fun();
		
		Test.fun3();
	}
}
```
## 默认方法
默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。
```
package basics;

public interface Person {
	public void eat();
	
	//默认方法，有实现体
	default public void die(){
		System.out.println("Game Over!");
	}
}
```
Person 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default

>为什么会有默认方法

假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。

但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。

通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。

```
package basics;

public class DefaultFunction implements Person{

	@Override
	public void eat() {
		// TODO Auto-generated method stub
	}
	
	public static void main(String[] args) {
		//不需要做任何改动，直接得到这个默认方法
		new DefaultFunction().die();
	}
}
```
## 装箱和拆箱
### 封装类
所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。
### 自动装箱和自动拆箱
```
int i = 5;

//把一个基本类型的变量,转换为 Integer 对象
Integer it = new Integer(i);
//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱
Integer it2 = i;

//把一个 Integer 对象，转换为一个基本类型的 int
int i2 = it.intValue();
//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱
int i3 = it;
```
### Number 类
数字封装类有：Byte,Short,Integer,Long,Float,Double
这些类都是抽象类 Number 的子类
```
int i = 5;

Integer it = new Integer(i);
//Integer 是 Number 的子类，所以打印 true
System.out.println(it instanceof Number);
```
## Math
```
float f1 = 5.4f;

//四舍五入
System.out.println(Math.round(f1));

//得到一个 0-1 之间的随机浮点数（取不到1）
System.out.println(Math.random());

//得到一个 0-10 之间的随机整数 （取不到10）
System.out.println((int)( Math.random()*10));

//大于指定数据的最小整数
System.out.println(Math.ceil(f1));	//6.0

//小于指定数据的最大整数
System.out.println(Math.floor(f1));	//5.0

//开方
System.out.println(Math.sqrt(9));

//次方（2的4次方）
System.out.println(Math.pow(2,4));

//π
System.out.println(Math.PI);

//自然常数
System.out.println(Math.E);
```
## 格式控制
### 换行符和回车符
- 换行符就是另起一行 --- \'\\n\' 换行（newline）
- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）

在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。

然而在不同的操作系统，换行符是不一样的
- 在DOS和Windows中，每行结尾是 “\\r\\n”；
- Linux系统里，每行结尾只有 “\\n”；
- Mac系统里，每行结尾是只有 "\\r"。

为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。
### \\\\t 空格对齐
```
System.out.println("使用空格无法达到对齐的效果");
System.out.println("abc def");
System.out.println("ab def");
System.out.println("a def");

System.out.println("使用\\\\t制表符可以达到对齐的效果");
System.out.println("abc\\tdef");
System.out.println("ab\\tdef");
System.out.println("a\\tdef");
```
---
~~使用空格无法达到对齐的效果
abc def
ab def
a def
使用 \\t 制表符可以达到对齐的效果
abc	def
ab	def
a	def~~

---
## String
### 概述
字符串最大特点：一旦被初始化就不可以被改变。

String 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。
```
//s1 在内存中有一个对象
String s1 = "abc";
//s2 在内存中有两个对象
String s2 = new String("abc");
String s3 = "abc";

System.out.println(s1==s2);//false
System.out.println(s1==s3);//true
System.out.println(s1.equals(s2));//true
```

### 常见方法
#### 获取
```
String str = "aabcbcc";

//字符串的长度
System.out.println(str.length());

//根据位置获取位置上某个字符
System.out.println(str.charAt(1));

//===== 根据字符获取该字符在字符串中位置 =====
//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。
//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。
//如果没有找到，返回-1
System.out.println(str.indexOf(\'b\',3));
//可以用于对指定判断是否包含
if(str.indexOf("aa")!=-1)


//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变
System.out.println(str.lastIndexOf(\'b\'));
```
#### 判断
```
//判断文件名称是否是Array单词开头。
sop(str.startsWith("Array"));
//判断文件名称是否是.java的文件。
sop(str.endsWith(".java"));
//判断文件中是否包含Demo
sop(str.contains("Demo"));
```
- 字符串中是否包含某一个子串。
`boolean contains(str):`
特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。
所以，也可以用于对指定判断是否包含。
`if(str.indexOf("aa")!=-1)`

而且该方法既可以判断，又可以获取出现的位置。

- 字符中是否有内容。
`boolean isEmpty(): 原理就是判断长度是否为0. `
- 字符串是否是以指定内容开头。
`boolean startsWith(str);`
- 字符串是否是以指定内容结尾。
`boolean endsWith(str);`
- 判断字符串内容是否相同。复写了Object类中的equals方法。
`boolean equals(str);`
- 判断内容是否相同，并忽略大小写。
`boolean equalsIgnoreCase();`

#### 转换
```
public static void method_trans()
	{
		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};
		String s= new String(arr,1,3);//3是个数
		sop("s="+s);
		String s1 = "zxcvbnm";
		char[] chs = s1.toCharArray();
		for(int x=0; x<chs.length; x++)
		{
			sop("ch="+chs[x]);
		}
	}
```
- 将字符数组转成字符串。
构造函数：
```
String(char[])
String(char[],offset,count):将字符数组中的一部分转成字符串。
```
静态方法：
```
static String copyValueOf(char[]);
static String copyValueOf(char[] data, int offset, int count) 
static String valueOf(char[]):
```
- 将字符串转成字符数组。**
`char[] toCharArray():`

- 将字节数组转成字符串。
`String(byte[])`
`String(byte[],offset,count):将字节数组中的一部分转成字符串。`

- 将字符串转成字节数组。
`byte[]  getBytes():`

- 将基本数据类型转成字符串。
`static String valueOf(int)`
`static String valueOf(double)`
特殊：字符串和字节数组在转换过程中，是可以指定编码表的。
#### 替换
`String replace(oldchar,newchar);`
```
public static void method_replace()
	{
		String s = "hello java";
	 //String s1 = s.replace(\'q\',\'n\');
//如果要替换的字符不存在，返回的还是原串。
		String s1 = s.replace("java","world");
		sop("s="+s);
		sop("s1="+s1);
	}
```
#### 切割
`String[] split(regex);`
```
public static void  method_split()
	{
		String s = "zhagnsa,lisi,wangwu";

		String[] arr  = s.split(",");

		for(int x = 0; x<arr.length; x++)
		{
			sop(arr[x]);
		}
	}	
```
#### 子串（获取字符串中的一部分）
`String substring(begin);`
`String substring(begin,end);`
```
public static void method_sub()
	{
		String s = "abcdef";
		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。
		sop(s.substring(2,4)); 
 		//包含头，不包含尾。s.substring(0,s.length());
	}
```
#### 转换，去除空格，比较
- 将字符串转成大写或则小写。
`String toUpperCase();`
`String toLowerCase();`

- 将字符串两端的多个空格去除。
`String trim();`

- 对两个字符串进行自然顺序的比较。
`int compareTo(string);`
### StringBuffer
#### 特点
1. 长度是可变化的。
2. 可以直接操作多个数据类型。
3. 最终会通过 toString 方法变成字符串。
4. 是一个容器。

>为什么StringBuffer可以变长？

和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。

比如说new StringBuffer("the")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。

如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。

注： 19 这个数量，不同的JDK数量是不一样的
### StringBuilder
StringBuffer 是线程同步。
StringBuilder 是线程不同步。
建议使用 StringBuilder
#### 存储。
StringBuffer append():将指定数据作为参数添加到已有数据结尾处。
StringBuffer insert(index,数据):可以将数据插入到指定index位置。
### 删除。
StringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。
StringBuffer deleteCharAt(index):删除指定位置的字符。
### 获取。
char charAt(int index) 
int indexOf(String str) 
int lastIndexOf(String str) 
int length() 
String substring(int start, int end)  
### 修改。
StringBuffer replace(start,end,string);
void setCharAt(int index, char ch) ;
### 反转。
StringBuffer reverse(); 
### 将缓冲区中指定数据存储到指定字符数组中。
void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)
## Date
|字符|含义|
|-|
|y| 代表年|
|M| 代表月|
|d| 代表日|
|H| 代表24进制的小时|
|h| 代表12进制的小时|
|m| 代表分钟|
|s| 代表秒|
|S| 代表毫秒|

```
//时间原点
Date date = new Date(5000);
System.out.println(date);	//Thu Jan 01 08:00:05 CST 1970

//当前时间
Date dateNow = new Date();
System.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018

//时间格式化
SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
Date d= new Date();
String str = sdf.format(d);
System.out.println(str);	//2018-10-12 11:10:23
```
## Calendar
```
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateDemo {
	private static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	 
    public static void main(String[] args) {
    	//采用单例模式获取日历对象Calendar.getInstance();
        Calendar c = Calendar.getInstance();
        
        //通过日历对象得到日期对象
        Date now = c.getTime();
        
        //===== 当前日期 =====
        System.out.println("当前日期：\\t" + format(c.getTime()));
 
        //===== 下个月的今天 =====
        //set方法，直接设置年/月/日
        c.setTime(now);
        //add方法，在原日期上增加年/月/日
        c.add(Calendar.MONTH, 1);
        System.out.println("下个月的今天:\\t" +format(c.getTime()));
 
        //===== 去年的今天 =====
        c.setTime(now);
        c.add(Calendar.YEAR, -1);
        System.out.println("去年的今天:\\t" +format(c.getTime()));
 
        //===== 上个月的第三天 =====
        c.setTime(now);
        c.add(Calendar.MONTH, -1);
        c.set(Calendar.DATE, 3);
        System.out.println("上个月的第三天:\\t" +format(c.getTime()));
 
    }
 
    private static String format(Date time) {
        return sdf.format(time);
    }
}
```
## 异常
### finally
- finally中定义的通常是-->关闭资源代码,因为资源必须释放。
- finally只有一种情况不会执行。
当执行到System.exit(0); //系统退出 jvm 结束
fianlly不会执行。

### throw 和 throws 的区别
- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`
throw：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`
- throws：表示出现异常的一种可能性，并不一定会发生这些异常；
throw：执行 throw 则一定抛出了某个异常对象。
### 异常的分类
异常分类： 可查异常，运行时异常和错误 3 种。
- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。
- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。
- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。
### 自定义异常
**自定义异常必须继承 Exception**

>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。

```
package basics;

public class TestDemo {
    public static void main(String[] args) {
    	Demo d = new Demo();
    	try{
    		int x = d.div(4, -1);
    		System.out.println("除数为负数");
    	}catch(FuShuException e){
    		System.out.println(e.toString() + "\\t错误的负数："+e.GetNum());
    	}
    	System.out.println("Over!!!");
    }
}

/**
 * 自定义异常信息
 */
class FuShuException extends Exception{	//自定义异常必须继承 Exception
	private int num;
	FuShuException(String msg,int num){
		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。
		super(msg);
		this.num = num;
	}
	public int GetNum(){
		return num;
	}
}

class Demo{
	public int div(int a,int b)throws FuShuException{
		if(b<0)	{
			throw new FuShuException("异常信息，除负数啦！", b);
		}
		return a/b;
	}
}
```
---
~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1
Over!!!~~

---
### 异常在子父类中的覆盖
1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。
2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。
3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。
## 集合框架
### LinkedList
除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。

>1.添加

addFirst();
addLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会出现 NoSuchElementException 异常。
getFirst();
getLast();

获取元素，但是元素被删除。
如果集合中没有元素，会出现 NoSuchElementException 异常。
removeFirst();
removeLast();

---

在JDK1.6出现了替代方法。
>1.添加

offerFirst();
offerLast();
>2.获取

获取元素，但不删除元素。
如果集合中没有元素，会返回null。
peekFirst();
peekLast(); 

获取元素，但是元素被删除。
如果集合中没有元素，会返回null。
pollFirst();
pollLast();
















',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000555s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001694s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000651s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000363s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000903s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000300s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000354s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=209,`p_id`=2,`title`='Java SE - 基础\r',`content`='# Java SE - 基础\r\n[TOC]\r\n## Scanner\r\n```\r\npackage basics;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class ScannerDemo {\r\n	public static void main(String[] args) {\r\n		Scanner scan = new Scanner(System.in);\r\n		int num = scan.nextInt();\r\n		System.out.println(\"输入的整数是：\" + num);\r\n		\r\n		float f = scan.nextFloat();\r\n		System.out.println(\"输入的浮点数是：\" + f);\r\n		\r\n//		如果在通过nextInt()读取了整数后，再接着读取字符串，读出来的是回车换行:\"\\r\\n\",因为 nextInt 仅仅读取数字信息，而不会读取回车换行\"\\r\\n\".\r\n//		所以，如果在业务上需要读取了整数后，接着读取字符串，那么就应该连续执行两次 nextLine()，第一次是取走回车换行，第二次才是读取真正的字符串\r\n		String str = scan.nextLine(); //读取回车换行\r\n		String str2 = scan.nextLine(); //读取真正的字符串\r\n		System.out.println(\"str1是：\" + str);\r\n		System.out.println(\"输入的字符串是：\" + str2);\r\n	}\r\n}\r\n```\r\n## 匿名对象\r\n### 1.1 使用方式\r\n```\r\npackage study;\r\n\r\n/**\r\n * 匿名对象\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class AnonymousObject {\r\n    public static void main(String[] args) {\r\n        new Car().age = 5;\r\n        new Car().color = \"blue\";\r\n        new Car().show();   //每一次 new 都是一个新的对象\r\n    }\r\n}\r\n\r\nclass Car{\r\n    String color = \"red\";\r\n    int age = 4;\r\n    public void show(){\r\n        System.out.println(\"Car color = \" + this.color + \", Car age = \" + this.age);\r\n    }\r\n}\r\n```\r\n\r\n---\r\n~~Car color = red, Car age = 4~~\r\n\r\n---\r\n\r\n1. **当对对象的方法只调用一次时，可以用匿名对象来完成**，这样写比较简化。如果对一个对象进行多个成员调用，必须给这个对象起个名字。\r\n\r\n1. 可以将匿名对象作为实际参数进行传递。\r\n`Show(new Car());`\r\n\r\n## JAVA 的默认修饰符\r\n### 1.default\r\n只能由跟这个类在同一个包中的类来访问，比 private 限制更少，但比 protected 限制更多。\r\n\r\n## 多态\r\n### 1. 简单应用\r\n```\r\npackage study;\r\n\r\n/**\r\n * 多态\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Polymorphism {\r\n    public static void main(String[] args) {\r\n        function(new Cat());\r\n        function(new Dog());\r\n    }\r\n\r\n    public static void function(Animale a){ //Animale a = new Cat(); 向上转型,父类引用指向子类对象\r\n        a.eat();\r\n//        a.seeHome();    //没有为类型 Animale 定义 seeHome() 方法，只能使用父类的引用访问父类的成员\r\n    }\r\n}\r\n\r\n/**\r\n * 抽象类\r\n */\r\nabstract class Animale{\r\n    abstract public void eat();\r\n}\r\n\r\n/**\r\n * 猫类 实现 抽象的 动物类\r\n */\r\nclass Cat extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n\r\n    public void catMouse(){\r\n        System.out.println(\"Cat catch mouse\");\r\n    }\r\n}\r\n\r\n/**\r\n * 狗类 实现 抽象的 动物类\r\n */\r\nclass Dog extends Animale{\r\n    public void eat() {\r\n        System.out.println(\"Dog eat bone\");\r\n    }\r\n\r\n    public void seeHome(){\r\n        System.out.println(\"Dog see Home\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nDog eat bone~~\r\n\r\n---\r\n### 2.向上转型和向下转型\r\n```\r\npackage study;\r\n\r\n/**\r\n * 向上转型和向下转型\r\n * Created by CaptainQR on 2018/9/26.\r\n */\r\npublic class Transformation {\r\n    public static void main(String[] args) {\r\n        Animale2 a = new Cat2();    //向上转型\r\n        a.eat();    //此时不能调用子类的特有方法\r\n        Cat2 c = (Cat2)a;   //向下转型\r\n        c.catchMouse(); //此时才能调用子类的特有方法\r\n    }\r\n}\r\n\r\nabstract class Animale2{\r\n    abstract public void eat();\r\n}\r\n\r\nclass Cat2 extends Animale2{\r\n    public void eat(){\r\n        System.out.println(\"Cat eat finish\");\r\n    }\r\n    public void catchMouse(){\r\n        System.out.println(\"Cat cat mouse\");\r\n    }\r\n}\r\n```\r\n---\r\n~~Cat eat finish\r\nCat cat mouse~~\r\n\r\n---\r\n**千万不能出现这样的操作：就是将父类对象转成子类类型**\r\n\r\n```\r\nAnimale a = new Animale();\r\nCat c = (Cat)a;\r\n```\r\n## 内部类\r\n### 内部类的使用\r\n#### 内部类的访问规则\r\n1．内部类可以直接访问外部类中的成员，包括私有。之所以可以直接访问外部类中的成员，是因为内部类中默认持有了一个外部类的引用，（外部类名.this --> Outer.this.x ）\r\n2．外部类要访问内部类，必须建立内部类对象。\r\n\r\n```\r\npackage basics;\r\n\r\nimport basics.Outer.StaticInner;\r\n\r\npublic class OutIn{\r\n	public static void main(String[] args) {\r\n		//外部类访问内部类\r\n		//非静态内部类	外部类名.内部类名 变量名 = new 外部类().new 内部类()\r\n		Outer.Inner inner = new Outer().new Inner();\r\n		inner.fun();\r\n		\r\n		//静态内部类	内部类名 变量名 = new 外部类.静态内部类()\r\n		StaticInner inner2 = new Outer.StaticInner();\r\n		inner2.fun();\r\n	}\r\n}\r\n\r\nclass Outer {\r\n	private static int x = 1;\r\n	\r\n	/**\r\n	 * 非静态内部类\r\n	 */\r\n	class Inner{\r\n		int x = 2;\r\n		public void fun(){\r\n			int x = 3;\r\n			System.out.println(x);//内部类方法中的变量\r\n			System.out.println(this.x);//内部类中的变量\r\n			System.out.println(Outer.this.x);//外部类中的变量\r\n		}\r\n	}\r\n	\r\n	/**\r\n	 * 静态内部类\r\n	 */\r\n	static class StaticInner{\r\n		public void fun(){\r\n			//当内部类被 static 修饰后，只能直接访问外部类中的 static 成员,出现了访问局限。\r\n			System.out.println(\"此为静态内部类方法\" + x);\r\n		}\r\n	}\r\n}\r\n```\r\n#### 访问格式\r\n1．当内部类定义在外部类的成员位置上，而且非私有，可以在外部其他类中。可以直接建立内部类对象。\r\n格式\r\n```\r\n外部类名.内部类名  变量名 = 外部类对象.内部类对象;\r\nOuter.Inner in = new Outer().new Inner();\r\n```\r\n2．当内部类在成员位置上，就可以被成员修饰符所修饰。\r\n\r\n比如：\r\n- private：将内部类在外部类中进行封装。\r\n- static:  内部类就具备static的特性。\r\n\r\n当内部类被static修饰后，只能直接访问外部类中的static成员。出现了访问局限。\r\n\r\n>在外部其他类中，如何直接访问static内部类的非静态成员呢？\r\n\r\nnew Outer.Inner().function();\r\n>在外部其他类中，如何直接访问static内部类的静态成员呢？\r\n\r\nuter.Inner.function();\r\n\r\n注意：\r\n当内部类中定义了静态成员，该内部类必须是static的。\r\n当外部类中的静态方法访问内部类时，内部类也必须是static的。\r\n\r\n### 匿名内部类\r\n匿名类指的是**在声明一个类的同时实例化它**，使代码更加简洁精练。通常情况下，要使用一个接口或者抽象类，都必须创建一个子类\r\n\r\n有的时候，为了快速使用，直接实例化一个抽象类，并“当场”实现其抽象方法。既然实现了抽象方法，那么就是一个新的类，只是这个类，没有命名。这样的类，叫做匿名类。\r\n\r\n#### 匿名内部类的格式\r\n**new 父类或者接口(){定义子类的内容};**\r\n```\r\nRunnable r = new Runnable(){};\r\n\r\n//多在 Android 中使用，例如监听方法的实现\r\nnew Demo(){	//匿名内部类\r\n	public void show(){\r\n		System.out.println(\"Inner show!\");\r\n	}\r\n}.show();\r\n```\r\n#### 例子\r\n```\r\npackage basics;\r\n\r\n/**\r\n * 接口\r\n */\r\ninterface Inter{\r\n	public void fun();\r\n}\r\n\r\n/**\r\n * 抽象方法\r\n */\r\nabstract class Inter2{\r\n	abstract public void fun();\r\n}\r\n\r\nclass Test{\r\n	//返回  Inter 对象\r\n	public static Inter fun2(){\r\n		return new Inter(){\r\n			public void fun(){\r\n				System.out.println(\"fun2 running!\");\r\n			}\r\n		};\r\n	}\r\n	\r\n	public static void fun3(){\r\n		//对象.方法();\r\n		new Inter2(){\r\n			public void fun(){\r\n				System.out.println(\"fun3 running!\");\r\n			}\r\n		}.fun();\r\n	}\r\n}\r\n\r\npublic class AnonymousInnerClass {\r\n	public static void main(String[] args) {\r\n		//Test.fun2() 返回的是  Inter 对象，对象.方法\r\n		Test.fun2().fun();\r\n		\r\n		Test.fun3();\r\n	}\r\n}\r\n```\r\n## 默认方法\r\n默认方法是 JDK8 新特性，指的是接口也可以提供具体方法了，而不像以前，只能提供抽象方法。\r\n```\r\npackage basics;\r\n\r\npublic interface Person {\r\n	public void eat();\r\n	\r\n	//默认方法，有实现体\r\n	default public void die(){\r\n		System.out.println(\"Game Over!\");\r\n	}\r\n}\r\n```\r\nPerson 这个接口，增加了一个默认方法 die，这个方法有实现体，并且被声明为了 default\r\n\r\n>为什么会有默认方法\r\n\r\n假设没有默认方法这种机制，那么如果要为 Person 增加一个新的方法 die ,那么所有实现了 Person 接口的类，都需要做改动。\r\n\r\n但是引入了默认方法后，原来的类，不需要做任何改动，并且还能得到这个默认方法。\r\n\r\n通过这种手段，就能够很好的扩展新的类，并且做到不影响原来的类。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class DefaultFunction implements Person{\r\n\r\n	@Override\r\n	public void eat() {\r\n		// TODO Auto-generated method stub\r\n	}\r\n	\r\n	public static void main(String[] args) {\r\n		//不需要做任何改动，直接得到这个默认方法\r\n		new DefaultFunction().die();\r\n	}\r\n}\r\n```\r\n## 装箱和拆箱\r\n### 封装类\r\n所有的基本类型，都有对应的类类型，比如 int 对应的类是 Integer，这种类就叫做封装类。\r\n### 自动装箱和自动拆箱\r\n```\r\nint i = 5;\r\n\r\n//把一个基本类型的变量,转换为 Integer 对象\r\nInteger it = new Integer(i);\r\n//不需要调用构造方法，通过 = 符号自动把 基本类型 转换为 类类型 就叫装箱\r\nInteger it2 = i;\r\n\r\n//把一个 Integer 对象，转换为一个基本类型的 int\r\nint i2 = it.intValue();\r\n//不需要调用 Integer 的 intValue 方法，通过 = 就自动转换成 int 类型，就叫拆箱\r\nint i3 = it;\r\n```\r\n### Number 类\r\n数字封装类有：Byte,Short,Integer,Long,Float,Double\r\n这些类都是抽象类 Number 的子类\r\n```\r\nint i = 5;\r\n\r\nInteger it = new Integer(i);\r\n//Integer 是 Number 的子类，所以打印 true\r\nSystem.out.println(it instanceof Number);\r\n```\r\n## Math\r\n```\r\nfloat f1 = 5.4f;\r\n\r\n//四舍五入\r\nSystem.out.println(Math.round(f1));\r\n\r\n//得到一个 0-1 之间的随机浮点数（取不到1）\r\nSystem.out.println(Math.random());\r\n\r\n//得到一个 0-10 之间的随机整数 （取不到10）\r\nSystem.out.println((int)( Math.random()*10));\r\n\r\n//大于指定数据的最小整数\r\nSystem.out.println(Math.ceil(f1));	//6.0\r\n\r\n//小于指定数据的最大整数\r\nSystem.out.println(Math.floor(f1));	//5.0\r\n\r\n//开方\r\nSystem.out.println(Math.sqrt(9));\r\n\r\n//次方（2的4次方）\r\nSystem.out.println(Math.pow(2,4));\r\n\r\n//π\r\nSystem.out.println(Math.PI);\r\n\r\n//自然常数\r\nSystem.out.println(Math.E);\r\n```\r\n## 格式控制\r\n### 换行符和回车符\r\n- 换行符就是另起一行 --- \'\\n\' 换行（newline）\r\n- 回车符就是回到一行的开头 --- \'\\r\' 回车（return）\r\n\r\n在 eclipse 里敲一个回车，实际上是回车换行符，Java 是跨平台的编程语言，同样的代码，可以在不同的平台使用，比如 Windows,Linux,Mac。\r\n\r\n然而在不同的操作系统，换行符是不一样的\r\n- 在DOS和Windows中，每行结尾是 “\\r\\n”；\r\n- Linux系统里，每行结尾只有 “\\n”；\r\n- Mac系统里，每行结尾是只有 \"\\r\"。\r\n\r\n为了使得同一个 java 程序的换行符在所有的操作系统中都有一样的表现，使用 **%n**，就可以做到平台无关的换行。\r\n### \\\\t 空格对齐\r\n```\r\nSystem.out.println(\"使用空格无法达到对齐的效果\");\r\nSystem.out.println(\"abc def\");\r\nSystem.out.println(\"ab def\");\r\nSystem.out.println(\"a def\");\r\n\r\nSystem.out.println(\"使用\\\\t制表符可以达到对齐的效果\");\r\nSystem.out.println(\"abc\\tdef\");\r\nSystem.out.println(\"ab\\tdef\");\r\nSystem.out.println(\"a\\tdef\");\r\n```\r\n---\r\n~~使用空格无法达到对齐的效果\r\nabc def\r\nab def\r\na def\r\n使用 \\t 制表符可以达到对齐的效果\r\nabc	def\r\nab	def\r\na	def~~\r\n\r\n---\r\n## String\r\n### 概述\r\n字符串最大特点：一旦被初始化就不可以被改变。\r\n\r\nString 类复写了 Object 类中 equals 方法，该方法用于判断字符串是否相同。\r\n```\r\n//s1 在内存中有一个对象\r\nString s1 = \"abc\";\r\n//s2 在内存中有两个对象\r\nString s2 = new String(\"abc\");\r\nString s3 = \"abc\";\r\n\r\nSystem.out.println(s1==s2);//false\r\nSystem.out.println(s1==s3);//true\r\nSystem.out.println(s1.equals(s2));//true\r\n```\r\n\r\n### 常见方法\r\n#### 获取\r\n```\r\nString str = \"aabcbcc\";\r\n\r\n//字符串的长度\r\nSystem.out.println(str.length());\r\n\r\n//根据位置获取位置上某个字符\r\nSystem.out.println(str.charAt(1));\r\n\r\n//===== 根据字符获取该字符在字符串中位置 =====\r\n//int indexOf(int ch):返回的是ch在字符串中第一次出现的位置。\r\n//int indexOf(int ch, int fromIndex) :从fromIndex指定位置开始，获取ch在字符串中出现的位置。\r\n//如果没有找到，返回-1\r\nSystem.out.println(str.indexOf(\'b\',3));\r\n//可以用于对指定判断是否包含\r\nif(str.indexOf(\"aa\")!=-1)\r\n\r\n\r\n//int lastIndexOf(int ch) ：反向索引一个字符出现位置，角标并不会变\r\nSystem.out.println(str.lastIndexOf(\'b\'));\r\n```\r\n#### 判断\r\n```\r\n//判断文件名称是否是Array单词开头。\r\nsop(str.startsWith(\"Array\"));\r\n//判断文件名称是否是.java的文件。\r\nsop(str.endsWith(\".java\"));\r\n//判断文件中是否包含Demo\r\nsop(str.contains(\"Demo\"));\r\n```\r\n- 字符串中是否包含某一个子串。\r\n`boolean contains(str):`\r\n特殊之处：indexOf(str):可以索引str第一次出现位置，如果返回-1.表示该字符串中不存在str。\r\n所以，也可以用于对指定判断是否包含。\r\n`if(str.indexOf(\"aa\")!=-1)`\r\n\r\n而且该方法既可以判断，又可以获取出现的位置。\r\n\r\n- 字符中是否有内容。\r\n`boolean isEmpty(): 原理就是判断长度是否为0. `\r\n- 字符串是否是以指定内容开头。\r\n`boolean startsWith(str);`\r\n- 字符串是否是以指定内容结尾。\r\n`boolean endsWith(str);`\r\n- 判断字符串内容是否相同。复写了Object类中的equals方法。\r\n`boolean equals(str);`\r\n- 判断内容是否相同，并忽略大小写。\r\n`boolean equalsIgnoreCase();`\r\n\r\n#### 转换\r\n```\r\npublic static void method_trans()\r\n	{\r\n		char[] arr = {\'a\',\'b\',\'c\',\'d\',\'e\',\'f\'};\r\n		String s= new String(arr,1,3);//3是个数\r\n		sop(\"s=\"+s);\r\n		String s1 = \"zxcvbnm\";\r\n		char[] chs = s1.toCharArray();\r\n		for(int x=0; x<chs.length; x++)\r\n		{\r\n			sop(\"ch=\"+chs[x]);\r\n		}\r\n	}\r\n```\r\n- 将字符数组转成字符串。\r\n构造函数：\r\n```\r\nString(char[])\r\nString(char[],offset,count):将字符数组中的一部分转成字符串。\r\n```\r\n静态方法：\r\n```\r\nstatic String copyValueOf(char[]);\r\nstatic String copyValueOf(char[] data, int offset, int count) \r\nstatic String valueOf(char[]):\r\n```\r\n- 将字符串转成字符数组。**\r\n`char[] toCharArray():`\r\n\r\n- 将字节数组转成字符串。\r\n`String(byte[])`\r\n`String(byte[],offset,count):将字节数组中的一部分转成字符串。`\r\n\r\n- 将字符串转成字节数组。\r\n`byte[]  getBytes():`\r\n\r\n- 将基本数据类型转成字符串。\r\n`static String valueOf(int)`\r\n`static String valueOf(double)`\r\n特殊：字符串和字节数组在转换过程中，是可以指定编码表的。\r\n#### 替换\r\n`String replace(oldchar,newchar);`\r\n```\r\npublic static void method_replace()\r\n	{\r\n		String s = \"hello java\";\r\n	 //String s1 = s.replace(\'q\',\'n\');\r\n//如果要替换的字符不存在，返回的还是原串。\r\n		String s1 = s.replace(\"java\",\"world\");\r\n		sop(\"s=\"+s);\r\n		sop(\"s1=\"+s1);\r\n	}\r\n```\r\n#### 切割\r\n`String[] split(regex);`\r\n```\r\npublic static void  method_split()\r\n	{\r\n		String s = \"zhagnsa,lisi,wangwu\";\r\n\r\n		String[] arr  = s.split(\",\");\r\n\r\n		for(int x = 0; x<arr.length; x++)\r\n		{\r\n			sop(arr[x]);\r\n		}\r\n	}	\r\n```\r\n#### 子串（获取字符串中的一部分）\r\n`String substring(begin);`\r\n`String substring(begin,end);`\r\n```\r\npublic static void method_sub()\r\n	{\r\n		String s = \"abcdef\";\r\n		sop(s.substring(2));//从指定位置开始到结尾。如果角标不存在，会出现字符串角标越界异常。\r\n		sop(s.substring(2,4)); \r\n 		//包含头，不包含尾。s.substring(0,s.length());\r\n	}\r\n```\r\n#### 转换，去除空格，比较\r\n- 将字符串转成大写或则小写。\r\n`String toUpperCase();`\r\n`String toLowerCase();`\r\n\r\n- 将字符串两端的多个空格去除。\r\n`String trim();`\r\n\r\n- 对两个字符串进行自然顺序的比较。\r\n`int compareTo(string);`\r\n### StringBuffer\r\n#### 特点\r\n1. 长度是可变化的。\r\n2. 可以直接操作多个数据类型。\r\n3. 最终会通过 toString 方法变成字符串。\r\n4. 是一个容器。\r\n\r\n>为什么StringBuffer可以变长？\r\n\r\n和String内部是一个字符数组一样，StringBuffer 也维护了一个字符数组。 但是，这个字符数组，留有冗余长度。\r\n\r\n比如说new StringBuffer(\"the\")，其内部的字符数组的长度，是19，而不是3，这样调用插入和追加，在现成的数组的基础上就可以完成了。\r\n\r\n如果追加的长度超过了19，就会分配一个新的数组，长度比原来多一些，把原来的数据复制到新的数组中，看上去 数组长度就变长了。\r\n\r\n注： 19 这个数量，不同的JDK数量是不一样的\r\n### StringBuilder\r\nStringBuffer 是线程同步。\r\nStringBuilder 是线程不同步。\r\n建议使用 StringBuilder\r\n#### 存储。\r\nStringBuffer append():将指定数据作为参数添加到已有数据结尾处。\r\nStringBuffer insert(index,数据):可以将数据插入到指定index位置。\r\n### 删除。\r\nStringBuffer delete(start,end):删除缓冲区中的数据，包含start，不包含end。\r\nStringBuffer deleteCharAt(index):删除指定位置的字符。\r\n### 获取。\r\nchar charAt(int index) \r\nint indexOf(String str) \r\nint lastIndexOf(String str) \r\nint length() \r\nString substring(int start, int end)  \r\n### 修改。\r\nStringBuffer replace(start,end,string);\r\nvoid setCharAt(int index, char ch) ;\r\n### 反转。\r\nStringBuffer reverse(); \r\n### 将缓冲区中指定数据存储到指定字符数组中。\r\nvoid getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)\r\n## Date\r\n|字符|含义|\r\n|-|\r\n|y| 代表年|\r\n|M| 代表月|\r\n|d| 代表日|\r\n|H| 代表24进制的小时|\r\n|h| 代表12进制的小时|\r\n|m| 代表分钟|\r\n|s| 代表秒|\r\n|S| 代表毫秒|\r\n\r\n```\r\n//时间原点\r\nDate date = new Date(5000);\r\nSystem.out.println(date);	//Thu Jan 01 08:00:05 CST 1970\r\n\r\n//当前时间\r\nDate dateNow = new Date();\r\nSystem.out.println(dateNow);	//Fri Oct 12 11:10:23 CST 2018\r\n\r\n//时间格式化\r\nSimpleDateFormat sdf =new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\nDate d= new Date();\r\nString str = sdf.format(d);\r\nSystem.out.println(str);	//2018-10-12 11:10:23\r\n```\r\n## Calendar\r\n```\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n	private static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n	 \r\n    public static void main(String[] args) {\r\n    	//采用单例模式获取日历对象Calendar.getInstance();\r\n        Calendar c = Calendar.getInstance();\r\n        \r\n        //通过日历对象得到日期对象\r\n        Date now = c.getTime();\r\n        \r\n        //===== 当前日期 =====\r\n        System.out.println(\"当前日期：\\t\" + format(c.getTime()));\r\n \r\n        //===== 下个月的今天 =====\r\n        //set方法，直接设置年/月/日\r\n        c.setTime(now);\r\n        //add方法，在原日期上增加年/月/日\r\n        c.add(Calendar.MONTH, 1);\r\n        System.out.println(\"下个月的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 去年的今天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.YEAR, -1);\r\n        System.out.println(\"去年的今天:\\t\" +format(c.getTime()));\r\n \r\n        //===== 上个月的第三天 =====\r\n        c.setTime(now);\r\n        c.add(Calendar.MONTH, -1);\r\n        c.set(Calendar.DATE, 3);\r\n        System.out.println(\"上个月的第三天:\\t\" +format(c.getTime()));\r\n \r\n    }\r\n \r\n    private static String format(Date time) {\r\n        return sdf.format(time);\r\n    }\r\n}\r\n```\r\n## 异常\r\n### finally\r\n- finally中定义的通常是-->关闭资源代码,因为资源必须释放。\r\n- finally只有一种情况不会执行。\r\n当执行到System.exit(0); //系统退出 jvm 结束\r\nfianlly不会执行。\r\n\r\n### throw 和 throws 的区别\r\n- throws：使用在函数上，后面跟的是异常类，可以跟多个，用逗号隔开。`public void method() throws FileNotFoundException {}`\r\nthrow：使用在函数内，后面跟的是异常对象。`throw new FuShuException();`\r\n- throws：表示出现异常的一种可能性，并不一定会发生这些异常；\r\nthrow：执行 throw 则一定抛出了某个异常对象。\r\n### 异常的分类\r\n异常分类： 可查异常，运行时异常和错误 3 种。\r\n- 可查异常：即必须进行处理的异常，要么 try catch 住,要么往外抛，谁调用，谁处理，比如 `FileNotFoundException` 如果不处理，编译器，就不让你通过。\r\n- 运行时异常（RuntimeException）： 不是必须进行 try catch 的异常。在编写代码的时候，依然可以使用 try catch throws 进行处理，与可查异常不同之处在于，即便不进行 try catch ，也不会有编译错误。Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。\r\n在自定义异常时，如果该异常的发生，程序无法再继续进行运算，需要程序停下来，就让自定义异常继承 RuntimeException。\r\n- 错误（Error）：指的是系统级别的异常，通常是内存用光了，在默认设置下，一般 java 程序启动的时候，最大可以使用 16m 的内存。如不停的给 StringBuffer 追加字符，很快就把内存使用光了。抛出 OutOfMemoryError，与运行时异常一样，错误也是不要求强制捕捉的。\r\n### 自定义异常\r\n**自定义异常必须继承 Exception**\r\n\r\n>需求：在本程序中，对于除数是负数，视为是错误的是无法进行运算的。\r\n\r\n```\r\npackage basics;\r\n\r\npublic class TestDemo {\r\n    public static void main(String[] args) {\r\n    	Demo d = new Demo();\r\n    	try{\r\n    		int x = d.div(4, -1);\r\n    		System.out.println(\"除数为负数\");\r\n    	}catch(FuShuException e){\r\n    		System.out.println(e.toString() + \"\\t错误的负数：\"+e.GetNum());\r\n    	}\r\n    	System.out.println(\"Over!!!\");\r\n    }\r\n}\r\n\r\n/**\r\n * 自定义异常信息\r\n */\r\nclass FuShuException extends Exception{	//自定义异常必须继承 Exception\r\n	private int num;\r\n	FuShuException(String msg,int num){\r\n		//因为父类中已经把异常信息的操作都完成了，所以子类只要在构造时，将异常信息传递给父类通过 super 语句，那么就可以直接通过 getMessage 等方法获取自定义的异常信息。\r\n		super(msg);\r\n		this.num = num;\r\n	}\r\n	public int GetNum(){\r\n		return num;\r\n	}\r\n}\r\n\r\nclass Demo{\r\n	public int div(int a,int b)throws FuShuException{\r\n		if(b<0)	{\r\n			throw new FuShuException(\"异常信息，除负数啦！\", b);\r\n		}\r\n		return a/b;\r\n	}\r\n}\r\n```\r\n---\r\n~~basics.FuShuException: 异常信息，除负数啦！	错误的负数：-1\r\nOver!!!~~\r\n\r\n---\r\n### 异常在子父类中的覆盖\r\n1．子类在覆盖父类时，如果父类的方法抛出异常，那么子类的覆盖方法，只能抛出父类的异常或者该异常的子类。\r\n2．如果父类方法抛出多个异常，那么子类在覆盖该方法时，只能抛出父类异常的子集。\r\n3．如果父类或者接口的方法中没有异常抛出，那么子类在覆盖方法时，也不可以抛出异常。如果子类方法发生了异常，就必须要进行 try 处理。绝对不能抛。\r\n## 集合框架\r\n### LinkedList\r\n除了实现了 List 接口外，LinkedList 还实现了双向链表结构 Deque，可以很方便的在头尾插入删除数据。\r\n\r\n>1.添加\r\n\r\naddFirst();\r\naddLast();\r\n>2.获取\r\n\r\n获取元素，但不删除元素。\r\n如果集合中没有元素，会出现 NoSuchElementException 异常。\r\ngetFirst();\r\ngetLast();\r\n\r\n获取元素，但是元素被删除。\r\n如果集合中没有元素，会出现 NoSuchElementException 异常。\r\nremoveFirst();\r\nremoveLast();\r\n\r\n---\r\n\r\n在JDK1.6出现了替代方法。\r\n>1.添加\r\n\r\nofferFirst();\r\nofferLast();\r\n>2.获取\r\n\r\n获取元素，但不删除元素。\r\n如果集合中没有元素，会返回null。\r\npeekFirst();\r\npeekLast(); \r\n\r\n获取元素，但是元素被删除。\r\n如果集合中没有元素，会返回null。\r\npollFirst();\r\npollLast();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 209 [ RunTime:0.001092s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001233s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000327s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000932s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=6  WHERE  `groups` = 'Java' [ RunTime:0.000314s ]
---------------------------------------------------------------
[ 2018-10-15T21:33:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/209.html
[ info ] qingrang.top/daily/admin/note/shownote/id/209.html [运行时间：0.061740s][吞吐率：16.20req/s] [内存消耗：2,019.76kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/209.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '209',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000592s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001390s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 209 LIMIT 1 [ RunTime:0.000640s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001182s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000389s ]
---------------------------------------------------------------
[ 2018-10-15T21:34:01+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.119325s][吞吐率：8.38req/s] [内存消耗：2,195.02kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000667s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002119s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.003022s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.001016s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001704s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000572s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000789s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001693s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000482s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000713s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000469s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000596s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001831s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000405s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001869s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.001173s ]
---------------------------------------------------------------
[ 2018-10-15T21:34:05+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.053209s][吞吐率：18.79req/s] [内存消耗：2,020.46kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000521s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001399s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000331s ]
---------------------------------------------------------------
[ 2018-10-15T21:34:48+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.059741s][吞吐率：16.74req/s] [内存消耗：1,976.04kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '277',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Java',
  'content' => '# JavaSE - Lambda
',
  'test-editormd-html-code' => '<h1 id="h1-javase-lambda"><a name="JavaSE - Lambda" class="reference-link"></a><span class="header-link octicon octicon-link"></span>JavaSE - Lambda</h1>',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000588s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001395s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000368s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000320s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001059s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('JavaSE - Lambda\r' , '# JavaSE - Lambda\r\n' , 'Java' , 2 , '2018-10-15') [ RunTime:0.000503s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000990s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.000473s ]
---------------------------------------------------------------
[ 2018-10-15T21:34:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.077019s][吞吐率：12.98req/s] [内存消耗：2,193.63kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000511s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001561s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001464s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000438s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001569s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000347s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000456s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000889s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000389s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000383s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000393s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001236s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000232s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001355s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000620s ]
---------------------------------------------------------------
[ 2018-10-15T21:34:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/224.html
[ info ] qingrang.top/daily/admin/note/editnote/id/224.html [运行时间：0.060727s][吞吐率：16.47req/s] [内存消耗：2,027.65kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000437s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002196s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000439s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001120s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000424s ]
---------------------------------------------------------------
[ 2018-10-15T21:51:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/208.html
[ info ] qingrang.top/daily/admin/note/editnote/id/208.html [运行时间：0.062771s][吞吐率：15.93req/s] [内存消耗：2,029.51kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000660s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001542s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000579s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000863s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000399s ]
---------------------------------------------------------------
[ 2018-10-15T22:04:06+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/224.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/224.html [运行时间：0.070503s][吞吐率：14.18req/s] [内存消耗：2,060.50kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '3764',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/224.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# JavaSE - Lambda
>Java lambda 表达式的简单例子

```
// 1. 不需要参数,返回值为 5  
() -> 5  
  
// 2. 接收一个参数(数字类型),返回其2倍的值  
x -> 2 * x  
  
// 3. 接受2个参数(数字),并返回他们的差值  
(x, y) -> x – y  
  
// 4. 接收2个int型整数,返回他们的和  
(int x, int y) -> x + y  
  
// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)  
(String s) -> System.out.print(s)
```
>基本的 Lambda 例子

```
package test;

import java.util.Arrays;
import java.util.List;

/**
 * Created by CaptainQR on 2018/10/15.
 */
public class Demo {
	public static void main(String[] args) {
		String[] strArr = {"1", "2", "3"};

		List<String> list = Arrays.asList(strArr);

		//传统方式
		for (String lst:list){
			System.out.println(lst);
		}
		System.out.println("-------------");

		//使用 lambda 表达式以及函数操作(functional operation)
		list.forEach((lst)-> System.out.println(lst));
		System.out.println("-------------");

		//在 Java 8 中使用双冒号操作符(double colon operator)
		list.forEach(System.out::println);
		System.out.println("-------------");
	}
}
```
>从匿名类演变成 Lambda 表达式

```
// 1.1使用匿名内部类  
new Thread(new Runnable() {  
    @Override  
    public void run() {  
        System.out.println("Hello world !");  
    }  
}).start();  
  
// 1.2使用 lambda expression  
new Thread(() -> System.out.println("Hello world !")).start();  
  
// 2.1使用匿名内部类  
Runnable race1 = new Runnable() {  
    @Override  
    public void run() {  
        System.out.println("Hello world !");  
    }  
};  
  
// 2.2使用 lambda expression  
Runnable race2 = () -> System.out.println("Hello world !");  
   
// 直接调用 run 方法(没开新线程哦!)  
race1.run();  
race2.run();
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '0',
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000588s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001344s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000396s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000354s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000923s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000353s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000309s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=224,`p_id`=2,`title`='JavaSE - Lambda\r',`content`='# JavaSE - Lambda\r\n>Java lambda 表达式的简单例子\r\n\r\n```\r\n// 1. 不需要参数,返回值为 5  \r\n() -> 5  \r\n  \r\n// 2. 接收一个参数(数字类型),返回其2倍的值  \r\nx -> 2 * x  \r\n  \r\n// 3. 接受2个参数(数字),并返回他们的差值  \r\n(x, y) -> x – y  \r\n  \r\n// 4. 接收2个int型整数,返回他们的和  \r\n(int x, int y) -> x + y  \r\n  \r\n// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)  \r\n(String s) -> System.out.print(s)\r\n```\r\n>基本的 Lambda 例子\r\n\r\n```\r\npackage test;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n/**\r\n * Created by CaptainQR on 2018/10/15.\r\n */\r\npublic class Demo {\r\n	public static void main(String[] args) {\r\n		String[] strArr = {\"1\", \"2\", \"3\"};\r\n\r\n		List<String> list = Arrays.asList(strArr);\r\n\r\n		//传统方式\r\n		for (String lst:list){\r\n			System.out.println(lst);\r\n		}\r\n		System.out.println(\"-------------\");\r\n\r\n		//使用 lambda 表达式以及函数操作(functional operation)\r\n		list.forEach((lst)-> System.out.println(lst));\r\n		System.out.println(\"-------------\");\r\n\r\n		//在 Java 8 中使用双冒号操作符(double colon operator)\r\n		list.forEach(System.out::println);\r\n		System.out.println(\"-------------\");\r\n	}\r\n}\r\n```\r\n>从匿名类演变成 Lambda 表达式\r\n\r\n```\r\n// 1.1使用匿名内部类  \r\nnew Thread(new Runnable() {  \r\n    @Override  \r\n    public void run() {  \r\n        System.out.println(\"Hello world !\");  \r\n    }  \r\n}).start();  \r\n  \r\n// 1.2使用 lambda expression  \r\nnew Thread(() -> System.out.println(\"Hello world !\")).start();  \r\n  \r\n// 2.1使用匿名内部类  \r\nRunnable race1 = new Runnable() {  \r\n    @Override  \r\n    public void run() {  \r\n        System.out.println(\"Hello world !\");  \r\n    }  \r\n};  \r\n  \r\n// 2.2使用 lambda expression  \r\nRunnable race2 = () -> System.out.println(\"Hello world !\");  \r\n   \r\n// 直接调用 run 方法(没开新线程哦!)  \r\nrace1.run();  \r\nrace2.run();\r\n```',`groups`='Java',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 224 [ RunTime:0.000615s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001306s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001449s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.000354s ]
---------------------------------------------------------------
[ 2018-10-15T22:04:11+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/224.html
[ info ] qingrang.top/daily/admin/note/shownote/id/224.html [运行时间：0.060290s][吞吐率：16.59req/s] [内存消耗：1,981.61kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/224.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000485s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001445s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000396s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000912s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000290s ]
---------------------------------------------------------------
[ 2018-10-15T22:06:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/224.html
[ info ] qingrang.top/daily/admin/note/editnote/id/224.html [运行时间：0.081529s][吞吐率：12.27req/s] [内存消耗：2,029.25kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000675s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002058s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000709s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001571s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000379s ]
---------------------------------------------------------------
[ 2018-10-15T22:08:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/224.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/224.html [运行时间：0.079526s][吞吐率：12.57req/s] [内存消耗：2,061.76kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '4094',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/224.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# JavaSE - Lambda
>Java lambda 表达式的简单例子

```
// 1. 不需要参数,返回值为 5  
() -> 5  
  
// 2. 接收一个参数(数字类型),返回其2倍的值  
x -> 2 * x  
  
// 3. 接受2个参数(数字),并返回他们的差值  
(x, y) -> x – y  
  
// 4. 接收2个int型整数,返回他们的和  
(int x, int y) -> x + y  
  
// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)  
(String s) -> System.out.print(s)
```
>基本的 Lambda 例子

```
package test;

import java.util.Arrays;
import java.util.List;

/**
 * Created by CaptainQR on 2018/10/15.
 */
public class Demo {
	public static void main(String[] args) {
		String[] strArr = {"1", "2", "3"};

		List<String> list = Arrays.asList(strArr);

		//传统方式
		for (String lst:list){
			System.out.println(lst);
		}
		System.out.println("-------------");

		//使用 lambda 表达式以及函数操作(functional operation)
		list.forEach((lst)-> System.out.println(lst));
		System.out.println("-------------");

		//在 Java 8 中使用双冒号操作符(double colon operator)
		list.forEach(System.out::println);
		System.out.println("-------------");
	}
}
```
>从匿名类演变成 Lambda 表达式

```
// ================================================
new Thread(new Runnable() {  
    @Override  
    public void run() {  
        System.out.println("Hello world !");  
    }  
}).start();  
------------------------
new Thread(() -> System.out.println("Hello world !")).start();  
  
// ================================================
Runnable race1 = new Runnable() {  
    @Override  
    public void run() {  
        System.out.println("Hello world !");  
    }  
};  
------------------------
Runnable race2 = () -> System.out.println("Hello world !");  

//================================================
HeroChecker c1 = new HeroChecker() {
    public boolean test(Hero h) {
        return (h.hp>100 && h.damage<50);
    }
};
------------------------
HeroChecker c4 = h ->h.hp>100 && h.damage<50;
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '0',
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000761s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001624s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000493s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000378s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001147s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000381s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000347s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=224,`p_id`=2,`title`='JavaSE - Lambda\r',`content`='# JavaSE - Lambda\r\n>Java lambda 表达式的简单例子\r\n\r\n```\r\n// 1. 不需要参数,返回值为 5  \r\n() -> 5  \r\n  \r\n// 2. 接收一个参数(数字类型),返回其2倍的值  \r\nx -> 2 * x  \r\n  \r\n// 3. 接受2个参数(数字),并返回他们的差值  \r\n(x, y) -> x – y  \r\n  \r\n// 4. 接收2个int型整数,返回他们的和  \r\n(int x, int y) -> x + y  \r\n  \r\n// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)  \r\n(String s) -> System.out.print(s)\r\n```\r\n>基本的 Lambda 例子\r\n\r\n```\r\npackage test;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n/**\r\n * Created by CaptainQR on 2018/10/15.\r\n */\r\npublic class Demo {\r\n	public static void main(String[] args) {\r\n		String[] strArr = {\"1\", \"2\", \"3\"};\r\n\r\n		List<String> list = Arrays.asList(strArr);\r\n\r\n		//传统方式\r\n		for (String lst:list){\r\n			System.out.println(lst);\r\n		}\r\n		System.out.println(\"-------------\");\r\n\r\n		//使用 lambda 表达式以及函数操作(functional operation)\r\n		list.forEach((lst)-> System.out.println(lst));\r\n		System.out.println(\"-------------\");\r\n\r\n		//在 Java 8 中使用双冒号操作符(double colon operator)\r\n		list.forEach(System.out::println);\r\n		System.out.println(\"-------------\");\r\n	}\r\n}\r\n```\r\n>从匿名类演变成 Lambda 表达式\r\n\r\n```\r\n// ================================================\r\nnew Thread(new Runnable() {  \r\n    @Override  \r\n    public void run() {  \r\n        System.out.println(\"Hello world !\");  \r\n    }  \r\n}).start();  \r\n------------------------\r\nnew Thread(() -> System.out.println(\"Hello world !\")).start();  \r\n  \r\n// ================================================\r\nRunnable race1 = new Runnable() {  \r\n    @Override  \r\n    public void run() {  \r\n        System.out.println(\"Hello world !\");  \r\n    }  \r\n};  \r\n------------------------\r\nRunnable race2 = () -> System.out.println(\"Hello world !\");  \r\n\r\n//================================================\r\nHeroChecker c1 = new HeroChecker() {\r\n    public boolean test(Hero h) {\r\n        return (h.hp>100 && h.damage<50);\r\n    }\r\n};\r\n------------------------\r\nHeroChecker c4 = h ->h.hp>100 && h.damage<50;\r\n```',`groups`='Java',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 224 [ RunTime:0.000654s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001677s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.000595s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001199s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.000493s ]
---------------------------------------------------------------
[ 2018-10-15T22:08:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/224.html
[ info ] qingrang.top/daily/admin/note/shownote/id/224.html [运行时间：0.057855s][吞吐率：17.28req/s] [内存消耗：1,981.78kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/224.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000550s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001737s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000495s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000980s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000276s ]
---------------------------------------------------------------
[ 2018-10-15T22:09:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/224.html
[ info ] qingrang.top/daily/admin/note/editnote/id/224.html [运行时间：0.056555s][吞吐率：17.68req/s] [内存消耗：2,029.41kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000478s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001355s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000390s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000873s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000341s ]
---------------------------------------------------------------
[ 2018-10-15T22:09:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/224.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/224.html [运行时间：0.083213s][吞吐率：12.02req/s] [内存消耗：2,061.71kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '4094',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/224.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# JavaSE - Lambda
>Java lambda 表达式的简单例子

```
// 1. 不需要参数,返回值为 5  
() -> 5  
  
// 2. 接收一个参数(数字类型),返回其2倍的值  
x -> 2 * x  
  
// 3. 接受2个参数(数字),并返回他们的差值  
(x, y) -> x – y  
  
// 4. 接收2个int型整数,返回他们的和  
(int x, int y) -> x + y  
  
// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)  
(String s) -> System.out.print(s)
```
>基本的 Lambda 例子

```
package test;

import java.util.Arrays;
import java.util.List;

/**
 * Created by CaptainQR on 2018/10/15.
 */
public class Demo {
	public static void main(String[] args) {
		String[] strArr = {"1", "2", "3"};

		List<String> list = Arrays.asList(strArr);

		//传统方式
		for (String lst:list){
			System.out.println(lst);
		}
		System.out.println("-------------");

		//使用 lambda 表达式以及函数操作(functional operation)
		list.forEach((lst)-> System.out.println(lst));
		System.out.println("-------------");

		//在 Java 8 中使用双冒号操作符(double colon operator)
		list.forEach(System.out::println);
		System.out.println("-------------");
	}
}
```
>从匿名类演变成 Lambda 表达式

```
// ================================================
new Thread(new Runnable() {  
    @Override  
    public void run() {  
        System.out.println("Hello world !");  
    }  
}).start();  
------------------------
new Thread(() -> System.out.println("Hello world !")).start();  
  
// ================================================
Runnable race1 = new Runnable() {  
    @Override  
    public void run() {  
        System.out.println("Hello world !");  
    }  
};  
------------------------
Runnable race2 = () -> System.out.println("Hello world !");  

//================================================
HeroChecker c1 = new HeroChecker() {
    public boolean test(Hero h) {
        return (h.hp>100 && h.damage<50);
    }
};
------------------------
HeroChecker c4 = h ->h.hp>100 && h.damage<50;
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000489s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001351s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000410s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000332s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000941s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000288s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000278s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=224,`p_id`=2,`title`='JavaSE - Lambda\r',`content`='# JavaSE - Lambda\r\n>Java lambda 表达式的简单例子\r\n\r\n```\r\n// 1. 不需要参数,返回值为 5  \r\n() -> 5  \r\n  \r\n// 2. 接收一个参数(数字类型),返回其2倍的值  \r\nx -> 2 * x  \r\n  \r\n// 3. 接受2个参数(数字),并返回他们的差值  \r\n(x, y) -> x – y  \r\n  \r\n// 4. 接收2个int型整数,返回他们的和  \r\n(int x, int y) -> x + y  \r\n  \r\n// 5. 接受一个 string 对象,并在控制台打印,不返回任何值(看起来像是返回void)  \r\n(String s) -> System.out.print(s)\r\n```\r\n>基本的 Lambda 例子\r\n\r\n```\r\npackage test;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n/**\r\n * Created by CaptainQR on 2018/10/15.\r\n */\r\npublic class Demo {\r\n	public static void main(String[] args) {\r\n		String[] strArr = {\"1\", \"2\", \"3\"};\r\n\r\n		List<String> list = Arrays.asList(strArr);\r\n\r\n		//传统方式\r\n		for (String lst:list){\r\n			System.out.println(lst);\r\n		}\r\n		System.out.println(\"-------------\");\r\n\r\n		//使用 lambda 表达式以及函数操作(functional operation)\r\n		list.forEach((lst)-> System.out.println(lst));\r\n		System.out.println(\"-------------\");\r\n\r\n		//在 Java 8 中使用双冒号操作符(double colon operator)\r\n		list.forEach(System.out::println);\r\n		System.out.println(\"-------------\");\r\n	}\r\n}\r\n```\r\n>从匿名类演变成 Lambda 表达式\r\n\r\n```\r\n// ================================================\r\nnew Thread(new Runnable() {  \r\n    @Override  \r\n    public void run() {  \r\n        System.out.println(\"Hello world !\");  \r\n    }  \r\n}).start();  \r\n------------------------\r\nnew Thread(() -> System.out.println(\"Hello world !\")).start();  \r\n  \r\n// ================================================\r\nRunnable race1 = new Runnable() {  \r\n    @Override  \r\n    public void run() {  \r\n        System.out.println(\"Hello world !\");  \r\n    }  \r\n};  \r\n------------------------\r\nRunnable race2 = () -> System.out.println(\"Hello world !\");  \r\n\r\n//================================================\r\nHeroChecker c1 = new HeroChecker() {\r\n    public boolean test(Hero h) {\r\n        return (h.hp>100 && h.damage<50);\r\n    }\r\n};\r\n------------------------\r\nHeroChecker c4 = h ->h.hp>100 && h.damage<50;\r\n```',`groups`='Java',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 224 [ RunTime:0.000592s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001178s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.000539s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000894s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=7  WHERE  `groups` = 'Java' [ RunTime:0.019306s ]
---------------------------------------------------------------
[ 2018-10-15T22:09:19+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/224.html
[ info ] qingrang.top/daily/admin/note/shownote/id/224.html [运行时间：0.054994s][吞吐率：18.18req/s] [内存消耗：1,981.78kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/224.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '224',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000566s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002664s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 224 LIMIT 1 [ RunTime:0.000509s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000336s ]
---------------------------------------------------------------
[ 2018-10-15T22:09:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.067701s][吞吐率：14.77req/s] [内存消耗：2,195.68kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000615s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001378s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001558s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000413s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000860s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000441s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000877s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000433s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000280s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000354s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000979s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000226s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000939s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000579s ]
---------------------------------------------------------------
[ 2018-10-15T22:10:46+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.062362s][吞吐率：16.04req/s] [内存消耗：2,020.46kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000597s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001501s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000325s ]
---------------------------------------------------------------
[ 2018-10-15T22:11:56+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/208.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/208.html [运行时间：0.091494s][吞吐率：10.93req/s] [内存消耗：2,061.20kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '4075',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/208.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Code 自定义快捷键
[TOC]
## 主流自定义
### 行操作
|含义|按键|
|-|-|
|删除行|Ctrl + d|
|向下复制行|Ctrl + b|
|移动行|Alt + Up/Down|
|上开新行|Ctrl + up|
|下开新行|Ctrl + down|
### 注释
>行注释

Ctrl + /

>块注释

Ctrl + Shift + /
### 其他常用操作
>提示

alt + /

>添加getter、setter方法

alt + insert

>替换文本

Ctrl + R

>自动排版

ctrl + alt + l
## Sublime Text 3
https://blog.csdn.net/u010994304/article/details/50866634

// Ctrl+Enter
// 插入行后

// Ctrl+Shift Enter
// 插入行前

// Shift+Tab
// 去除缩进

// Tab
// 缩进

// Ctrl+KK
// 从光标处删除至行尾
```
[
	// 删除当前行
	{ "keys": ["ctrl+d"], "command":"run_macro_file", "args": {"file":"Packages/Default/Delete Line.sublime-macro"} },
	
	// 与上行互换
	{ "keys": ["alt+up"], "command":"swap_line_up" },
	// 与下行互换
	{ "keys": ["alt+down"], "command":"swap_line_down" },

	// 向下复制行
	{ "keys": ["ctrl+alt+down"], "command":"duplicate_line" },
	
	// 自动提示、补全
	{ "keys": ["alt+/"], "command":"auto_complete" },
	{ "keys": ["alt+/"], "command":"replace_completion_with_auto_complete", "context":
	[
	{ "key": "last_command", "operator":"equal", "operand": "insert_best_completion" },
	{ "key": "auto_complete_visible", "operator":"equal", "operand": false },
	{ "key": "setting.tab_completion", "operator":"equal", "operand": true }
	]
	},

	//移动光标到行首或行末
	{ "keys": ["alt+b"], "command":"move_to", "args": {"to": "bol","extend": false} },
	{ "keys": ["alt+e"], "command":"move_to", "args": {"to": "eol","extend": false} },
	//移动光标到行首或行末并选择内容
	{ "keys": ["shift+alt+b"], "command":"move_to", "args": {"to": "bol","extend": true} },
	{ "keys": ["shift+alt+e"], "command":"move_to", "args": {"to": "eol","extend": true} },

]
```',
  'groups' => 'Basics',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000864s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001931s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000686s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000357s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001736s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000509s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000752s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=208,`p_id`=2,`title`='Code 自定义快捷键\r',`content`='# Code 自定义快捷键\r\n[TOC]\r\n## 主流自定义\r\n### 行操作\r\n|含义|按键|\r\n|-|-|\r\n|删除行|Ctrl + d|\r\n|向下复制行|Ctrl + b|\r\n|移动行|Alt + Up/Down|\r\n|上开新行|Ctrl + up|\r\n|下开新行|Ctrl + down|\r\n### 注释\r\n>行注释\r\n\r\nCtrl + /\r\n\r\n>块注释\r\n\r\nCtrl + Shift + /\r\n### 其他常用操作\r\n>提示\r\n\r\nalt + /\r\n\r\n>添加getter、setter方法\r\n\r\nalt + insert\r\n\r\n>替换文本\r\n\r\nCtrl + R\r\n\r\n>自动排版\r\n\r\nctrl + alt + l\r\n## Sublime Text 3\r\nhttps://blog.csdn.net/u010994304/article/details/50866634\r\n\r\n// Ctrl+Enter\r\n// 插入行后\r\n\r\n// Ctrl+Shift Enter\r\n// 插入行前\r\n\r\n// Shift+Tab\r\n// 去除缩进\r\n\r\n// Tab\r\n// 缩进\r\n\r\n// Ctrl+KK\r\n// 从光标处删除至行尾\r\n```\r\n[\r\n	// 删除当前行\r\n	{ \"keys\": [\"ctrl+d\"], \"command\":\"run_macro_file\", \"args\": {\"file\":\"Packages/Default/Delete Line.sublime-macro\"} },\r\n	\r\n	// 与上行互换\r\n	{ \"keys\": [\"alt+up\"], \"command\":\"swap_line_up\" },\r\n	// 与下行互换\r\n	{ \"keys\": [\"alt+down\"], \"command\":\"swap_line_down\" },\r\n\r\n	// 向下复制行\r\n	{ \"keys\": [\"ctrl+alt+down\"], \"command\":\"duplicate_line\" },\r\n	\r\n	// 自动提示、补全\r\n	{ \"keys\": [\"alt+/\"], \"command\":\"auto_complete\" },\r\n	{ \"keys\": [\"alt+/\"], \"command\":\"replace_completion_with_auto_complete\", \"context\":\r\n	[\r\n	{ \"key\": \"last_command\", \"operator\":\"equal\", \"operand\": \"insert_best_completion\" },\r\n	{ \"key\": \"auto_complete_visible\", \"operator\":\"equal\", \"operand\": false },\r\n	{ \"key\": \"setting.tab_completion\", \"operator\":\"equal\", \"operand\": true }\r\n	]\r\n	},\r\n\r\n	//移动光标到行首或行末\r\n	{ \"keys\": [\"alt+b\"], \"command\":\"move_to\", \"args\": {\"to\": \"bol\",\"extend\": false} },\r\n	{ \"keys\": [\"alt+e\"], \"command\":\"move_to\", \"args\": {\"to\": \"eol\",\"extend\": false} },\r\n	//移动光标到行首或行末并选择内容\r\n	{ \"keys\": [\"shift+alt+b\"], \"command\":\"move_to\", \"args\": {\"to\": \"bol\",\"extend\": true} },\r\n	{ \"keys\": [\"shift+alt+e\"], \"command\":\"move_to\", \"args\": {\"to\": \"eol\",\"extend\": true} },\r\n\r\n]\r\n```',`groups`='Basics',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 208 [ RunTime:0.000819s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.001241s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Basics' [ RunTime:0.000612s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.001460s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Basics' [ RunTime:0.000461s ]
---------------------------------------------------------------
[ 2018-10-15T22:11:56+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/208.html
[ info ] qingrang.top/daily/admin/note/shownote/id/208.html [运行时间：0.092010s][吞吐率：10.87req/s] [内存消耗：1,981.60kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/208.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000512s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001382s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000455s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000953s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000407s ]
---------------------------------------------------------------
[ 2018-10-15T22:12:32+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/208.html
[ info ] qingrang.top/daily/admin/note/editnote/id/208.html [运行时间：0.095469s][吞吐率：10.47req/s] [内存消耗：2,029.23kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000685s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001879s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000566s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001259s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000372s ]
---------------------------------------------------------------
[ 2018-10-15T22:13:20+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/208.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/208.html [运行时间：0.067057s][吞吐率：14.91req/s] [内存消耗：2,061.28kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '4089',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/208.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Code 自定义快捷键
[TOC]
## 主流自定义
### 行操作
|含义|按键|
|-|-|
|删除行|Ctrl + d|
|向下复制行|Ctrl + b|
|移动行|Alt + Up/Down|
|上开新行|Ctrl + shift + enter|
|下开新行|Ctrl + enter|
### 注释
>行注释

Ctrl + /

>块注释

Ctrl + Shift + /
### 其他常用操作
>提示

alt + /

>添加getter、setter方法

alt + insert

>替换文本

Ctrl + R

>自动排版

ctrl + alt + l
## Sublime Text 3
https://blog.csdn.net/u010994304/article/details/50866634

// Ctrl+Enter
// 插入行后

// Ctrl+Shift Enter
// 插入行前

// Shift+Tab
// 去除缩进

// Tab
// 缩进

// Ctrl+KK
// 从光标处删除至行尾
```
[
	// 删除当前行
	{ "keys": ["ctrl+d"], "command":"run_macro_file", "args": {"file":"Packages/Default/Delete Line.sublime-macro"} },
	
	// 与上行互换
	{ "keys": ["alt+up"], "command":"swap_line_up" },
	// 与下行互换
	{ "keys": ["alt+down"], "command":"swap_line_down" },

	// 向下复制行
	{ "keys": ["ctrl+alt+down"], "command":"duplicate_line" },
	
	// 自动提示、补全
	{ "keys": ["alt+/"], "command":"auto_complete" },
	{ "keys": ["alt+/"], "command":"replace_completion_with_auto_complete", "context":
	[
	{ "key": "last_command", "operator":"equal", "operand": "insert_best_completion" },
	{ "key": "auto_complete_visible", "operator":"equal", "operand": false },
	{ "key": "setting.tab_completion", "operator":"equal", "operand": true }
	]
	},

	//移动光标到行首或行末
	{ "keys": ["alt+b"], "command":"move_to", "args": {"to": "bol","extend": false} },
	{ "keys": ["alt+e"], "command":"move_to", "args": {"to": "eol","extend": false} },
	//移动光标到行首或行末并选择内容
	{ "keys": ["shift+alt+b"], "command":"move_to", "args": {"to": "bol","extend": true} },
	{ "keys": ["shift+alt+e"], "command":"move_to", "args": {"to": "eol","extend": true} },

]
```',
  'groups' => 'Basics',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000494s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001661s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000463s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000418s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001557s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000321s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=208,`p_id`=2,`title`='Code 自定义快捷键\r',`content`='# Code 自定义快捷键\r\n[TOC]\r\n## 主流自定义\r\n### 行操作\r\n|含义|按键|\r\n|-|-|\r\n|删除行|Ctrl + d|\r\n|向下复制行|Ctrl + b|\r\n|移动行|Alt + Up/Down|\r\n|上开新行|Ctrl + shift + enter|\r\n|下开新行|Ctrl + enter|\r\n### 注释\r\n>行注释\r\n\r\nCtrl + /\r\n\r\n>块注释\r\n\r\nCtrl + Shift + /\r\n### 其他常用操作\r\n>提示\r\n\r\nalt + /\r\n\r\n>添加getter、setter方法\r\n\r\nalt + insert\r\n\r\n>替换文本\r\n\r\nCtrl + R\r\n\r\n>自动排版\r\n\r\nctrl + alt + l\r\n## Sublime Text 3\r\nhttps://blog.csdn.net/u010994304/article/details/50866634\r\n\r\n// Ctrl+Enter\r\n// 插入行后\r\n\r\n// Ctrl+Shift Enter\r\n// 插入行前\r\n\r\n// Shift+Tab\r\n// 去除缩进\r\n\r\n// Tab\r\n// 缩进\r\n\r\n// Ctrl+KK\r\n// 从光标处删除至行尾\r\n```\r\n[\r\n	// 删除当前行\r\n	{ \"keys\": [\"ctrl+d\"], \"command\":\"run_macro_file\", \"args\": {\"file\":\"Packages/Default/Delete Line.sublime-macro\"} },\r\n	\r\n	// 与上行互换\r\n	{ \"keys\": [\"alt+up\"], \"command\":\"swap_line_up\" },\r\n	// 与下行互换\r\n	{ \"keys\": [\"alt+down\"], \"command\":\"swap_line_down\" },\r\n\r\n	// 向下复制行\r\n	{ \"keys\": [\"ctrl+alt+down\"], \"command\":\"duplicate_line\" },\r\n	\r\n	// 自动提示、补全\r\n	{ \"keys\": [\"alt+/\"], \"command\":\"auto_complete\" },\r\n	{ \"keys\": [\"alt+/\"], \"command\":\"replace_completion_with_auto_complete\", \"context\":\r\n	[\r\n	{ \"key\": \"last_command\", \"operator\":\"equal\", \"operand\": \"insert_best_completion\" },\r\n	{ \"key\": \"auto_complete_visible\", \"operator\":\"equal\", \"operand\": false },\r\n	{ \"key\": \"setting.tab_completion\", \"operator\":\"equal\", \"operand\": true }\r\n	]\r\n	},\r\n\r\n	//移动光标到行首或行末\r\n	{ \"keys\": [\"alt+b\"], \"command\":\"move_to\", \"args\": {\"to\": \"bol\",\"extend\": false} },\r\n	{ \"keys\": [\"alt+e\"], \"command\":\"move_to\", \"args\": {\"to\": \"eol\",\"extend\": false} },\r\n	//移动光标到行首或行末并选择内容\r\n	{ \"keys\": [\"shift+alt+b\"], \"command\":\"move_to\", \"args\": {\"to\": \"bol\",\"extend\": true} },\r\n	{ \"keys\": [\"shift+alt+e\"], \"command\":\"move_to\", \"args\": {\"to\": \"eol\",\"extend\": true} },\r\n\r\n]\r\n```',`groups`='Basics',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 208 [ RunTime:0.000624s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.001127s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Basics' [ RunTime:0.000368s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000930s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Basics' [ RunTime:0.000371s ]
---------------------------------------------------------------
[ 2018-10-15T22:13:21+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/208.html
[ info ] qingrang.top/daily/admin/note/shownote/id/208.html [运行时间：0.068449s][吞吐率：14.61req/s] [内存消耗：1,981.62kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/208.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'PHPSESSID=8lb06qrvmf7isnpmv3hg05hpf1',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '208',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000596s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001478s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 208 LIMIT 1 [ RunTime:0.000443s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000983s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000293s ]
