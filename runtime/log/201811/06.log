---------------------------------------------------------------
[ 2018-11-06T17:46:00+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/119.html
[ info ] qingrang.top/daily/admin/note/shownote/id/119.html [运行时间：0.052000s][吞吐率：19.23req/s] [内存消耗：1,984.66kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/119',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '119',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000489s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001418s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 119 LIMIT 1 [ RunTime:0.000428s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000969s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000353s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/124
[ info ] qingrang.top/daily/admin/note/editnote/id/124 [运行时间：0.054881s][吞吐率：18.22req/s] [内存消耗：2,028.61kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '124',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000490s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001260s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 124 LIMIT 1 [ RunTime:0.000410s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000928s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000297s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:15+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/124.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/124.html [运行时间：0.063769s][吞吐率：15.68req/s] [内存消耗：2,056.70kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '3153',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/124',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 海街日记
>临海的古都镰仓，四季移动变化的光影，火车经过小镇，梅雨落在石阶上，樱花盛雪，仲夏烟火，细海沙滩。

>梅子酒、沙丁鱼、炸鱼定食、小鱼面包。

>家中的柱子上还刻画着成长的身高标记，烟火红光中映照着青春明媚的脸庞，樱花隧道中留着你乘着单车飞快行经时的笑颜，还有那个小镇日积月累的“生活点滴”串起来的故事 。

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/3D0hdB69ba.png)
*流光如诗，岁月如歌，温柔隽永，平淡静好。*

1. 日子一天天过去，生活一天天继续。

1. 食物是最牢固的生理记忆，映照的却是四姐妹的童年时光，哪位长辈是最亲密的陪伴。父母的饮食习惯原来是我们除了血脉之外，埋置在味蕾处的情感联系。

1. 如果在告别这个世界的时候，还能有感受美好的能力，那也是一件美好的事情吧。

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/3e5LhcKC8a.jpg)
*善良坚定的普通人往往有着超过神明的力量*',
  'groups' => 'FilmReview',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '124',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000515s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001419s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 124 LIMIT 1 [ RunTime:0.000430s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 124 LIMIT 1 [ RunTime:0.000314s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000894s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000324s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000269s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000376s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=124,`p_id`=20,`title`='海街日记\r',`content`='# 海街日记\r\n>临海的古都镰仓，四季移动变化的光影，火车经过小镇，梅雨落在石阶上，樱花盛雪，仲夏烟火，细海沙滩。\r\n\r\n>梅子酒、沙丁鱼、炸鱼定食、小鱼面包。\r\n\r\n>家中的柱子上还刻画着成长的身高标记，烟火红光中映照着青春明媚的脸庞，樱花隧道中留着你乘着单车飞快行经时的笑颜，还有那个小镇日积月累的“生活点滴”串起来的故事 。\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/3D0hdB69ba.png)\r\n*流光如诗，岁月如歌，温柔隽永，平淡静好。*\r\n\r\n1. 日子一天天过去，生活一天天继续。\r\n\r\n1. 食物是最牢固的生理记忆，映照的却是四姐妹的童年时光，哪位长辈是最亲密的陪伴。父母的饮食习惯原来是我们除了血脉之外，埋置在味蕾处的情感联系。\r\n\r\n1. 如果在告别这个世界的时候，还能有感受美好的能力，那也是一件美好的事情吧。\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/3e5LhcKC8a.jpg)\r\n*善良坚定的普通人往往有着超过神明的力量*',`groups`='FilmReview',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 124 [ RunTime:0.000547s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000877s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'FilmReview' [ RunTime:0.000376s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000779s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'FilmReview' [ RunTime:0.000341s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/124.html
[ info ] qingrang.top/daily/admin/note/shownote/id/124.html [运行时间：0.053681s][吞吐率：18.63req/s] [内存消耗：1,980.99kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/124',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '124',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000515s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001375s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 124 LIMIT 1 [ RunTime:0.000402s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000946s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000318s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/133
[ info ] qingrang.top/daily/admin/note/editnote/id/133 [运行时间：0.057613s][吞吐率：17.36req/s] [内存消耗：2,032.48kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '133',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000461s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002194s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 133 LIMIT 1 [ RunTime:0.000418s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000986s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000318s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:37+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/133.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/133.html [运行时间：0.066363s][吞吐率：15.07req/s] [内存消耗：2,082.83kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10470',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/133',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Android 简介
[TOC]
## 系统架构
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/mm6JE5FG4g.png)
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/4c4Lddd8fe.png)
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/D2693iAk1i.png)
## 项目结构
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/47hE3cJ0c0.png)
>app目录结构：

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/e5kfj62diK.png)
## 详解build.gradle文件
AS是采用Gradle来构建项目的。
>1.Gradle

Gradle是一个非常先进的项目构建工具，他使用了一种基于Groovy的领域特定语言（DSL）来声明项目设置，摒弃了传统基于XML（如Ant和Maven）的各种繁琐配置。
>2.外层build.gradle

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/ia7HlE5Jb6.png)
>3.app内层build.gradle

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/jb550fDB87.png)
## 活动的生命周期
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/h2CjHmK2gI.png)

## 活动中传递数据
>给下一个活动传递数据

```java
//====================传递====================
String data = "需要传递的数据";
Intent intent = new Intent(FirstActivity.this,SecondActivity.class);
intent.putExtra("data_key",data);
startActivity(intent);

//====================获取====================
Intent intent = getIntent();
String data = intent.getStringExtra("data_key");
```

>返回数据给上一个活动

1. FirstActivity.java
startActivityForResult()方法也是用于启动活动的，但这个方法期望在活动销毁的时候能够返回一个结果给上一个活动。活动被销毁之后会回调上一个活动的 onActivityResult()方法(需重写)。
```java
//====================返回数据给上一个活动=====================
Button btn8=(Button)findViewById(R.id.button_8);
btn8.setOnClickListener(new View.OnClickListener() {
	@Override
	public void onClick(View v) {
		Intent intent = new Intent(FirstActivity.this,SecondActivity.class);
		//startActivityForResult()方法接收两个参数，第一个参数还是 Intent，
		// 第二个参数是请求码，用于在之后的回调中判断数据的来源。
		startActivityForResult(intent,1);
	}
});
```

2. SecondActivity.java
setResult()方法接收两个参数，第一个参数用于向上一个活动返回处理结果，一般只使用 RESULT_OK 或RESULT_CANCELED 这两个值，第二个参数则是把带有数据的 Intent 传递回去。
```java
//=================返回数据给上一个活动=====================
Button btn=(Button)findViewById(R.id.button_2);
btn.setOnClickListener(new View.OnClickListener() {
	@Override
	public void onClick(View v) {
		//用于传递数据的intent
		Intent intent = new Intent();
		//将数据放在intent中
		intent.putExtra("data_return","返回的数据");
		//向上一个活动返回数据
		setResult(RESULT_OK,intent);
		finish();//销毁当前活动
	}
});
```

3. 重写
onActivityResult()方法带有三个参数，第一个参数requestCode，即我们在启动活动时传入的请求码。第二个参数resultCode，即我们在返回数据时传入的处理结果。第三个参数 data,即携带着返回数据 的Intent由于在一个活动中有可能调用startActivityForResult()方法去启动很多不同的活动,每一个活动返回的数据都会回调到onActivityResult()这个方法中，因此我们首先要做的就是通过检查 requestCode 的值来判断数据来源。确定数据是从 SecondActivity 返回的之后，我们再通过 resultCode 的值来判断处理结果是否成功。最后从 data 中取值并打印出来，这样就完成了向上一个活动返回数据的工作。
```java
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	switch (requestCode){
		case 1:
			if (requestCode==RESULT_OK){
				String returnData = data.getStringExtra("data_return");
				Log.d("FirstActivity",returnData);
			}
			break;
		default:
			break;
	}
}
```

4. 若按下Back键返回
```java
//按下Back键调用方法
@Override
public void onBackPressed() {
	Intent intent = new Intent();
	intent.putExtra("data_return","返回的数据");
	setResult(RESULT_OK,intent);
	finish();
}
```

## 基本控件的使用
>Dialog

```java
private void showDeleteDialog() {
	AlertDialog.Builder dialog = new AlertDialog.Builder(this);
	dialog.setTitle("标题");
	dialog.setMessage("确定删除吗？");
	dialog.setCancelable(false);
	dialog.setPositiveButton("删除", new DialogInterface.OnClickListener() {
		@Override
		public void onClick(DialogInterface dialog, int which) {
			showLogE("shanchu");
		}
	});
	dialog.setNegativeButton("取消", new DialogInterface.OnClickListener() {
		@Override
		public void onClick(DialogInterface dialog, int which) {
			showLogE("cancel");
		}
	});
	dialog.show();
}
```

',
  'groups' => 'Android',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '133',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000537s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001283s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 133 LIMIT 1 [ RunTime:0.000437s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 133 LIMIT 1 [ RunTime:0.000340s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001407s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000349s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000317s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=133,`p_id`=2,`title`='Android 简介\r',`content`='# Android 简介\r\n[TOC]\r\n## 系统架构\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/mm6JE5FG4g.png)\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/4c4Lddd8fe.png)\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/D2693iAk1i.png)\r\n## 项目结构\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/47hE3cJ0c0.png)\r\n>app目录结构：\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/e5kfj62diK.png)\r\n## 详解build.gradle文件\r\nAS是采用Gradle来构建项目的。\r\n>1.Gradle\r\n\r\nGradle是一个非常先进的项目构建工具，他使用了一种基于Groovy的领域特定语言（DSL）来声明项目设置，摒弃了传统基于XML（如Ant和Maven）的各种繁琐配置。\r\n>2.外层build.gradle\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/ia7HlE5Jb6.png)\r\n>3.app内层build.gradle\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/jb550fDB87.png)\r\n## 活动的生命周期\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/h2CjHmK2gI.png)\r\n\r\n## 活动中传递数据\r\n>给下一个活动传递数据\r\n\r\n```java\r\n//====================传递====================\r\nString data = \"需要传递的数据\";\r\nIntent intent = new Intent(FirstActivity.this,SecondActivity.class);\r\nintent.putExtra(\"data_key\",data);\r\nstartActivity(intent);\r\n\r\n//====================获取====================\r\nIntent intent = getIntent();\r\nString data = intent.getStringExtra(\"data_key\");\r\n```\r\n\r\n>返回数据给上一个活动\r\n\r\n1. FirstActivity.java\r\nstartActivityForResult()方法也是用于启动活动的，但这个方法期望在活动销毁的时候能够返回一个结果给上一个活动。活动被销毁之后会回调上一个活动的 onActivityResult()方法(需重写)。\r\n```java\r\n//====================返回数据给上一个活动=====================\r\nButton btn8=(Button)findViewById(R.id.button_8);\r\nbtn8.setOnClickListener(new View.OnClickListener() {\r\n	@Override\r\n	public void onClick(View v) {\r\n		Intent intent = new Intent(FirstActivity.this,SecondActivity.class);\r\n		//startActivityForResult()方法接收两个参数，第一个参数还是 Intent，\r\n		// 第二个参数是请求码，用于在之后的回调中判断数据的来源。\r\n		startActivityForResult(intent,1);\r\n	}\r\n});\r\n```\r\n\r\n2. SecondActivity.java\r\nsetResult()方法接收两个参数，第一个参数用于向上一个活动返回处理结果，一般只使用 RESULT_OK 或RESULT_CANCELED 这两个值，第二个参数则是把带有数据的 Intent 传递回去。\r\n```java\r\n//=================返回数据给上一个活动=====================\r\nButton btn=(Button)findViewById(R.id.button_2);\r\nbtn.setOnClickListener(new View.OnClickListener() {\r\n	@Override\r\n	public void onClick(View v) {\r\n		//用于传递数据的intent\r\n		Intent intent = new Intent();\r\n		//将数据放在intent中\r\n		intent.putExtra(\"data_return\",\"返回的数据\");\r\n		//向上一个活动返回数据\r\n		setResult(RESULT_OK,intent);\r\n		finish();//销毁当前活动\r\n	}\r\n});\r\n```\r\n\r\n3. 重写\r\nonActivityResult()方法带有三个参数，第一个参数requestCode，即我们在启动活动时传入的请求码。第二个参数resultCode，即我们在返回数据时传入的处理结果。第三个参数 data,即携带着返回数据 的Intent由于在一个活动中有可能调用startActivityForResult()方法去启动很多不同的活动,每一个活动返回的数据都会回调到onActivityResult()这个方法中，因此我们首先要做的就是通过检查 requestCode 的值来判断数据来源。确定数据是从 SecondActivity 返回的之后，我们再通过 resultCode 的值来判断处理结果是否成功。最后从 data 中取值并打印出来，这样就完成了向上一个活动返回数据的工作。\r\n```java\r\n@Override\r\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n	switch (requestCode){\r\n		case 1:\r\n			if (requestCode==RESULT_OK){\r\n				String returnData = data.getStringExtra(\"data_return\");\r\n				Log.d(\"FirstActivity\",returnData);\r\n			}\r\n			break;\r\n		default:\r\n			break;\r\n	}\r\n}\r\n```\r\n\r\n4. 若按下Back键返回\r\n```java\r\n//按下Back键调用方法\r\n@Override\r\npublic void onBackPressed() {\r\n	Intent intent = new Intent();\r\n	intent.putExtra(\"data_return\",\"返回的数据\");\r\n	setResult(RESULT_OK,intent);\r\n	finish();\r\n}\r\n```\r\n\r\n## 基本控件的使用\r\n>Dialog\r\n\r\n```java\r\nprivate void showDeleteDialog() {\r\n	AlertDialog.Builder dialog = new AlertDialog.Builder(this);\r\n	dialog.setTitle(\"标题\");\r\n	dialog.setMessage(\"确定删除吗？\");\r\n	dialog.setCancelable(false);\r\n	dialog.setPositiveButton(\"删除\", new DialogInterface.OnClickListener() {\r\n		@Override\r\n		public void onClick(DialogInterface dialog, int which) {\r\n			showLogE(\"shanchu\");\r\n		}\r\n	});\r\n	dialog.setNegativeButton(\"取消\", new DialogInterface.OnClickListener() {\r\n		@Override\r\n		public void onClick(DialogInterface dialog, int which) {\r\n			showLogE(\"cancel\");\r\n		}\r\n	});\r\n	dialog.show();\r\n}\r\n```\r\n\r\n',`groups`='Android',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 133 [ RunTime:0.000582s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000933s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000316s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000752s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000332s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/133.html
[ info ] qingrang.top/daily/admin/note/shownote/id/133.html [运行时间：0.054464s][吞吐率：18.36req/s] [内存消耗：1,984.79kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/133',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '133',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000552s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001480s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 133 LIMIT 1 [ RunTime:0.000483s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001010s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000377s ]
---------------------------------------------------------------
[ 2018-11-06T17:46:56+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/126
[ info ] qingrang.top/daily/admin/note/editnote/id/126 [运行时间：0.056574s][吞吐率：17.68req/s] [内存消耗：2,055.70kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '126',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000593s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001314s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 126 LIMIT 1 [ RunTime:0.000486s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000926s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000395s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:03+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/126.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/126.html [运行时间：0.071043s][吞吐率：14.08req/s] [内存消耗：2,128.76kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '18376',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/126',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# HorizontalScrollView 的基本使用
## 实现效果
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/jl6e2H6KCL.gif)
## 项目源码
https://github.com/SSGamble/HorizontalScrollView-.git
>1.新建 item 布局

```xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.test.tabiconview.Main2Activity">

    <ImageView
        android:id="@+id/id_index_gallery_item_image"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>
</LinearLayout>
```
>2.新建 MyHorizontalScrollView.class

```java
package com.test.tabiconview;

import java.util.HashMap;
import java.util.Map;
import android.content.Context;
import android.graphics.Color;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.WindowManager;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;

public class MyHorizontalScrollView extends HorizontalScrollView implements OnClickListener{

    /**
     * 条目点击时的回调
     *
     * @author zhy
     *
     */
    public interface OnItemClickListener
    {
        void onClick(View view, int pos);
    }

    private OnItemClickListener mOnClickListener;

    private static final String TAG = "MyHorizontalScrollView";

    /**
     * HorizontalListView中的LinearLayout
     */
    private LinearLayout mContainer;

    /**
     * 子元素的宽度
     */
    private int mChildWidth;
    /**
     * 子元素的高度
     */
    private int mChildHeight;
    /**
     * 当前最后一张图片的index
     */
    private int mCurrentIndex;
    /**
     * 当前第一张图片的下标
     */
    private int mFristIndex;
    /**
     * 当前第一个View
     */
    private View mFirstView;
    /**
     * 数据适配器
     */
    private HorizontalScrollViewAdapter mAdapter;
    /**
     * 每屏幕最多显示的个数
     */
    private int mCountOneScreen;
    /**
     * 屏幕的宽度
     */
    private int mScreenWitdh;


    /**
     * 保存View与位置的键值对
     */
    private Map<View, Integer> mViewPos = new HashMap<View, Integer>();

    public MyHorizontalScrollView(Context context, AttributeSet attrs)
    {
        super(context, attrs);
        // 获得屏幕宽度
        WindowManager wm = (WindowManager) context
                .getSystemService(Context.WINDOW_SERVICE);
        DisplayMetrics outMetrics = new DisplayMetrics();
        wm.getDefaultDisplay().getMetrics(outMetrics);
        mScreenWitdh = outMetrics.widthPixels;
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
    {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        mContainer = (LinearLayout) getChildAt(0);
    }

    /**
     * 加载下一张图片
     */
    protected void loadNextImg()
    {
        // 数组边界值计算
        if (mCurrentIndex == mAdapter.getCount() - 1)
        {
            return;
        }
        //移除第一张图片，且将水平滚动位置置0
        scrollTo(0, 0);
        mViewPos.remove(mContainer.getChildAt(0));
        mContainer.removeViewAt(0);

        //获取下一张图片，并且设置onclick事件，且加入容器中
        View view = mAdapter.getView(++mCurrentIndex, null, mContainer);
        view.setOnClickListener(this);
        mContainer.addView(view);
        mViewPos.put(view, mCurrentIndex);

        //当前第一张图片小标
        mFristIndex++;
    }
    /**
     * 加载前一张图片
     */
    protected void loadPreImg()
    {
        //如果当前已经是第一张，则返回
        if (mFristIndex == 0)
            return;
        //获得当前应该显示为第一张图片的下标
        int index = mCurrentIndex - mCountOneScreen;
        if (index >= 0)
        {
            //移除最后一张
            int oldViewPos = mContainer.getChildCount() - 1;
            mViewPos.remove(mContainer.getChildAt(oldViewPos));
            mContainer.removeViewAt(oldViewPos);

            //将此View放入第一个位置
            View view = mAdapter.getView(index, null, mContainer);
            mViewPos.put(view, index);
            mContainer.addView(view, 0);
            view.setOnClickListener(this);
            //水平滚动位置向左移动view的宽度个像素
            scrollTo(mChildWidth, 0);
            //当前位置--，当前第一个显示的下标--
            mCurrentIndex--;
            mFristIndex--;
        }
    }

    /**
     * 初始化数据，设置数据适配器
     *
     * @param mAdapter
     */
    public void initDatas(HorizontalScrollViewAdapter mAdapter)
    {
        this.mAdapter = mAdapter;
        mContainer = (LinearLayout) getChildAt(0);
        // 获得适配器中第一个View
        final View view = mAdapter.getView(0, null, mContainer);
        mContainer.addView(view);

        // 强制计算当前View的宽和高
        if (mChildWidth == 0 && mChildHeight == 0)
        {
            int w = View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);
            int h = View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);
            view.measure(w, h);
            mChildHeight = view.getMeasuredHeight();
            mChildWidth = view.getMeasuredWidth();
            Log.e(TAG, view.getMeasuredWidth() + "," + view.getMeasuredHeight());
            mChildHeight = view.getMeasuredHeight();
            // 计算每次加载多少个View
            mCountOneScreen = mScreenWitdh / mChildWidth+2;

            Log.e(TAG, "mCountOneScreen = " + mCountOneScreen  + " ,mChildWidth = " + mChildWidth);
        }
        if(mAdapter.getCount()<mCountOneScreen){
            mCountOneScreen =mAdapter.getCount();
        }
        //初始化第一屏幕的元素
        initFirstScreenChildren(mCountOneScreen);
    }

    /**
     * 加载第一屏的View
     *
     * @param mCountOneScreen
     */
    public void initFirstScreenChildren(int mCountOneScreen)
    {
        mContainer = (LinearLayout) getChildAt(0);
        mContainer.removeAllViews();
        mViewPos.clear();

        for (int i = 0; i < mCountOneScreen; i++)
        {
            View view = mAdapter.getView(i, null, mContainer);
            view.setOnClickListener(this);
            mContainer.addView(view);
            mViewPos.put(view, i);
            mCurrentIndex = i;
        }
    }

    @Override
    public boolean onTouchEvent(MotionEvent ev)
    {
        switch (ev.getAction())
        {
            case MotionEvent.ACTION_MOVE:

                int scrollX = getScrollX();
                // 如果当前scrollX为view的宽度，加载下一张，移除第一张
                if (scrollX >= mChildWidth)
                {
                    loadNextImg();
                }
                // 如果当前scrollX = 0， 往前设置一张，移除最后一张
                if (scrollX == 0)
                {
                    loadPreImg();
                }
                break;
        }
        return super.onTouchEvent(ev);
    }

    /**
     * 点击事件
     * @param v
     */
    @Override
    public void onClick(View v)
    {
        if (mOnClickListener != null)
        {
            for (int i = 0; i < mContainer.getChildCount(); i++)
            {
                mContainer.getChildAt(i).setBackgroundColor(Color.BLACK);
            }
            mOnClickListener.onClick(v, mViewPos.get(v));
        }
    }

    /**
     * 设置监听
     * @param mOnClickListener
     */
    public void setOnItemClickListener(OnItemClickListener mOnClickListener)
    {
        this.mOnClickListener = mOnClickListener;
    }
}
```
>3.新建适配器  HorizontalScrollViewAdapter.class

```java
package com.test.tabiconview;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import java.util.List;

/**
 * ====================== HorizontalScrollViewAdapter适配器 ========================
 *
 * @author SGamble
 */
public class HorizontalScrollViewAdapter
{

    private Context mContext;
    private LayoutInflater mInflater;
    private List<Integer> mDatas;

    public HorizontalScrollViewAdapter(Context context, List<Integer> mDatas)
    {
        this.mContext = context;
        mInflater = LayoutInflater.from(context);
        this.mDatas = mDatas;
    }

    public int getCount()
    {
        return mDatas.size();
    }

    public Object getItem(int position)
    {
        return mDatas.get(position);
    }

    public long getItemId(int position)
    {
        return position;
    }

    public View getView(int position, View convertView, ViewGroup parent)
    {
        ViewHolder viewHolder = null;
        if (convertView == null)
        {
            viewHolder = new ViewHolder();
            convertView = mInflater.inflate(R.layout.item, parent, false);
            viewHolder.mImg = (ImageView) convertView.findViewById(R.id.id_index_gallery_item_image);

            convertView.setTag(viewHolder);
        } else
        {
            viewHolder = (ViewHolder) convertView.getTag();
        }
        viewHolder.mImg.setImageResource(mDatas.get(position));

        return convertView;
    }

    private class ViewHolder
    {
        ImageView mImg;
    }

}

```
>4.在需要的地方添加

```xml
<com.test.tabiconview.MyHorizontalScrollView
        android:id="@+id/id_horizontalScrollView"
        android:background="#000"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom"
        android:scrollbars="none" >

        <LinearLayout
            android:id="@+id/id_gallery"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center_vertical"
            android:orientation="horizontal" >
        </LinearLayout>
</com.test.tabiconview.MyHorizontalScrollView>
```
>5.使用

```java
package com.test.tabiconview;

import android.os.Bundle;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import android.app.Activity;
import android.graphics.Color;
import android.util.Log;
import android.view.View;
import android.view.Window;

public class Main2Activity extends Activity
{
    private MyHorizontalScrollView mHorizontalScrollView;
    private HorizontalScrollViewAdapter mAdapter;
    private List<Integer> mDatas = new ArrayList<Integer>(Arrays.asList(
            R.drawable.ic_shortcut_format_header_1, R.drawable.ic_shortcut_format_header_2, R.drawable.ic_shortcut_format_header_3,
            R.drawable.ic_shortcut_format_header_4, R.drawable.ic_shortcut_format_header_5, R.drawable.ic_shortcut_format_header_6));

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        setContentView(R.layout.activity_main2);

        mHorizontalScrollView = (MyHorizontalScrollView) findViewById(R.id.id_horizontalScrollView);
        mAdapter = new HorizontalScrollViewAdapter(this, mDatas);
        //添加点击回调
        mHorizontalScrollView.setOnItemClickListener(new MyHorizontalScrollView.OnItemClickListener()
        {
            @Override
            public void onClick(View view, int position)
            {
                view.setBackgroundColor(Color.BLUE);
                //处理相应的点击事件
                Log.e("onClick", position+"");
            }
        });
        //设置适配器
        mHorizontalScrollView.initDatas(mAdapter);
    }

}
```',
  'groups' => 'Android',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '126',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000660s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001637s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 126 LIMIT 1 [ RunTime:0.000514s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 126 LIMIT 1 [ RunTime:0.000379s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001070s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000370s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=126,`p_id`=2,`title`='HorizontalScrollView 的基本使用\r',`content`='# HorizontalScrollView 的基本使用\r\n## 实现效果\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/jl6e2H6KCL.gif)\r\n## 项目源码\r\nhttps://github.com/SSGamble/HorizontalScrollView-.git\r\n>1.新建 item 布局\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/activity_main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\"com.test.tabiconview.Main2Activity\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/id_index_gallery_item_image\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"/>\r\n</LinearLayout>\r\n```\r\n>2.新建 MyHorizontalScrollView.class\r\n\r\n```java\r\npackage com.test.tabiconview;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.util.AttributeSet;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.WindowManager;\r\nimport android.widget.HorizontalScrollView;\r\nimport android.widget.LinearLayout;\r\n\r\npublic class MyHorizontalScrollView extends HorizontalScrollView implements OnClickListener{\r\n\r\n    /**\r\n     * 条目点击时的回调\r\n     *\r\n     * @author zhy\r\n     *\r\n     */\r\n    public interface OnItemClickListener\r\n    {\r\n        void onClick(View view, int pos);\r\n    }\r\n\r\n    private OnItemClickListener mOnClickListener;\r\n\r\n    private static final String TAG = \"MyHorizontalScrollView\";\r\n\r\n    /**\r\n     * HorizontalListView中的LinearLayout\r\n     */\r\n    private LinearLayout mContainer;\r\n\r\n    /**\r\n     * 子元素的宽度\r\n     */\r\n    private int mChildWidth;\r\n    /**\r\n     * 子元素的高度\r\n     */\r\n    private int mChildHeight;\r\n    /**\r\n     * 当前最后一张图片的index\r\n     */\r\n    private int mCurrentIndex;\r\n    /**\r\n     * 当前第一张图片的下标\r\n     */\r\n    private int mFristIndex;\r\n    /**\r\n     * 当前第一个View\r\n     */\r\n    private View mFirstView;\r\n    /**\r\n     * 数据适配器\r\n     */\r\n    private HorizontalScrollViewAdapter mAdapter;\r\n    /**\r\n     * 每屏幕最多显示的个数\r\n     */\r\n    private int mCountOneScreen;\r\n    /**\r\n     * 屏幕的宽度\r\n     */\r\n    private int mScreenWitdh;\r\n\r\n\r\n    /**\r\n     * 保存View与位置的键值对\r\n     */\r\n    private Map<View, Integer> mViewPos = new HashMap<View, Integer>();\r\n\r\n    public MyHorizontalScrollView(Context context, AttributeSet attrs)\r\n    {\r\n        super(context, attrs);\r\n        // 获得屏幕宽度\r\n        WindowManager wm = (WindowManager) context\r\n                .getSystemService(Context.WINDOW_SERVICE);\r\n        DisplayMetrics outMetrics = new DisplayMetrics();\r\n        wm.getDefaultDisplay().getMetrics(outMetrics);\r\n        mScreenWitdh = outMetrics.widthPixels;\r\n    }\r\n\r\n    @Override\r\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)\r\n    {\r\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\r\n        mContainer = (LinearLayout) getChildAt(0);\r\n    }\r\n\r\n    /**\r\n     * 加载下一张图片\r\n     */\r\n    protected void loadNextImg()\r\n    {\r\n        // 数组边界值计算\r\n        if (mCurrentIndex == mAdapter.getCount() - 1)\r\n        {\r\n            return;\r\n        }\r\n        //移除第一张图片，且将水平滚动位置置0\r\n        scrollTo(0, 0);\r\n        mViewPos.remove(mContainer.getChildAt(0));\r\n        mContainer.removeViewAt(0);\r\n\r\n        //获取下一张图片，并且设置onclick事件，且加入容器中\r\n        View view = mAdapter.getView(++mCurrentIndex, null, mContainer);\r\n        view.setOnClickListener(this);\r\n        mContainer.addView(view);\r\n        mViewPos.put(view, mCurrentIndex);\r\n\r\n        //当前第一张图片小标\r\n        mFristIndex++;\r\n    }\r\n    /**\r\n     * 加载前一张图片\r\n     */\r\n    protected void loadPreImg()\r\n    {\r\n        //如果当前已经是第一张，则返回\r\n        if (mFristIndex == 0)\r\n            return;\r\n        //获得当前应该显示为第一张图片的下标\r\n        int index = mCurrentIndex - mCountOneScreen;\r\n        if (index >= 0)\r\n        {\r\n            //移除最后一张\r\n            int oldViewPos = mContainer.getChildCount() - 1;\r\n            mViewPos.remove(mContainer.getChildAt(oldViewPos));\r\n            mContainer.removeViewAt(oldViewPos);\r\n\r\n            //将此View放入第一个位置\r\n            View view = mAdapter.getView(index, null, mContainer);\r\n            mViewPos.put(view, index);\r\n            mContainer.addView(view, 0);\r\n            view.setOnClickListener(this);\r\n            //水平滚动位置向左移动view的宽度个像素\r\n            scrollTo(mChildWidth, 0);\r\n            //当前位置--，当前第一个显示的下标--\r\n            mCurrentIndex--;\r\n            mFristIndex--;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化数据，设置数据适配器\r\n     *\r\n     * @param mAdapter\r\n     */\r\n    public void initDatas(HorizontalScrollViewAdapter mAdapter)\r\n    {\r\n        this.mAdapter = mAdapter;\r\n        mContainer = (LinearLayout) getChildAt(0);\r\n        // 获得适配器中第一个View\r\n        final View view = mAdapter.getView(0, null, mContainer);\r\n        mContainer.addView(view);\r\n\r\n        // 强制计算当前View的宽和高\r\n        if (mChildWidth == 0 && mChildHeight == 0)\r\n        {\r\n            int w = View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);\r\n            int h = View.MeasureSpec.makeMeasureSpec(0,View.MeasureSpec.UNSPECIFIED);\r\n            view.measure(w, h);\r\n            mChildHeight = view.getMeasuredHeight();\r\n            mChildWidth = view.getMeasuredWidth();\r\n            Log.e(TAG, view.getMeasuredWidth() + \",\" + view.getMeasuredHeight());\r\n            mChildHeight = view.getMeasuredHeight();\r\n            // 计算每次加载多少个View\r\n            mCountOneScreen = mScreenWitdh / mChildWidth+2;\r\n\r\n            Log.e(TAG, \"mCountOneScreen = \" + mCountOneScreen  + \" ,mChildWidth = \" + mChildWidth);\r\n        }\r\n        if(mAdapter.getCount()<mCountOneScreen){\r\n            mCountOneScreen =mAdapter.getCount();\r\n        }\r\n        //初始化第一屏幕的元素\r\n        initFirstScreenChildren(mCountOneScreen);\r\n    }\r\n\r\n    /**\r\n     * 加载第一屏的View\r\n     *\r\n     * @param mCountOneScreen\r\n     */\r\n    public void initFirstScreenChildren(int mCountOneScreen)\r\n    {\r\n        mContainer = (LinearLayout) getChildAt(0);\r\n        mContainer.removeAllViews();\r\n        mViewPos.clear();\r\n\r\n        for (int i = 0; i < mCountOneScreen; i++)\r\n        {\r\n            View view = mAdapter.getView(i, null, mContainer);\r\n            view.setOnClickListener(this);\r\n            mContainer.addView(view);\r\n            mViewPos.put(view, i);\r\n            mCurrentIndex = i;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onTouchEvent(MotionEvent ev)\r\n    {\r\n        switch (ev.getAction())\r\n        {\r\n            case MotionEvent.ACTION_MOVE:\r\n\r\n                int scrollX = getScrollX();\r\n                // 如果当前scrollX为view的宽度，加载下一张，移除第一张\r\n                if (scrollX >= mChildWidth)\r\n                {\r\n                    loadNextImg();\r\n                }\r\n                // 如果当前scrollX = 0， 往前设置一张，移除最后一张\r\n                if (scrollX == 0)\r\n                {\r\n                    loadPreImg();\r\n                }\r\n                break;\r\n        }\r\n        return super.onTouchEvent(ev);\r\n    }\r\n\r\n    /**\r\n     * 点击事件\r\n     * @param v\r\n     */\r\n    @Override\r\n    public void onClick(View v)\r\n    {\r\n        if (mOnClickListener != null)\r\n        {\r\n            for (int i = 0; i < mContainer.getChildCount(); i++)\r\n            {\r\n                mContainer.getChildAt(i).setBackgroundColor(Color.BLACK);\r\n            }\r\n            mOnClickListener.onClick(v, mViewPos.get(v));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置监听\r\n     * @param mOnClickListener\r\n     */\r\n    public void setOnItemClickListener(OnItemClickListener mOnClickListener)\r\n    {\r\n        this.mOnClickListener = mOnClickListener;\r\n    }\r\n}\r\n```\r\n>3.新建适配器  HorizontalScrollViewAdapter.class\r\n\r\n```java\r\npackage com.test.tabiconview;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport java.util.List;\r\n\r\n/**\r\n * ====================== HorizontalScrollViewAdapter适配器 ========================\r\n *\r\n * @author SGamble\r\n */\r\npublic class HorizontalScrollViewAdapter\r\n{\r\n\r\n    private Context mContext;\r\n    private LayoutInflater mInflater;\r\n    private List<Integer> mDatas;\r\n\r\n    public HorizontalScrollViewAdapter(Context context, List<Integer> mDatas)\r\n    {\r\n        this.mContext = context;\r\n        mInflater = LayoutInflater.from(context);\r\n        this.mDatas = mDatas;\r\n    }\r\n\r\n    public int getCount()\r\n    {\r\n        return mDatas.size();\r\n    }\r\n\r\n    public Object getItem(int position)\r\n    {\r\n        return mDatas.get(position);\r\n    }\r\n\r\n    public long getItemId(int position)\r\n    {\r\n        return position;\r\n    }\r\n\r\n    public View getView(int position, View convertView, ViewGroup parent)\r\n    {\r\n        ViewHolder viewHolder = null;\r\n        if (convertView == null)\r\n        {\r\n            viewHolder = new ViewHolder();\r\n            convertView = mInflater.inflate(R.layout.item, parent, false);\r\n            viewHolder.mImg = (ImageView) convertView.findViewById(R.id.id_index_gallery_item_image);\r\n\r\n            convertView.setTag(viewHolder);\r\n        } else\r\n        {\r\n            viewHolder = (ViewHolder) convertView.getTag();\r\n        }\r\n        viewHolder.mImg.setImageResource(mDatas.get(position));\r\n\r\n        return convertView;\r\n    }\r\n\r\n    private class ViewHolder\r\n    {\r\n        ImageView mImg;\r\n    }\r\n\r\n}\r\n\r\n```\r\n>4.在需要的地方添加\r\n\r\n```xml\r\n<com.test.tabiconview.MyHorizontalScrollView\r\n        android:id=\"@+id/id_horizontalScrollView\"\r\n        android:background=\"#000\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"bottom\"\r\n        android:scrollbars=\"none\" >\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/id_gallery\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:orientation=\"horizontal\" >\r\n        </LinearLayout>\r\n</com.test.tabiconview.MyHorizontalScrollView>\r\n```\r\n>5.使用\r\n\r\n```java\r\npackage com.test.tabiconview;\r\n\r\nimport android.os.Bundle;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport android.app.Activity;\r\nimport android.graphics.Color;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\n\r\npublic class Main2Activity extends Activity\r\n{\r\n    private MyHorizontalScrollView mHorizontalScrollView;\r\n    private HorizontalScrollViewAdapter mAdapter;\r\n    private List<Integer> mDatas = new ArrayList<Integer>(Arrays.asList(\r\n            R.drawable.ic_shortcut_format_header_1, R.drawable.ic_shortcut_format_header_2, R.drawable.ic_shortcut_format_header_3,\r\n            R.drawable.ic_shortcut_format_header_4, R.drawable.ic_shortcut_format_header_5, R.drawable.ic_shortcut_format_header_6));\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        setContentView(R.layout.activity_main2);\r\n\r\n        mHorizontalScrollView = (MyHorizontalScrollView) findViewById(R.id.id_horizontalScrollView);\r\n        mAdapter = new HorizontalScrollViewAdapter(this, mDatas);\r\n        //添加点击回调\r\n        mHorizontalScrollView.setOnItemClickListener(new MyHorizontalScrollView.OnItemClickListener()\r\n        {\r\n            @Override\r\n            public void onClick(View view, int position)\r\n            {\r\n                view.setBackgroundColor(Color.BLUE);\r\n                //处理相应的点击事件\r\n                Log.e(\"onClick\", position+\"\");\r\n            }\r\n        });\r\n        //设置适配器\r\n        mHorizontalScrollView.initDatas(mAdapter);\r\n    }\r\n\r\n}\r\n```',`groups`='Android',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 126 [ RunTime:0.000882s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.001084s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000376s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000996s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000470s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/126.html
[ info ] qingrang.top/daily/admin/note/shownote/id/126.html [运行时间：0.052875s][吞吐率：18.91req/s] [内存消耗：1,992.12kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/126',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '126',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000475s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001421s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 126 LIMIT 1 [ RunTime:0.000489s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000978s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000341s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/138
[ info ] qingrang.top/daily/admin/note/editnote/id/138 [运行时间：0.059038s][吞吐率：16.94req/s] [内存消耗：2,056.78kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '138',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000723s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001400s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 138 LIMIT 1 [ RunTime:0.000609s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000970s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000359s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:13+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/138.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/138.html [运行时间：0.066705s][吞吐率：14.99req/s] [内存消耗：2,133.79kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '18084',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/138',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 带侧滑 RecyclerView (防 QQ )
>https://github.com/nikhilpanju/RecyclerViewEnhanced
compile \'com.nikhilpanju.recyclerviewenhanced:recyclerviewenhanced:1.1.0\'

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/1D1jjEHicb.gif)

>项目源码
https://github.com/SSGamble/RecyclerViewEnhanced.git

## 1. layout布局
>主界面布局 activity_main.xml

```xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.test.recyclerviewenhanced.MainActivity">

    <android.support.v7.widget.RecyclerView
        android:id="@+id/recyclerView"
        android:layout_width="match_parent"
        android:layout_height="match_parent"/>
</RelativeLayout>
```
>item子项布局 recycler_row.xml

```xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
                xmlns:app="http://schemas.android.com/apk/res-auto"
                xmlns:tools="http://schemas.android.com/tools"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical">

    <!-- 侧滑菜单 -->
    <LinearLayout
        android:id="@+id/rowBG"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentRight="true"
        android:gravity="right"
        android:orientation="horizontal">

        <!-- 编辑 -->
        <RelativeLayout
            android:id="@+id/edit"
            android:layout_width="@dimen/swipeWidth"
            android:layout_height="match_parent"
            android:background="@color/swipeoption_green"
            android:clickable="true"
            android:focusable="true"
            android:orientation="vertical">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_centerInParent="true"
                android:background="?android:selectableItemBackground"
                android:gravity="center"
                android:orientation="vertical">

                <ImageView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center_horizontal"
                    android:src="@drawable/ic_mode_edit_black_24dp"
                    android:tint="@android:color/white"/>

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center_horizontal"
                    android:layout_marginLeft="8dp"
                    android:layout_marginRight="8dp"
                    android:layout_marginTop="4dp"
                    android:ellipsize="end"
                    android:gravity="center"
                    android:maxLines="1"
                    android:text="Edit"
                    android:textColor="@android:color/white"
                    android:textSize="12sp"/>
            </LinearLayout>
        </RelativeLayout>

        <!-- 删除 -->
        <RelativeLayout
            android:id="@+id/change"
            android:layout_width="@dimen/swipeWidth"
            android:layout_height="match_parent"
            android:background="@color/swipeoption_purple"
            android:clickable="true"
            android:focusable="true"
            android:orientation="vertical">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_centerInParent="true"
                android:background="?android:selectableItemBackground"
                android:gravity="center_vertical|left"
                android:orientation="vertical">

                <ImageView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center_horizontal"
                    android:tint="@android:color/white"
                    app:srcCompat="@drawable/ic_build_black_24dp"/>

                <TextView
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center_horizontal"
                    android:layout_marginLeft="8dp"
                    android:layout_marginRight="8dp"
                    android:layout_marginTop="4dp"
                    android:ellipsize="end"
                    android:gravity="center"
                    android:maxLines="1"
                    android:text="Change"
                    android:textColor="@android:color/white"
                    android:textSize="12sp"/>
            </LinearLayout>
        </RelativeLayout>

    </LinearLayout>

    <!-- 主数据项 -->
    <LinearLayout
        android:id="@+id/rowFG"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@android:color/white"
        android:clickable="true"
        android:elevation="4dp"
        android:focusable="true"
        android:orientation="horizontal"
        android:visibility="visible">

        <!-- item 数据 -->
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="?attr/selectableItemBackground"
            android:orientation="horizontal"
            android:paddingBottom="16dp"
            android:paddingLeft="16dp"
            android:paddingTop="16dp">

            <LinearLayout
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_gravity="center_vertical"
                android:layout_weight="6"
                android:orientation="vertical">

                <TextView
                    android:id="@+id/mainText"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:maxLines="1"
                    android:text="No Calls Found"
                    android:textSize="16sp"
                    android:textStyle="bold"
                    tools:text="Row 1"/>

                <TextView
                    android:id="@+id/subText"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginTop="2dp"
                    android:maxLines="1"
                    tools:text="Some text ..."/>
            </LinearLayout>

        </LinearLayout>

    </LinearLayout>

    <View
        android:layout_width="match_parent"
        android:layout_height="1dp"
        android:layout_alignParentBottom="true"
        android:background="#67676767"
        android:elevation="5dp"/>
</RelativeLayout>
```
## 2. item实体 RowModel.class
```java
package com.test.recyclerviewenhanced;

/**
 * ====================== 数据实体 ========================
 *
 * @author SGamble
 */
public class RowModel {
    String mainText, subText;

    public RowModel(String mainText, String subText) {
        this.mainText = mainText;
        this.subText = subText;
    }

    public String getMainText() {
        return mainText;
    }

    public void setMainText(String mainText) {
        this.mainText = mainText;
    }

    public String getSubText() {
        return subText;
    }

    public void setSubText(String subText) {
        this.subText = subText;
    }
}
```

## 3. Adapter
```java
package com.test.recyclerviewenhanced;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import java.util.ArrayList;
import java.util.List;

/**
 * ====================== Adapter ========================
 *
 * @author SGamble
 */
public class Adapter extends RecyclerView.Adapter<Adapter.MyViewHolder> {
    LayoutInflater inflater;
    List<RowModel> modelList;

    public Adapter(Context context, List<RowModel> list) {
        inflater = LayoutInflater.from(context);
        modelList = new ArrayList<>(list);
    }

    @Override
    public Adapter.MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = inflater.inflate(R.layout.recycler_row, parent, false);
        return new Adapter.MyViewHolder(view);
    }

    @Override
    public void onBindViewHolder(Adapter.MyViewHolder holder, int position) {
        holder.bindData(modelList.get(position));
    }

    @Override
    public int getItemCount() {
        return modelList.size();
    }

    class MyViewHolder extends RecyclerView.ViewHolder {

        TextView mainText, subText;

        public MyViewHolder(View itemView) {
            super(itemView);
            mainText = (TextView) itemView.findViewById(R.id.mainText);
            subText = (TextView) itemView.findViewById(R.id.subText);
        }

        public void bindData(RowModel rowModel) {
            mainText.setText(rowModel.getMainText());
            subText.setText(rowModel.getSubText());
        }
    }
}
```

## 4. 主界面实现
```java
package com.test.recyclerviewenhanced;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.MotionEvent;

import com.nikhilpanju.recyclerviewenhanced.OnActivityTouchListener;
import com.nikhilpanju.recyclerviewenhanced.RecyclerTouchListener;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity implements RecyclerTouchListener.RecyclerTouchListenerHelper {

    RecyclerView mRecyclerView;
    Adapter mAdapter;
    List<Integer> mUnClickableRows, mUnSwipeableRows;
    private RecyclerTouchListener onTouchListener;
    private OnActivityTouchListener touchListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        initRecyclerView();
    }

    /**
     * 初始化 RecyclerView
     */
    private void initRecyclerView() {
        mUnClickableRows = new ArrayList<>();
        mUnSwipeableRows = new ArrayList<>();

        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerView);
        mAdapter = new Adapter(this, getData());
        mRecyclerView.setAdapter(mAdapter);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));

        onTouchListener = new RecyclerTouchListener(this, mRecyclerView);
        onTouchListener
                .setClickable(new RecyclerTouchListener.OnRowClickListener() {
                    @Override
                    public void onRowClicked(int position) {
                        Log.e("MainActivity", "点击了第" + (position + 1) + "行元素");
                    }

                    @Override
                    public void onIndependentViewClicked(int independentViewID, int position) {
                        Log.e("MainActivity", "Button in row " + (position + 1) + " clicked!");
                    }
                })
                .setSwipeOptionViews(R.id.edit, R.id.change)
                .setSwipeable(R.id.rowFG, R.id.rowBG, new RecyclerTouchListener.OnSwipeOptionsClickListener() {
                    @Override
                    public void onSwipeOptionClicked(int viewID, int position) {
                        if (viewID == R.id.edit) {
                            Log.e("MainActivity", "点击了edit按钮");
                        } else if (viewID == R.id.change) {
                            Log.e("MainActivity", "点击了change按钮");
                        }
                    }
                });
    }

    /**
     * 获取数据
     * @return
     */
    private List<RowModel> getData() {
        List<RowModel> list = new ArrayList<>(25);
        for (int i = 0; i < 10; i++) {
            list.add(new RowModel("Row " + (i + 1), "Some Text... "));
        }
        return list;
    }

    @Override
    protected void onResume() {
        super.onResume();
        mRecyclerView.addOnItemTouchListener(onTouchListener); }

    @Override
    protected void onPause() {
        super.onPause();
        mRecyclerView.removeOnItemTouchListener(onTouchListener);
    }

    @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        if (touchListener != null) touchListener.getTouchCoordinates(ev);
        return super.dispatchTouchEvent(ev);
    }

    @Override
    public void setOnActivityTouchListener(OnActivityTouchListener listener) {
        this.touchListener = listener;
    }
}


```',
  'groups' => 'Android',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '138',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000547s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001279s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 138 LIMIT 1 [ RunTime:0.000482s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 138 LIMIT 1 [ RunTime:0.000314s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000854s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000292s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000418s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=138,`p_id`=2,`title`='带侧滑 RecyclerView (防 QQ )\r',`content`='# 带侧滑 RecyclerView (防 QQ )\r\n>https://github.com/nikhilpanju/RecyclerViewEnhanced\r\ncompile \'com.nikhilpanju.recyclerviewenhanced:recyclerviewenhanced:1.1.0\'\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/1D1jjEHicb.gif)\r\n\r\n>项目源码\r\nhttps://github.com/SSGamble/RecyclerViewEnhanced.git\r\n\r\n## 1. layout布局\r\n>主界面布局 activity_main.xml\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/activity_main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\"com.test.recyclerviewenhanced.MainActivity\">\r\n\r\n    <android.support.v7.widget.RecyclerView\r\n        android:id=\"@+id/recyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"/>\r\n</RelativeLayout>\r\n```\r\n>item子项布局 recycler_row.xml\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n                xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n                xmlns:tools=\"http://schemas.android.com/tools\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n    <!-- 侧滑菜单 -->\r\n    <LinearLayout\r\n        android:id=\"@+id/rowBG\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:gravity=\"right\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <!-- 编辑 -->\r\n        <RelativeLayout\r\n            android:id=\"@+id/edit\"\r\n            android:layout_width=\"@dimen/swipeWidth\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@color/swipeoption_green\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:background=\"?android:selectableItemBackground\"\r\n                android:gravity=\"center\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <ImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center_horizontal\"\r\n                    android:src=\"@drawable/ic_mode_edit_black_24dp\"\r\n                    android:tint=\"@android:color/white\"/>\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center_horizontal\"\r\n                    android:layout_marginLeft=\"8dp\"\r\n                    android:layout_marginRight=\"8dp\"\r\n                    android:layout_marginTop=\"4dp\"\r\n                    android:ellipsize=\"end\"\r\n                    android:gravity=\"center\"\r\n                    android:maxLines=\"1\"\r\n                    android:text=\"Edit\"\r\n                    android:textColor=\"@android:color/white\"\r\n                    android:textSize=\"12sp\"/>\r\n            </LinearLayout>\r\n        </RelativeLayout>\r\n\r\n        <!-- 删除 -->\r\n        <RelativeLayout\r\n            android:id=\"@+id/change\"\r\n            android:layout_width=\"@dimen/swipeWidth\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@color/swipeoption_purple\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:background=\"?android:selectableItemBackground\"\r\n                android:gravity=\"center_vertical|left\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <ImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center_horizontal\"\r\n                    android:tint=\"@android:color/white\"\r\n                    app:srcCompat=\"@drawable/ic_build_black_24dp\"/>\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center_horizontal\"\r\n                    android:layout_marginLeft=\"8dp\"\r\n                    android:layout_marginRight=\"8dp\"\r\n                    android:layout_marginTop=\"4dp\"\r\n                    android:ellipsize=\"end\"\r\n                    android:gravity=\"center\"\r\n                    android:maxLines=\"1\"\r\n                    android:text=\"Change\"\r\n                    android:textColor=\"@android:color/white\"\r\n                    android:textSize=\"12sp\"/>\r\n            </LinearLayout>\r\n        </RelativeLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <!-- 主数据项 -->\r\n    <LinearLayout\r\n        android:id=\"@+id/rowFG\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@android:color/white\"\r\n        android:clickable=\"true\"\r\n        android:elevation=\"4dp\"\r\n        android:focusable=\"true\"\r\n        android:orientation=\"horizontal\"\r\n        android:visibility=\"visible\">\r\n\r\n        <!-- item 数据 -->\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"?attr/selectableItemBackground\"\r\n            android:orientation=\"horizontal\"\r\n            android:paddingBottom=\"16dp\"\r\n            android:paddingLeft=\"16dp\"\r\n            android:paddingTop=\"16dp\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center_vertical\"\r\n                android:layout_weight=\"6\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/mainText\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:maxLines=\"1\"\r\n                    android:text=\"No Calls Found\"\r\n                    android:textSize=\"16sp\"\r\n                    android:textStyle=\"bold\"\r\n                    tools:text=\"Row 1\"/>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/subText\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"2dp\"\r\n                    android:maxLines=\"1\"\r\n                    tools:text=\"Some text ...\"/>\r\n            </LinearLayout>\r\n\r\n        </LinearLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <View\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"1dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:background=\"#67676767\"\r\n        android:elevation=\"5dp\"/>\r\n</RelativeLayout>\r\n```\r\n## 2. item实体 RowModel.class\r\n```java\r\npackage com.test.recyclerviewenhanced;\r\n\r\n/**\r\n * ====================== 数据实体 ========================\r\n *\r\n * @author SGamble\r\n */\r\npublic class RowModel {\r\n    String mainText, subText;\r\n\r\n    public RowModel(String mainText, String subText) {\r\n        this.mainText = mainText;\r\n        this.subText = subText;\r\n    }\r\n\r\n    public String getMainText() {\r\n        return mainText;\r\n    }\r\n\r\n    public void setMainText(String mainText) {\r\n        this.mainText = mainText;\r\n    }\r\n\r\n    public String getSubText() {\r\n        return subText;\r\n    }\r\n\r\n    public void setSubText(String subText) {\r\n        this.subText = subText;\r\n    }\r\n}\r\n```\r\n\r\n## 3. Adapter\r\n```java\r\npackage com.test.recyclerviewenhanced;\r\n\r\nimport android.content.Context;\r\nimport android.support.v7.widget.RecyclerView;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * ====================== Adapter ========================\r\n *\r\n * @author SGamble\r\n */\r\npublic class Adapter extends RecyclerView.Adapter<Adapter.MyViewHolder> {\r\n    LayoutInflater inflater;\r\n    List<RowModel> modelList;\r\n\r\n    public Adapter(Context context, List<RowModel> list) {\r\n        inflater = LayoutInflater.from(context);\r\n        modelList = new ArrayList<>(list);\r\n    }\r\n\r\n    @Override\r\n    public Adapter.MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n        View view = inflater.inflate(R.layout.recycler_row, parent, false);\r\n        return new Adapter.MyViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(Adapter.MyViewHolder holder, int position) {\r\n        holder.bindData(modelList.get(position));\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return modelList.size();\r\n    }\r\n\r\n    class MyViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView mainText, subText;\r\n\r\n        public MyViewHolder(View itemView) {\r\n            super(itemView);\r\n            mainText = (TextView) itemView.findViewById(R.id.mainText);\r\n            subText = (TextView) itemView.findViewById(R.id.subText);\r\n        }\r\n\r\n        public void bindData(RowModel rowModel) {\r\n            mainText.setText(rowModel.getMainText());\r\n            subText.setText(rowModel.getSubText());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## 4. 主界面实现\r\n```java\r\npackage com.test.recyclerviewenhanced;\r\n\r\nimport android.os.Bundle;\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.support.v7.widget.LinearLayoutManager;\r\nimport android.support.v7.widget.RecyclerView;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\n\r\nimport com.nikhilpanju.recyclerviewenhanced.OnActivityTouchListener;\r\nimport com.nikhilpanju.recyclerviewenhanced.RecyclerTouchListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements RecyclerTouchListener.RecyclerTouchListenerHelper {\r\n\r\n    RecyclerView mRecyclerView;\r\n    Adapter mAdapter;\r\n    List<Integer> mUnClickableRows, mUnSwipeableRows;\r\n    private RecyclerTouchListener onTouchListener;\r\n    private OnActivityTouchListener touchListener;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        initRecyclerView();\r\n    }\r\n\r\n    /**\r\n     * 初始化 RecyclerView\r\n     */\r\n    private void initRecyclerView() {\r\n        mUnClickableRows = new ArrayList<>();\r\n        mUnSwipeableRows = new ArrayList<>();\r\n\r\n        mRecyclerView = (RecyclerView) findViewById(R.id.recyclerView);\r\n        mAdapter = new Adapter(this, getData());\r\n        mRecyclerView.setAdapter(mAdapter);\r\n        mRecyclerView.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        onTouchListener = new RecyclerTouchListener(this, mRecyclerView);\r\n        onTouchListener\r\n                .setClickable(new RecyclerTouchListener.OnRowClickListener() {\r\n                    @Override\r\n                    public void onRowClicked(int position) {\r\n                        Log.e(\"MainActivity\", \"点击了第\" + (position + 1) + \"行元素\");\r\n                    }\r\n\r\n                    @Override\r\n                    public void onIndependentViewClicked(int independentViewID, int position) {\r\n                        Log.e(\"MainActivity\", \"Button in row \" + (position + 1) + \" clicked!\");\r\n                    }\r\n                })\r\n                .setSwipeOptionViews(R.id.edit, R.id.change)\r\n                .setSwipeable(R.id.rowFG, R.id.rowBG, new RecyclerTouchListener.OnSwipeOptionsClickListener() {\r\n                    @Override\r\n                    public void onSwipeOptionClicked(int viewID, int position) {\r\n                        if (viewID == R.id.edit) {\r\n                            Log.e(\"MainActivity\", \"点击了edit按钮\");\r\n                        } else if (viewID == R.id.change) {\r\n                            Log.e(\"MainActivity\", \"点击了change按钮\");\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    /**\r\n     * 获取数据\r\n     * @return\r\n     */\r\n    private List<RowModel> getData() {\r\n        List<RowModel> list = new ArrayList<>(25);\r\n        for (int i = 0; i < 10; i++) {\r\n            list.add(new RowModel(\"Row \" + (i + 1), \"Some Text... \"));\r\n        }\r\n        return list;\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        mRecyclerView.addOnItemTouchListener(onTouchListener); }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        mRecyclerView.removeOnItemTouchListener(onTouchListener);\r\n    }\r\n\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent ev) {\r\n        if (touchListener != null) touchListener.getTouchCoordinates(ev);\r\n        return super.dispatchTouchEvent(ev);\r\n    }\r\n\r\n    @Override\r\n    public void setOnActivityTouchListener(OnActivityTouchListener listener) {\r\n        this.touchListener = listener;\r\n    }\r\n}\r\n\r\n\r\n```',`groups`='Android',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 138 [ RunTime:0.000763s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.001069s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000315s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.001135s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000480s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:14+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/138.html
[ info ] qingrang.top/daily/admin/note/shownote/id/138.html [运行时间：0.056014s][吞吐率：17.85req/s] [内存消耗：1,993.12kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/138',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '138',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000531s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001439s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 138 LIMIT 1 [ RunTime:0.000497s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000922s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000269s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/144
[ info ] qingrang.top/daily/admin/note/editnote/id/144 [运行时间：0.054729s][吞吐率：18.27req/s] [内存消耗：2,034.39kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '144',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000529s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002475s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 144 LIMIT 1 [ RunTime:0.000448s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000273s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:24+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/144.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/144.html [运行时间：0.063638s][吞吐率：15.71req/s] [内存消耗：2,093.72kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11193',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/144',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 监听剪贴板并发出通知
## 效果
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/1d9LFgDKKe.jpg)
## 源码
https://github.com/SSGamble/PasteNotification

## 实现步骤
>1.创建 监听剪贴板 的服务

*PasteCopyService.java*
```java
package com.qr.pastenotification;

import android.app.Service;
import android.content.ClipboardManager;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;

/**
 * ====================== 监听 粘贴板 服务========================
 * 用于监听 剪贴板的变化
 * 若剪贴板发生变化 则发送 "PasteCopy.com" 的广播，PasteCopyReceiver会接收并处理
 * @author SGamble
 */
public class PasteCopyService extends Service {
    private ClipboardManager clipboardManager;
    private final String TAG = "PasteCopyService";
    @Override
    public void onCreate() {
        super.onCreate();
        Log.d(TAG, "onCreate: ");
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        Log.d(TAG, "onDestroy: ");
    }

    @Override
    public IBinder onBind(Intent intent) {
        Log.d(TAG, "onBind: ");
        return null;
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        registerClipEvents();
        Log.d(TAG, "onStartCommand: ");
        return super.onStartCommand(intent, flags, startId);
    }

    private void registerClipEvents() {
        clipboardManager = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);
        clipboardManager.addPrimaryClipChangedListener(new ClipboardManager.OnPrimaryClipChangedListener() {
            @Override
            public void onPrimaryClipChanged() {
                String content = clipboardManager.getText()+"";

                Log.e("onPrimaryClipChanged: ", content);

                //发送广播
                Intent intent = new Intent();
                intent.setAction("PasteCopy.com");
                sendBroadcast(intent);
            }
        });
    }
}
```
>2.创建 响应剪贴板 的广播

*PasteCopyReceiver.java*
```java
package com.qr.pastenotification;

import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.graphics.BitmapFactory;

import static android.content.Context.NOTIFICATION_SERVICE;

/**
 * ====================== 剪贴板 广播========================
 * 接收到 “PasteCopy.com” 则显示 通知，
 * 点击通知则发送 “AddTemp.com” NotificationBroadcastReceiver会接收广播，
 * 然后追加临时笔记（数据库）
 * @author SGamble
 */
public class PasteCopyReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        if (action.equals("PasteCopy.com")) {
            showNotification(context);
        }
    }

    /**
     * 显示 追加临时笔记 的通知
     * @param context
     */
    private void showNotification(Context context) {
        //========================== 发送 “AddTemp”的广播 ==========================
        Intent intentClick = new Intent(context, NotificationBroadcastReceiver.class);
        intentClick.setAction("AddTemp.com");
        PendingIntent pendingIntentClick = PendingIntent.getBroadcast(context, 900, intentClick, PendingIntent.FLAG_CANCEL_CURRENT);

        //========================== PendingIntent 延迟跳转 ==========================
//        Intent intent = new Intent(context, ToDoListActivity.class);
//        PendingIntent pendingIntentClick = PendingIntent.getActivity(context, 0, intent , 0);

        //========================== 显示通知 ==========================
        //1.获取 NotificationManager 对象，用于对通知进行管理
        NotificationManager manager = (NotificationManager)context.getSystemService(NOTIFICATION_SERVICE);
        //2.使用 Builder 构造器来创建 Notification 对象
        Notification notification = new android.support.v4.app.NotificationCompat.Builder(context)
                .setContentTitle("onPrimaryClipChanged")
                .setContentText("是否追加到临时笔记？")
                .setWhen(System.currentTimeMillis())
                .setSmallIcon(R.mipmap.ic_launcher)
                .setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher))
                .setContentIntent(pendingIntentClick)//点击操作
                .setAutoCancel(true)//自动消失
                .setPriority(Notification.PRIORITY_HIGH) //重要级别
                .build();
        //3.显示通知
        manager.notify(1, notification);
    }
}
```
>3.创建 响应通知 的广播

*NotificationBroadcastReceiver.java*
```java
package com.qr.pastenotification;

import android.content.BroadcastReceiver;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

import static android.content.Context.CLIPBOARD_SERVICE;

/**
 * ====================== 通知 广播 ========================
 * 接收"AddTemp.com"的广播
 *  追加临时笔记
 * @author SGamble
 */
public class NotificationBroadcastReceiver extends BroadcastReceiver {
    @Override
    public void onReceive(Context context, Intent intent) {
        String action = intent.getAction();
        if (action.equals("AddTemp.com")) {
            ClipboardManager clipboardManager = (ClipboardManager) context.getSystemService(CLIPBOARD_SERVICE);
            addTemp(context,clipboardManager.getText()+"");
        }
    }

    /**
     * 追加 临时笔记
     * @param content
     */
    private void addTemp(Context context,String content) {
        Log.e("addTemp: ", content);
    }
}
```
>4.启动服务

```java
//========================== 启动粘贴板服务 ==========================
Intent startIntent = new Intent(this, PasteCopyService.class);
startService(startIntent);
```
>5.任务清单

```xml
<!-- ********************* 粘贴板 通知 ********************* -->
<service
	android:name=".PasteCopyService"
	android:enabled="true"
	android:exported="true">
</service>

<receiver
	android:name=".PasteCopyReceiver"
	android:enabled="true"
	android:exported="true">
	<intent-filter>
		<action android:name="AddTemp.com"/>
		<action android:name="PasteCopy.com"/>
	</intent-filter>
</receiver>

<receiver
	android:name=".NotificationBroadcastReceiver"
	android:enabled="true"
	android:exported="true">
	<intent-filter>
		<action android:name="AddTemp.com"/>
		<action android:name="PasteCopy.com"/>
	</intent-filter>
</receiver>
<!-- ********************* 粘贴板 通知 ********************* -->
```',
  'groups' => 'Android',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '144',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000518s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001764s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 144 LIMIT 1 [ RunTime:0.000466s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 144 LIMIT 1 [ RunTime:0.000316s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000308s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000411s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=144,`p_id`=2,`title`='监听剪贴板并发出通知\r',`content`='# 监听剪贴板并发出通知\r\n## 效果\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/1d9LFgDKKe.jpg)\r\n## 源码\r\nhttps://github.com/SSGamble/PasteNotification\r\n\r\n## 实现步骤\r\n>1.创建 监听剪贴板 的服务\r\n\r\n*PasteCopyService.java*\r\n```java\r\npackage com.qr.pastenotification;\r\n\r\nimport android.app.Service;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Intent;\r\nimport android.os.IBinder;\r\nimport android.util.Log;\r\n\r\n/**\r\n * ====================== 监听 粘贴板 服务========================\r\n * 用于监听 剪贴板的变化\r\n * 若剪贴板发生变化 则发送 \"PasteCopy.com\" 的广播，PasteCopyReceiver会接收并处理\r\n * @author SGamble\r\n */\r\npublic class PasteCopyService extends Service {\r\n    private ClipboardManager clipboardManager;\r\n    private final String TAG = \"PasteCopyService\";\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();\r\n        Log.d(TAG, \"onCreate: \");\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        Log.d(TAG, \"onDestroy: \");\r\n    }\r\n\r\n    @Override\r\n    public IBinder onBind(Intent intent) {\r\n        Log.d(TAG, \"onBind: \");\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public int onStartCommand(Intent intent, int flags, int startId) {\r\n        registerClipEvents();\r\n        Log.d(TAG, \"onStartCommand: \");\r\n        return super.onStartCommand(intent, flags, startId);\r\n    }\r\n\r\n    private void registerClipEvents() {\r\n        clipboardManager = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);\r\n        clipboardManager.addPrimaryClipChangedListener(new ClipboardManager.OnPrimaryClipChangedListener() {\r\n            @Override\r\n            public void onPrimaryClipChanged() {\r\n                String content = clipboardManager.getText()+\"\";\r\n\r\n                Log.e(\"onPrimaryClipChanged: \", content);\r\n\r\n                //发送广播\r\n                Intent intent = new Intent();\r\n                intent.setAction(\"PasteCopy.com\");\r\n                sendBroadcast(intent);\r\n            }\r\n        });\r\n    }\r\n}\r\n```\r\n>2.创建 响应剪贴板 的广播\r\n\r\n*PasteCopyReceiver.java*\r\n```java\r\npackage com.qr.pastenotification;\r\n\r\nimport android.app.Notification;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.BitmapFactory;\r\n\r\nimport static android.content.Context.NOTIFICATION_SERVICE;\r\n\r\n/**\r\n * ====================== 剪贴板 广播========================\r\n * 接收到 “PasteCopy.com” 则显示 通知，\r\n * 点击通知则发送 “AddTemp.com” NotificationBroadcastReceiver会接收广播，\r\n * 然后追加临时笔记（数据库）\r\n * @author SGamble\r\n */\r\npublic class PasteCopyReceiver extends BroadcastReceiver {\r\n\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        String action = intent.getAction();\r\n        if (action.equals(\"PasteCopy.com\")) {\r\n            showNotification(context);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示 追加临时笔记 的通知\r\n     * @param context\r\n     */\r\n    private void showNotification(Context context) {\r\n        //========================== 发送 “AddTemp”的广播 ==========================\r\n        Intent intentClick = new Intent(context, NotificationBroadcastReceiver.class);\r\n        intentClick.setAction(\"AddTemp.com\");\r\n        PendingIntent pendingIntentClick = PendingIntent.getBroadcast(context, 900, intentClick, PendingIntent.FLAG_CANCEL_CURRENT);\r\n\r\n        //========================== PendingIntent 延迟跳转 ==========================\r\n//        Intent intent = new Intent(context, ToDoListActivity.class);\r\n//        PendingIntent pendingIntentClick = PendingIntent.getActivity(context, 0, intent , 0);\r\n\r\n        //========================== 显示通知 ==========================\r\n        //1.获取 NotificationManager 对象，用于对通知进行管理\r\n        NotificationManager manager = (NotificationManager)context.getSystemService(NOTIFICATION_SERVICE);\r\n        //2.使用 Builder 构造器来创建 Notification 对象\r\n        Notification notification = new android.support.v4.app.NotificationCompat.Builder(context)\r\n                .setContentTitle(\"onPrimaryClipChanged\")\r\n                .setContentText(\"是否追加到临时笔记？\")\r\n                .setWhen(System.currentTimeMillis())\r\n                .setSmallIcon(R.mipmap.ic_launcher)\r\n                .setLargeIcon(BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_launcher))\r\n                .setContentIntent(pendingIntentClick)//点击操作\r\n                .setAutoCancel(true)//自动消失\r\n                .setPriority(Notification.PRIORITY_HIGH) //重要级别\r\n                .build();\r\n        //3.显示通知\r\n        manager.notify(1, notification);\r\n    }\r\n}\r\n```\r\n>3.创建 响应通知 的广播\r\n\r\n*NotificationBroadcastReceiver.java*\r\n```java\r\npackage com.qr.pastenotification;\r\n\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\n\r\nimport static android.content.Context.CLIPBOARD_SERVICE;\r\n\r\n/**\r\n * ====================== 通知 广播 ========================\r\n * 接收\"AddTemp.com\"的广播\r\n *  追加临时笔记\r\n * @author SGamble\r\n */\r\npublic class NotificationBroadcastReceiver extends BroadcastReceiver {\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        String action = intent.getAction();\r\n        if (action.equals(\"AddTemp.com\")) {\r\n            ClipboardManager clipboardManager = (ClipboardManager) context.getSystemService(CLIPBOARD_SERVICE);\r\n            addTemp(context,clipboardManager.getText()+\"\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 追加 临时笔记\r\n     * @param content\r\n     */\r\n    private void addTemp(Context context,String content) {\r\n        Log.e(\"addTemp: \", content);\r\n    }\r\n}\r\n```\r\n>4.启动服务\r\n\r\n```java\r\n//========================== 启动粘贴板服务 ==========================\r\nIntent startIntent = new Intent(this, PasteCopyService.class);\r\nstartService(startIntent);\r\n```\r\n>5.任务清单\r\n\r\n```xml\r\n<!-- ********************* 粘贴板 通知 ********************* -->\r\n<service\r\n	android:name=\".PasteCopyService\"\r\n	android:enabled=\"true\"\r\n	android:exported=\"true\">\r\n</service>\r\n\r\n<receiver\r\n	android:name=\".PasteCopyReceiver\"\r\n	android:enabled=\"true\"\r\n	android:exported=\"true\">\r\n	<intent-filter>\r\n		<action android:name=\"AddTemp.com\"/>\r\n		<action android:name=\"PasteCopy.com\"/>\r\n	</intent-filter>\r\n</receiver>\r\n\r\n<receiver\r\n	android:name=\".NotificationBroadcastReceiver\"\r\n	android:enabled=\"true\"\r\n	android:exported=\"true\">\r\n	<intent-filter>\r\n		<action android:name=\"AddTemp.com\"/>\r\n		<action android:name=\"PasteCopy.com\"/>\r\n	</intent-filter>\r\n</receiver>\r\n<!-- ********************* 粘贴板 通知 ********************* -->\r\n```',`groups`='Android',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 144 [ RunTime:0.000670s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000867s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000375s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000744s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000297s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/144.html
[ info ] qingrang.top/daily/admin/note/shownote/id/144.html [运行时间：0.049887s][吞吐率：20.05req/s] [内存消耗：1,986.76kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/144',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '144',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000420s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001287s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 144 LIMIT 1 [ RunTime:0.000464s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000302s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/142
[ info ] qingrang.top/daily/admin/note/editnote/id/142 [运行时间：0.056747s][吞吐率：17.62req/s] [内存消耗：2,056.03kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '142',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000476s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001662s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 142 LIMIT 1 [ RunTime:0.000460s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000857s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000332s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/142.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/142.html [运行时间：0.070981s][吞吐率：14.09req/s] [内存消耗：2,130.91kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '19205',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/142',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Android 桌面部件 Widget
[TOC]
## 效果图
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/m38J604bL9.gif)
## 源码
https://github.com/SSGamble/WidgetDemo
## 参考博客
https://www.jianshu.com/p/1eec51bf74be?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation
## 1. 声明 Widget 的属性
在 res 新建 xml 文件夹，创建一个 my_app_widget_info.xml 的文件。
如果 res 下没有 xml 文件，则先创建。
*my_app_widget_info.xml*
```xml
<?xml version="1.0" encoding="utf-8"?>
<appwidget-provider xmlns:android="http://schemas.android.com/apk/res/android"
	android:initialKeyguardLayout="@layout/my_app_widget"
	android:initialLayout="@layout/my_app_widget"
	android:minHeight="40dp"
	android:minWidth="40dp"
	android:previewImage="@drawable/example_appwidget_preview"
	android:resizeMode="horizontal|vertical"
	android:updatePeriodMillis="86400000"
	android:widgetCategory="home_screen">
</appwidget-provider>

android:minWidth : 最小宽度
    android:minHeight ： 最小高度
    android:updatePeriodMillis ： 更新widget的时间间隔(ms)，"86400000"为1个小时，值小于30分钟时，会被设置为30分钟。可以用 service、AlarmManager、Timer 控制。
    android:previewImage ： 预览图片，拖动小部件到桌面时有个预览图
    android:initialLayout ： 加载到桌面时对应的布局文件
    android:resizeMode ： 拉伸的方向。horizontal表示可以水平拉伸，vertical表示可以竖直拉伸
    android:widgetCategory ： 被显示的位置。home_screen：将widget添加到桌面，keyguard：widget可以被添加到锁屏界面。
    android:initialKeyguardLayout ： 加载到锁屏界面时对应的布局文件
```
| 格数  | dp  |
| ------------ | ------------ |
|  1 | 40  |
|  2 |  110 |
|  3 |  180 |
|  4 |  250 |
| n | 70*n-30 |
## 2. 创建 layout 布局文件
>Widget主界面布局

*my_app_widget.xml*
```
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:padding="@dimen/widget_margin">

    <Button
        android:id="@+id/btn_jump"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Jump" />

    <ListView
        android:id="@+id/listView1"
        android:layout_below="@+id/btn_jump"
        android:layout_width="match_parent"
        android:layout_height="match_parent" >
    </ListView>

</RelativeLayout>
```

>列表子项布局

*layout_item.xml*
```xml
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical" >

    <TextView
        android:id="@+id/textView1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Medium Text"
        android:textAppearance="?android:attr/textAppearanceMedium" />

    <TextView
        android:id="@+id/textView2"
        android:layout_below="@+id/textView1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="TextView" />


    <ImageView
        android:id="@+id/del"
        android:background="@mipmap/ic_launcher"
        android:layout_alignParentRight="true"
        android:textSize="20sp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"/>

</RelativeLayout>
```
>跳转后的主界面布局

*activity_main.xml*
```xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.test.widgetdemo.MainActivity">

    <EditText
        android:id="@+id/et"
        android:layout_width="match_parent"
        android:layout_height="50dp"/>
    <Button
        android:id="@+id/btn_add"
        android:layout_below="@+id/et"
        android:text="Add"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>
</RelativeLayout>
```
## 3. 创建 MyAppWidget.java
```java
package com.test.widgetdemo;

import android.app.PendingIntent;
import android.appwidget.AppWidgetManager;
import android.appwidget.AppWidgetProvider;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.RemoteViews;

import static android.R.attr.action;
import static android.R.attr.cacheColorHint;
import static android.content.ContentValues.TAG;

/**
 * ====================== AppWidget ========================
 * @author SGamble
 */
public class MyAppWidget extends AppWidgetProvider {

    private static final String TAG = "MyWidget";
    RemoteViews remoteViews;

    /**
     * package
     */
    static ComponentName getComponentName(Context context) {
        return new ComponentName(context, MyAppWidget.class);
    }

    @Override
    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {
        Log.e(TAG, "onUpdate");

        //设置 ListView
        setListView(context, appWidgetManager, appWidgetIds);
        //获取 RemoteViews
        remoteViews = new RemoteViews(context.getPackageName(), R.layout.my_app_widget);
        //绑定id - 按钮点击事件
        remoteViews.setOnClickPendingIntent(R.id.btn_jump, getJumpPendingIntent(context)); //跳转到主界面
        //发送 del.com 的广播
        sendDelIntentBroadcast(context);
        //更新widget
        appWidgetManager.updateAppWidget(appWidgetIds, remoteViews);
    }

    /**
     * 设置 ListView
     * @author Gamble
     */
    private void setListView(Context context, AppWidgetManager awm, int[] appWidgetIds) {
        for (int appWidgetId : appWidgetIds) {
            Intent intent = new Intent(context, MyWidgetService.class);
            intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);
            intent.setData(Uri.parse(intent.toUri(Intent.URI_INTENT_SCHEME)));
            RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.my_app_widget);
            views.setRemoteAdapter(R.id.listView1, intent);
            awm.updateAppWidget(appWidgetId, views); //设置适配器
            awm.notifyAppWidgetViewDataChanged(appWidgetId, R.id.listView1); //通知数据更新
        }
    }

    /**
     * 发送 del.com 的广播
     * @author Gamble
     */
    private void sendDelIntentBroadcast(Context context) {
        Intent intent = new Intent("del.com");
        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 220, intent, PendingIntent.FLAG_UPDATE_CURRENT);
        remoteViews.setPendingIntentTemplate(R.id.listView1, pendingIntent);
    }

    /**
     * 点击按钮跳转到指定 Activity
     * @author Gamble
     */
    private PendingIntent getJumpPendingIntent(Context context) {
        Intent skipIntent = new Intent(context, MainActivity.class);
        PendingIntent pi = PendingIntent.getActivity(context, 200, skipIntent, PendingIntent.FLAG_CANCEL_CURRENT);
        return pi;
    }

    /**
     * 接收到任意广播时触发
     *  -- 广播需要在 清单 文件中设置响应
     *      <intent-filter>
     *          <action android:name="add.com"/>
     *      </intent-filter>
     * @author Gamble
     */
    @Override
    public void onReceive(Context context, Intent intent) {
        super.onReceive(context, intent);
        switch (intent.getAction()){
            case "add.com":
                Log.e(TAG, "接收到MainActivity传递过来的广播 - 添加操作");
                break;
            case "del.com": //删除
                delEvent(context,intent);
                break;
        }
        updateListView(context,intent); //更新操作
    }

    /**
     * 删除点击的事项
     * @author Gamble
     */
    private void delEvent(Context context,Intent intent) {
        Bundle extras = intent.getExtras();
        int position = extras.getInt("key");
        Data.del(position);
    }

    /**
     * 更新操作
     *  - ListView中数据发生改变
     * @author Gamble
     */
    private void updateListView(Context context,Intent intent) {
        RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.my_app_widget);
        final AppWidgetManager mgr = AppWidgetManager.getInstance(context);
        final ComponentName cn = new ComponentName(context, MyAppWidget.class);
        mgr.notifyAppWidgetViewDataChanged(mgr.getAppWidgetIds(cn), R.id.listView1);
        mgr.updateAppWidget(cn, remoteViews);
    }
}
```
## 4.创建 MyWidgetService.java
```java
package com.test.widgetdemo;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.RemoteViews;
import android.widget.RemoteViewsService;
import java.util.List;
import static com.test.widgetdemo.Data.getLst;

/**
 * ====================== WidgetService ========================
 *
 * @author SGamble
 */
public class MyWidgetService extends RemoteViewsService {

    @Override
    public RemoteViewsFactory onGetViewFactory(Intent intent) {
        return new MyWidgetFactory(getApplicationContext(), intent);
    }

    public static class MyWidgetFactory implements RemoteViewsFactory {
        private Context mContext;
        private List<String> lst; //列表数据

        public MyWidgetFactory(Context context, Intent intent) {
            mContext = context;
            lst = getLst(); //获取列表
        }

        @Override
        public RemoteViews getViewAt(int position) {
            if (position < 0 || position >= getCount()) {
                return null;
            }
            RemoteViews views = new RemoteViews(mContext.getPackageName(), R.layout.layout_item);
            views.setTextViewText(R.id.textView1, lst.get(position));//设置 ListView 的显示
            views.setOnClickFillInIntent(R.id.del, delIntent(position));//ListView - item 点击事件
            return views;
        }

        /**
         * 删除Intent
         * @author Gamble
         */
        private Intent delIntent(int position) {
            Bundle extras = new Bundle();
            extras.putInt("key", position); //传递数据 - item - position
            Intent delIntent = new Intent();
            delIntent.setAction("del.com"); //设置意图
            delIntent.putExtras(extras); //放入需要传递的数据
            return delIntent;
        }

        @Override
        public int getCount() {
            return lst.size();
        }

        @Override
        public long getItemId(int position) {
            return position;
        }

        /**
         * 在调用getViewAt的过程中，显示一个LoadingView。
         * 如果return null，那么将会有一个默认的loadingView
         * @author Gamble
         */
        @Override
        public RemoteViews getLoadingView() {
            return null;
        }

        @Override
        public int getViewTypeCount() {
            return 1;
        }

        @Override
        public boolean hasStableIds() {
            return true;
        }

        @Override
        public void onCreate() { }

        @Override
        public void onDataSetChanged() { }

        @Override
        public void onDestroy() { }
    }
}
```
## 6.跳转后的界面操作
```java
Button btn = (Button)findViewById(R.id.btn_add);
btn.setOnClickListener(new View.OnClickListener() {
	@Override
	public void onClick(View v) {
		EditText et = (EditText)findViewById(R.id.et);
		Data.addLst(et.getText().toString()); //数据添加
		//添加待办事项 - Intent
		Intent intent = new Intent("add.com");
		sendBroadcast(intent); //发送 add.com 的广播
		finish();
	}
});
```
',
  'groups' => 'Android',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '142',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000663s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001616s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 142 LIMIT 1 [ RunTime:0.000578s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 142 LIMIT 1 [ RunTime:0.000505s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001450s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000439s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000367s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=142,`p_id`=2,`title`='Android 桌面部件 Widget\r',`content`='# Android 桌面部件 Widget\r\n[TOC]\r\n## 效果图\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/m38J604bL9.gif)\r\n## 源码\r\nhttps://github.com/SSGamble/WidgetDemo\r\n## 参考博客\r\nhttps://www.jianshu.com/p/1eec51bf74be?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation\r\n## 1. 声明 Widget 的属性\r\n在 res 新建 xml 文件夹，创建一个 my_app_widget_info.xml 的文件。\r\n如果 res 下没有 xml 文件，则先创建。\r\n*my_app_widget_info.xml*\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<appwidget-provider xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n	android:initialKeyguardLayout=\"@layout/my_app_widget\"\r\n	android:initialLayout=\"@layout/my_app_widget\"\r\n	android:minHeight=\"40dp\"\r\n	android:minWidth=\"40dp\"\r\n	android:previewImage=\"@drawable/example_appwidget_preview\"\r\n	android:resizeMode=\"horizontal|vertical\"\r\n	android:updatePeriodMillis=\"86400000\"\r\n	android:widgetCategory=\"home_screen\">\r\n</appwidget-provider>\r\n\r\nandroid:minWidth : 最小宽度\r\n    android:minHeight ： 最小高度\r\n    android:updatePeriodMillis ： 更新widget的时间间隔(ms)，\"86400000\"为1个小时，值小于30分钟时，会被设置为30分钟。可以用 service、AlarmManager、Timer 控制。\r\n    android:previewImage ： 预览图片，拖动小部件到桌面时有个预览图\r\n    android:initialLayout ： 加载到桌面时对应的布局文件\r\n    android:resizeMode ： 拉伸的方向。horizontal表示可以水平拉伸，vertical表示可以竖直拉伸\r\n    android:widgetCategory ： 被显示的位置。home_screen：将widget添加到桌面，keyguard：widget可以被添加到锁屏界面。\r\n    android:initialKeyguardLayout ： 加载到锁屏界面时对应的布局文件\r\n```\r\n| 格数  | dp  |\r\n| ------------ | ------------ |\r\n|  1 | 40  |\r\n|  2 |  110 |\r\n|  3 |  180 |\r\n|  4 |  250 |\r\n| n | 70*n-30 |\r\n## 2. 创建 layout 布局文件\r\n>Widget主界面布局\r\n\r\n*my_app_widget.xml*\r\n```\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:padding=\"@dimen/widget_margin\">\r\n\r\n    <Button\r\n        android:id=\"@+id/btn_jump\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Jump\" />\r\n\r\n    <ListView\r\n        android:id=\"@+id/listView1\"\r\n        android:layout_below=\"@+id/btn_jump\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" >\r\n    </ListView>\r\n\r\n</RelativeLayout>\r\n```\r\n\r\n>列表子项布局\r\n\r\n*layout_item.xml*\r\n```xml\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\" >\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Medium Text\"\r\n        android:textAppearance=\"?android:attr/textAppearanceMedium\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView2\"\r\n        android:layout_below=\"@+id/textView1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"TextView\" />\r\n\r\n\r\n    <ImageView\r\n        android:id=\"@+id/del\"\r\n        android:background=\"@mipmap/ic_launcher\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:textSize=\"20sp\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"/>\r\n\r\n</RelativeLayout>\r\n```\r\n>跳转后的主界面布局\r\n\r\n*activity_main.xml*\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/activity_main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\r\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\r\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\r\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\r\n    tools:context=\"com.test.widgetdemo.MainActivity\">\r\n\r\n    <EditText\r\n        android:id=\"@+id/et\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"/>\r\n    <Button\r\n        android:id=\"@+id/btn_add\"\r\n        android:layout_below=\"@+id/et\"\r\n        android:text=\"Add\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n</RelativeLayout>\r\n```\r\n## 3. 创建 MyAppWidget.java\r\n```java\r\npackage com.test.widgetdemo;\r\n\r\nimport android.app.PendingIntent;\r\nimport android.appwidget.AppWidgetManager;\r\nimport android.appwidget.AppWidgetProvider;\r\nimport android.content.ComponentName;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.widget.RemoteViews;\r\n\r\nimport static android.R.attr.action;\r\nimport static android.R.attr.cacheColorHint;\r\nimport static android.content.ContentValues.TAG;\r\n\r\n/**\r\n * ====================== AppWidget ========================\r\n * @author SGamble\r\n */\r\npublic class MyAppWidget extends AppWidgetProvider {\r\n\r\n    private static final String TAG = \"MyWidget\";\r\n    RemoteViews remoteViews;\r\n\r\n    /**\r\n     * package\r\n     */\r\n    static ComponentName getComponentName(Context context) {\r\n        return new ComponentName(context, MyAppWidget.class);\r\n    }\r\n\r\n    @Override\r\n    public void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {\r\n        Log.e(TAG, \"onUpdate\");\r\n\r\n        //设置 ListView\r\n        setListView(context, appWidgetManager, appWidgetIds);\r\n        //获取 RemoteViews\r\n        remoteViews = new RemoteViews(context.getPackageName(), R.layout.my_app_widget);\r\n        //绑定id - 按钮点击事件\r\n        remoteViews.setOnClickPendingIntent(R.id.btn_jump, getJumpPendingIntent(context)); //跳转到主界面\r\n        //发送 del.com 的广播\r\n        sendDelIntentBroadcast(context);\r\n        //更新widget\r\n        appWidgetManager.updateAppWidget(appWidgetIds, remoteViews);\r\n    }\r\n\r\n    /**\r\n     * 设置 ListView\r\n     * @author Gamble\r\n     */\r\n    private void setListView(Context context, AppWidgetManager awm, int[] appWidgetIds) {\r\n        for (int appWidgetId : appWidgetIds) {\r\n            Intent intent = new Intent(context, MyWidgetService.class);\r\n            intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, appWidgetId);\r\n            intent.setData(Uri.parse(intent.toUri(Intent.URI_INTENT_SCHEME)));\r\n            RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.my_app_widget);\r\n            views.setRemoteAdapter(R.id.listView1, intent);\r\n            awm.updateAppWidget(appWidgetId, views); //设置适配器\r\n            awm.notifyAppWidgetViewDataChanged(appWidgetId, R.id.listView1); //通知数据更新\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 发送 del.com 的广播\r\n     * @author Gamble\r\n     */\r\n    private void sendDelIntentBroadcast(Context context) {\r\n        Intent intent = new Intent(\"del.com\");\r\n        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 220, intent, PendingIntent.FLAG_UPDATE_CURRENT);\r\n        remoteViews.setPendingIntentTemplate(R.id.listView1, pendingIntent);\r\n    }\r\n\r\n    /**\r\n     * 点击按钮跳转到指定 Activity\r\n     * @author Gamble\r\n     */\r\n    private PendingIntent getJumpPendingIntent(Context context) {\r\n        Intent skipIntent = new Intent(context, MainActivity.class);\r\n        PendingIntent pi = PendingIntent.getActivity(context, 200, skipIntent, PendingIntent.FLAG_CANCEL_CURRENT);\r\n        return pi;\r\n    }\r\n\r\n    /**\r\n     * 接收到任意广播时触发\r\n     *  -- 广播需要在 清单 文件中设置响应\r\n     *      <intent-filter>\r\n     *          <action android:name=\"add.com\"/>\r\n     *      </intent-filter>\r\n     * @author Gamble\r\n     */\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n        super.onReceive(context, intent);\r\n        switch (intent.getAction()){\r\n            case \"add.com\":\r\n                Log.e(TAG, \"接收到MainActivity传递过来的广播 - 添加操作\");\r\n                break;\r\n            case \"del.com\": //删除\r\n                delEvent(context,intent);\r\n                break;\r\n        }\r\n        updateListView(context,intent); //更新操作\r\n    }\r\n\r\n    /**\r\n     * 删除点击的事项\r\n     * @author Gamble\r\n     */\r\n    private void delEvent(Context context,Intent intent) {\r\n        Bundle extras = intent.getExtras();\r\n        int position = extras.getInt(\"key\");\r\n        Data.del(position);\r\n    }\r\n\r\n    /**\r\n     * 更新操作\r\n     *  - ListView中数据发生改变\r\n     * @author Gamble\r\n     */\r\n    private void updateListView(Context context,Intent intent) {\r\n        RemoteViews remoteViews = new RemoteViews(context.getPackageName(), R.layout.my_app_widget);\r\n        final AppWidgetManager mgr = AppWidgetManager.getInstance(context);\r\n        final ComponentName cn = new ComponentName(context, MyAppWidget.class);\r\n        mgr.notifyAppWidgetViewDataChanged(mgr.getAppWidgetIds(cn), R.id.listView1);\r\n        mgr.updateAppWidget(cn, remoteViews);\r\n    }\r\n}\r\n```\r\n## 4.创建 MyWidgetService.java\r\n```java\r\npackage com.test.widgetdemo;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.RemoteViews;\r\nimport android.widget.RemoteViewsService;\r\nimport java.util.List;\r\nimport static com.test.widgetdemo.Data.getLst;\r\n\r\n/**\r\n * ====================== WidgetService ========================\r\n *\r\n * @author SGamble\r\n */\r\npublic class MyWidgetService extends RemoteViewsService {\r\n\r\n    @Override\r\n    public RemoteViewsFactory onGetViewFactory(Intent intent) {\r\n        return new MyWidgetFactory(getApplicationContext(), intent);\r\n    }\r\n\r\n    public static class MyWidgetFactory implements RemoteViewsFactory {\r\n        private Context mContext;\r\n        private List<String> lst; //列表数据\r\n\r\n        public MyWidgetFactory(Context context, Intent intent) {\r\n            mContext = context;\r\n            lst = getLst(); //获取列表\r\n        }\r\n\r\n        @Override\r\n        public RemoteViews getViewAt(int position) {\r\n            if (position < 0 || position >= getCount()) {\r\n                return null;\r\n            }\r\n            RemoteViews views = new RemoteViews(mContext.getPackageName(), R.layout.layout_item);\r\n            views.setTextViewText(R.id.textView1, lst.get(position));//设置 ListView 的显示\r\n            views.setOnClickFillInIntent(R.id.del, delIntent(position));//ListView - item 点击事件\r\n            return views;\r\n        }\r\n\r\n        /**\r\n         * 删除Intent\r\n         * @author Gamble\r\n         */\r\n        private Intent delIntent(int position) {\r\n            Bundle extras = new Bundle();\r\n            extras.putInt(\"key\", position); //传递数据 - item - position\r\n            Intent delIntent = new Intent();\r\n            delIntent.setAction(\"del.com\"); //设置意图\r\n            delIntent.putExtras(extras); //放入需要传递的数据\r\n            return delIntent;\r\n        }\r\n\r\n        @Override\r\n        public int getCount() {\r\n            return lst.size();\r\n        }\r\n\r\n        @Override\r\n        public long getItemId(int position) {\r\n            return position;\r\n        }\r\n\r\n        /**\r\n         * 在调用getViewAt的过程中，显示一个LoadingView。\r\n         * 如果return null，那么将会有一个默认的loadingView\r\n         * @author Gamble\r\n         */\r\n        @Override\r\n        public RemoteViews getLoadingView() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public int getViewTypeCount() {\r\n            return 1;\r\n        }\r\n\r\n        @Override\r\n        public boolean hasStableIds() {\r\n            return true;\r\n        }\r\n\r\n        @Override\r\n        public void onCreate() { }\r\n\r\n        @Override\r\n        public void onDataSetChanged() { }\r\n\r\n        @Override\r\n        public void onDestroy() { }\r\n    }\r\n}\r\n```\r\n## 6.跳转后的界面操作\r\n```java\r\nButton btn = (Button)findViewById(R.id.btn_add);\r\nbtn.setOnClickListener(new View.OnClickListener() {\r\n	@Override\r\n	public void onClick(View v) {\r\n		EditText et = (EditText)findViewById(R.id.et);\r\n		Data.addLst(et.getText().toString()); //数据添加\r\n		//添加待办事项 - Intent\r\n		Intent intent = new Intent(\"add.com\");\r\n		sendBroadcast(intent); //发送 add.com 的广播\r\n		finish();\r\n	}\r\n});\r\n```\r\n',`groups`='Android',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 142 [ RunTime:0.000798s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.001359s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000758s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000307s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:36+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/142.html
[ info ] qingrang.top/daily/admin/note/shownote/id/142.html [运行时间：0.049175s][吞吐率：20.34req/s] [内存消耗：1,992.38kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/142',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '142',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000449s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001170s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 142 LIMIT 1 [ RunTime:0.000409s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000870s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000286s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:39+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/143
[ info ] qingrang.top/daily/admin/note/editnote/id/143 [运行时间：0.057635s][吞吐率：17.35req/s] [内存消耗：2,029.84kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '143',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000526s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001604s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 143 LIMIT 1 [ RunTime:0.000516s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001135s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000411s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:50+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/143.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/143.html [运行时间：0.068341s][吞吐率：14.63req/s] [内存消耗：2,066.14kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '6717',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/143',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 军舰岛
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/LJ4iE6A590.png)

这是日本著名的鬼城-端岛，因外形酷似军舰，又名军舰岛，端岛位于日本长崎海岸西南，距长崎港18公里，面积只有0.063平方公里，端岛原本是一座荒无人烟，无人问津的小岛，1810年有人在哪里发现储量丰富的海底煤矿，1887年海底煤矿正式建立，1890年开始，三菱买下了小岛，开始规模化经营海底煤矿，岛上原本没有住宅区，工人需要乘船上班，三菱公司为了更好的压榨，陆续修建了宿舍，学校，医院等设施，这座0.063平方公里的小岛上曾聚集数万人，将近一个世纪内，它都是日本的主要煤矿产区，源源不断地向日本的工业输血，1974年海底煤矿才彻底关闭，2001年移交管辖权给政府，2015日本申遗成功，如今已经成为众多游客的旅游圣地，和众多电影的取景之地。
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/lFC7Am3cI3.png)

然而,，这看似美丽的小岛，地下埋葬着中韩两国的冤魂，藏着多数人不知的秘密。二战爆发后，日本劳动力短缺，日军强行征发大批中国和韩国劳工，日夜不停，强行劳作。岛上生活差距悬殊，日本人每天过着锦衣玉食，有舞会，有晚宴，生活如常。可一墙之隔，每日被炭黑袭身的劳工们却如鬼魅一般。《军舰岛》更是把着力点放在了岛上朝鲜人自己的“窝里斗”，以体现真实的人性一面。

历史书经常会说，我们是一个充满苦难的民族。如果翻开中东或者朝鲜的历史，会知道有些小国的悲情与无奈，给蝼蚁般的个人带来的苦难，比大国的跌宕更甚。有些民族的国民，两百年了，如今依然在战火或战争的阴霾下挣扎。

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/h9Kc6DA4j1.jpg)

这个镜头给我的印象尤为深刻，不带英雄儿女的情绪，不带压抑的杀敌复仇快感，只是看着这个修罗场的惨烈，人间何以如此多悲剧，惨如炼狱。我们何其幸运，生活在如今的时代。最后一个镜头，人群望着蘑菇云时，路人的那句台词。虽然还是以同情同族为名，但起码这句台词要表达的不是泄愤，而是慈悲。',
  'groups' => 'FilmReview',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '143',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000655s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001495s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 143 LIMIT 1 [ RunTime:0.000536s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 143 LIMIT 1 [ RunTime:0.000331s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001034s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000427s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000297s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000286s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=143,`p_id`=20,`title`='军舰岛\r',`content`='# 军舰岛\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/LJ4iE6A590.png)\r\n\r\n这是日本著名的鬼城-端岛，因外形酷似军舰，又名军舰岛，端岛位于日本长崎海岸西南，距长崎港18公里，面积只有0.063平方公里，端岛原本是一座荒无人烟，无人问津的小岛，1810年有人在哪里发现储量丰富的海底煤矿，1887年海底煤矿正式建立，1890年开始，三菱买下了小岛，开始规模化经营海底煤矿，岛上原本没有住宅区，工人需要乘船上班，三菱公司为了更好的压榨，陆续修建了宿舍，学校，医院等设施，这座0.063平方公里的小岛上曾聚集数万人，将近一个世纪内，它都是日本的主要煤矿产区，源源不断地向日本的工业输血，1974年海底煤矿才彻底关闭，2001年移交管辖权给政府，2015日本申遗成功，如今已经成为众多游客的旅游圣地，和众多电影的取景之地。\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/lFC7Am3cI3.png)\r\n\r\n然而,，这看似美丽的小岛，地下埋葬着中韩两国的冤魂，藏着多数人不知的秘密。二战爆发后，日本劳动力短缺，日军强行征发大批中国和韩国劳工，日夜不停，强行劳作。岛上生活差距悬殊，日本人每天过着锦衣玉食，有舞会，有晚宴，生活如常。可一墙之隔，每日被炭黑袭身的劳工们却如鬼魅一般。《军舰岛》更是把着力点放在了岛上朝鲜人自己的“窝里斗”，以体现真实的人性一面。\r\n\r\n历史书经常会说，我们是一个充满苦难的民族。如果翻开中东或者朝鲜的历史，会知道有些小国的悲情与无奈，给蝼蚁般的个人带来的苦难，比大国的跌宕更甚。有些民族的国民，两百年了，如今依然在战火或战争的阴霾下挣扎。\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/h9Kc6DA4j1.jpg)\r\n\r\n这个镜头给我的印象尤为深刻，不带英雄儿女的情绪，不带压抑的杀敌复仇快感，只是看着这个修罗场的惨烈，人间何以如此多悲剧，惨如炼狱。我们何其幸运，生活在如今的时代。最后一个镜头，人群望着蘑菇云时，路人的那句台词。虽然还是以同情同族为名，但起码这句台词要表达的不是泄愤，而是慈悲。',`groups`='FilmReview',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 143 [ RunTime:0.000642s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.001255s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'FilmReview' [ RunTime:0.000324s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000797s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=21  WHERE  `groups` = 'FilmReview' [ RunTime:0.000313s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/143.html
[ info ] qingrang.top/daily/admin/note/shownote/id/143.html [运行时间：0.051409s][吞吐率：19.45req/s] [内存消耗：1,982.20kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/143',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '143',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000482s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001205s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 143 LIMIT 1 [ RunTime:0.000530s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000878s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000286s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:54+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/146
[ info ] qingrang.top/daily/admin/note/editnote/id/146 [运行时间：0.048718s][吞吐率：20.53req/s] [内存消耗：2,027.64kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '146',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000561s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001302s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 146 LIMIT 1 [ RunTime:0.000491s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000847s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000299s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/146.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/146.html [运行时间：0.066660s][吞吐率：15.00req/s] [内存消耗：2,048.03kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '283',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/146',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# jQuery 全屏滚动
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/9L6dKEk7fC.gif)
## 源码
https://github.com/SSGamble/roll',
  'groups' => 'WebFront-end',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '146',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000522s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001306s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 146 LIMIT 1 [ RunTime:0.000384s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 146 LIMIT 1 [ RunTime:0.000377s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001235s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'WebFront-end' LIMIT 1 [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000327s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=146,`p_id`=2,`title`='jQuery 全屏滚动\r',`content`='# jQuery 全屏滚动\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/9L6dKEk7fC.gif)\r\n## 源码\r\nhttps://github.com/SSGamble/roll',`groups`='WebFront-end',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 146 [ RunTime:0.000505s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'WebFront-end' LIMIT 1 [ RunTime:0.000839s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=12  WHERE  `groups` = 'WebFront-end' [ RunTime:0.000324s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'WebFront-end' LIMIT 1 [ RunTime:0.001047s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=12  WHERE  `groups` = 'WebFront-end' [ RunTime:0.000351s ]
---------------------------------------------------------------
[ 2018-11-06T17:47:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/146.html
[ info ] qingrang.top/daily/admin/note/shownote/id/146.html [运行时间：0.154795s][吞吐率：6.46req/s] [内存消耗：1,980.04kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/146',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '146',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000686s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002108s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 146 LIMIT 1 [ RunTime:0.000633s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001556s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.001308s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:00+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/
[ info ] qingrang.top/daily/admin/note/editnote/id/ [运行时间：0.057026s][吞吐率：17.54req/s] [内存消耗：2,026.37kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000468s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001290s ]
[ sql ] [ SQL ] SELECT * FROM `note` LIMIT 1 [ RunTime:0.000423s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000954s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000352s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:07+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/151
[ info ] qingrang.top/daily/admin/note/editnote/id/151 [运行时间：0.074740s][吞吐率：13.38req/s] [内存消耗：2,052.94kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '151',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000569s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001300s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 151 LIMIT 1 [ RunTime:0.000559s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001236s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000342s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:16+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/151.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/151.html [运行时间：0.071468s][吞吐率：13.99req/s] [内存消耗：2,111.19kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '15297',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/151',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Jsoup（ WebView 加载链接，图片自适应）
## 1. 添加 Jar 包
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/JCG6c6ADal.png)
## 2. 基本使用(涉及网络，需处理线程)
```java
public static void jsoup(){
	try {
		//从一个URL加载一个Document对象。
		Document doc = Jsoup.connect("http://wufazhuce.com/article/2894.html").get();
		//选择“title”所在节点
		Elements title = doc.select("h2.articulo-titulo");
		//对于一个元素中的文本，可以使用Element.text()方法
		Log.e("jsoup",title.get(0).text());
		//选择“作者”所在节点
		Elements author = doc.select("p.articulo-autor");
		//对于一个元素中的文本，可以使用Element.text()方法
		Log.e("jsoup",author.get(0).text());
		//选择“正文”所在节点
		Elements content = doc.getElementsByClass("articulo-contenido");
		String str="";
		for(Element e:content){
			str += e.select("p").text();
		}
		Log.e("jsoup",str);
		Log.e("jsoup",str.length()+"");
		System.out.println(str);

	}catch(Exception e) {
		Log.e("jsoup", "error---"+e.toString());
	}
}
```
## 爬取 One·一个 数据 Demo
>1.Link实体

```java
package com.ds.groupon.model;

/**
 * ====================== 外链 ========================
 * 爬取页面的连接信息
 * @author SGamble
 */
public class Link {
    private String title;
    private String url;
    private String desc;

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public String getDesc() {
        return desc;
    }

    public void setDesc(String desc) {
        this.desc = desc;
    }
}
```
>2.主界面 爬取数据，将爬取的数据存储在 List 列表中

```java
package com.ds.groupon.activity;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ListView;
import com.ds.groupon.R;
import com.ds.groupon.adapter.LinkAdapter;
import com.ds.groupon.base.BaseActivity;
import com.ds.groupon.model.Link;
import org.jsoup.Connection;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ====================== 外链界面 ========================
 * 爬取了一些 我关心的网站 上的信息，做了一个整合，方便我查看
 * @author SGamble
 */
public class OneActivity extends BaseActivity {
    List<Link> mArticleLst = new ArrayList<>(); //One 文章
    List<Link> mQuestionLst = new ArrayList<>(); //One 问题
    List<Link> mTravelLst = new ArrayList<>(); //蚂蜂窝 游记
    List<Link> mLinkLst = new ArrayList<>(); //所有连接 Lst

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_one);

        // 开辟一个线程
        new Thread(runnable).start();
    }

    Runnable runnable = new Runnable(){
        @Override
        public void run() {
            oneInfo();
            travelInfo();
            // 执行完毕后给handler发送一个空消息
            handler.sendEmptyMessage(0);
        }
    };

    Handler handler = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            initLst();
        }
    };

    /**
     * 设置 ListView 数据显示
     */
    private void initLst() {
        LinkAdapter adapter = new LinkAdapter(OneActivity.this, R.layout.link_item, mLinkLst);
        ListView listView = (ListView) findViewById(R.id.lv_link);
        listView.setAdapter(adapter);

        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                showLogE("...");
                Link link = mLinkLst.get(position);
                showLogE(link.getUrl());
                intent2ActivityData(OneViewActivity.class,"url",link.getUrl());
            }
        });
    }

    /**
     * 爬取 《蚂蜂窝》 的头条
     */
    private void travelInfo() {
        String url = "http://www.mafengwo.cn/";
        Connection conn = Jsoup.connect(url);
        // 修改http包中的header,伪装成浏览器进行抓取
        conn.header("User-Agent", "Mozilla/5.0 (X11; Linux x86_64; rv:32.0) Gecko/    20100101 Firefox/32.0");
        Document doc = null;
        try {
            doc = conn.get();
        } catch (IOException e) {
            e.printStackTrace();
        }
        Elements links = doc.select("a");
        for(Element element : links) {
            Link o = new Link();
            String link = element.attr("href");
            o.setDesc("蚂蜂窝");
            o.setTitle(element.text());
            o.setUrl("http://www.mafengwo.cn/"+link);
            if (link.contains("/i/")) {
                mTravelLst.add(o);
            }
        }
        mLinkLst.add(mTravelLst.get(1));
    }

    /**
     * 爬取《One·一个》的相关信息（每日一问，每日一问）
     */
    private void oneInfo(){
        String url = "http://wufazhuce.com/";
        Connection conn = Jsoup.connect(url);
        // 修改http包中的header,伪装成浏览器进行抓取
        conn.header("User-Agent", "Mozilla/5.0 (X11; Linux x86_64; rv:32.0) Gecko/    20100101 Firefox/32.0");
        Document doc = null;
        try {
            doc = conn.get();
        } catch (IOException e) {
            e.printStackTrace();
        }
        Elements links = doc.select("a");
        for(Element element : links) {
            Link o = new Link();
            String a = element.attr("href");
            String s = element.text();
            if (a.contains("article")) {
                o.setUrl(a);
                o.setTitle(s);
                o.setDesc("One·A");
                mArticleLst.add(o);
            } else if (a.contains("question")) {
                o.setUrl(a);
                o.setTitle(s);
                o.setDesc("One·Q");
                mQuestionLst.add(o);
            }
        }
        mLinkLst.add(mArticleLst.get(0));
        mLinkLst.add(mQuestionLst.get(0));
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        finish();
    }
}
```
>3.显示爬取到的数据（WebView加载链接，图片自适应）

```java
package com.ds.groupon.activity;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import com.ds.groupon.R;
import com.ds.groupon.base.BaseActivity;

/**
 * ====================== WebView界面 ========================
 * 查看外链
 * @author SGamble
 */
public class OneViewActivity extends BaseActivity {
    String url;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_one_view);

        Intent intent = getIntent();
        url = intent.getStringExtra("url");

        initWebView(url);
    }

    private void initWebView(String url) {
        WebView webView = (WebView)findViewById(R.id.WebView);
        webView.loadUrl(url);
        webView.setWebViewClient(new MyWebViewClient());
        //声明WebSettings子类
        WebSettings webSettings = webView.getSettings();
        //设置自适应屏幕，两者合用
        webSettings.setUseWideViewPort(true); //将图片调整到适合webview的大小
        webSettings.setLoadWithOverviewMode(true); // 缩放至屏幕的大小
        webSettings.setJavaScriptEnabled(true);//支持js
        webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);
    }

    private class MyWebViewClient extends WebViewClient {
        @Override
        public void onPageFinished(WebView view, String url) {
            super.onPageFinished(view, url);
            imgReset(view);//重置webview中img标签的图片大小
        }

        @Override
        public boolean shouldOverrideUrlLoading(WebView view, String url) {
            if(url.startsWith("http:") || url.startsWith("https:") ) {
                view.loadUrl(url);
                return false;
            }else{
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
                startActivity(intent);
                return true;
            }
        }
    }

    /**
     * 对图片进行重置大小，宽度就是手机屏幕宽度，高度根据宽度比便自动缩放
     * @param view
     */
    private void imgReset(WebView view) {
        view.loadUrl("javascript:(function(){" +
                "var objs = document.getElementsByTagName(\'img\'); " +
                "for(var i=0;i<objs.length;i++)  " +
                "{"
                + "var img = objs[i];   " +
                "    img.style.maxWidth = \'100%\'; img.style.height = \'auto\';  " +
                "}" +
                "})()");
    }
}
```',
  'groups' => 'Android',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '151',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000508s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001485s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 151 LIMIT 1 [ RunTime:0.000697s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 151 LIMIT 1 [ RunTime:0.000814s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001730s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.000354s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000357s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=151,`p_id`=2,`title`='Jsoup（ WebView 加载链接，图片自适应）\r',`content`='# Jsoup（ WebView 加载链接，图片自适应）\r\n## 1. 添加 Jar 包\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/JCG6c6ADal.png)\r\n## 2. 基本使用(涉及网络，需处理线程)\r\n```java\r\npublic static void jsoup(){\r\n	try {\r\n		//从一个URL加载一个Document对象。\r\n		Document doc = Jsoup.connect(\"http://wufazhuce.com/article/2894.html\").get();\r\n		//选择“title”所在节点\r\n		Elements title = doc.select(\"h2.articulo-titulo\");\r\n		//对于一个元素中的文本，可以使用Element.text()方法\r\n		Log.e(\"jsoup\",title.get(0).text());\r\n		//选择“作者”所在节点\r\n		Elements author = doc.select(\"p.articulo-autor\");\r\n		//对于一个元素中的文本，可以使用Element.text()方法\r\n		Log.e(\"jsoup\",author.get(0).text());\r\n		//选择“正文”所在节点\r\n		Elements content = doc.getElementsByClass(\"articulo-contenido\");\r\n		String str=\"\";\r\n		for(Element e:content){\r\n			str += e.select(\"p\").text();\r\n		}\r\n		Log.e(\"jsoup\",str);\r\n		Log.e(\"jsoup\",str.length()+\"\");\r\n		System.out.println(str);\r\n\r\n	}catch(Exception e) {\r\n		Log.e(\"jsoup\", \"error---\"+e.toString());\r\n	}\r\n}\r\n```\r\n## 爬取 One·一个 数据 Demo\r\n>1.Link实体\r\n\r\n```java\r\npackage com.ds.groupon.model;\r\n\r\n/**\r\n * ====================== 外链 ========================\r\n * 爬取页面的连接信息\r\n * @author SGamble\r\n */\r\npublic class Link {\r\n    private String title;\r\n    private String url;\r\n    private String desc;\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    public String getUrl() {\r\n        return url;\r\n    }\r\n\r\n    public void setUrl(String url) {\r\n        this.url = url;\r\n    }\r\n\r\n    public String getDesc() {\r\n        return desc;\r\n    }\r\n\r\n    public void setDesc(String desc) {\r\n        this.desc = desc;\r\n    }\r\n}\r\n```\r\n>2.主界面 爬取数据，将爬取的数据存储在 List 列表中\r\n\r\n```java\r\npackage com.ds.groupon.activity;\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ListView;\r\nimport com.ds.groupon.R;\r\nimport com.ds.groupon.adapter.LinkAdapter;\r\nimport com.ds.groupon.base.BaseActivity;\r\nimport com.ds.groupon.model.Link;\r\nimport org.jsoup.Connection;\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\nimport org.jsoup.nodes.Element;\r\nimport org.jsoup.select.Elements;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * ====================== 外链界面 ========================\r\n * 爬取了一些 我关心的网站 上的信息，做了一个整合，方便我查看\r\n * @author SGamble\r\n */\r\npublic class OneActivity extends BaseActivity {\r\n    List<Link> mArticleLst = new ArrayList<>(); //One 文章\r\n    List<Link> mQuestionLst = new ArrayList<>(); //One 问题\r\n    List<Link> mTravelLst = new ArrayList<>(); //蚂蜂窝 游记\r\n    List<Link> mLinkLst = new ArrayList<>(); //所有连接 Lst\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_one);\r\n\r\n        // 开辟一个线程\r\n        new Thread(runnable).start();\r\n    }\r\n\r\n    Runnable runnable = new Runnable(){\r\n        @Override\r\n        public void run() {\r\n            oneInfo();\r\n            travelInfo();\r\n            // 执行完毕后给handler发送一个空消息\r\n            handler.sendEmptyMessage(0);\r\n        }\r\n    };\r\n\r\n    Handler handler = new Handler(){\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n            super.handleMessage(msg);\r\n            initLst();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 设置 ListView 数据显示\r\n     */\r\n    private void initLst() {\r\n        LinkAdapter adapter = new LinkAdapter(OneActivity.this, R.layout.link_item, mLinkLst);\r\n        ListView listView = (ListView) findViewById(R.id.lv_link);\r\n        listView.setAdapter(adapter);\r\n\r\n        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                showLogE(\"...\");\r\n                Link link = mLinkLst.get(position);\r\n                showLogE(link.getUrl());\r\n                intent2ActivityData(OneViewActivity.class,\"url\",link.getUrl());\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 爬取 《蚂蜂窝》 的头条\r\n     */\r\n    private void travelInfo() {\r\n        String url = \"http://www.mafengwo.cn/\";\r\n        Connection conn = Jsoup.connect(url);\r\n        // 修改http包中的header,伪装成浏览器进行抓取\r\n        conn.header(\"User-Agent\", \"Mozilla/5.0 (X11; Linux x86_64; rv:32.0) Gecko/    20100101 Firefox/32.0\");\r\n        Document doc = null;\r\n        try {\r\n            doc = conn.get();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Elements links = doc.select(\"a\");\r\n        for(Element element : links) {\r\n            Link o = new Link();\r\n            String link = element.attr(\"href\");\r\n            o.setDesc(\"蚂蜂窝\");\r\n            o.setTitle(element.text());\r\n            o.setUrl(\"http://www.mafengwo.cn/\"+link);\r\n            if (link.contains(\"/i/\")) {\r\n                mTravelLst.add(o);\r\n            }\r\n        }\r\n        mLinkLst.add(mTravelLst.get(1));\r\n    }\r\n\r\n    /**\r\n     * 爬取《One·一个》的相关信息（每日一问，每日一问）\r\n     */\r\n    private void oneInfo(){\r\n        String url = \"http://wufazhuce.com/\";\r\n        Connection conn = Jsoup.connect(url);\r\n        // 修改http包中的header,伪装成浏览器进行抓取\r\n        conn.header(\"User-Agent\", \"Mozilla/5.0 (X11; Linux x86_64; rv:32.0) Gecko/    20100101 Firefox/32.0\");\r\n        Document doc = null;\r\n        try {\r\n            doc = conn.get();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        Elements links = doc.select(\"a\");\r\n        for(Element element : links) {\r\n            Link o = new Link();\r\n            String a = element.attr(\"href\");\r\n            String s = element.text();\r\n            if (a.contains(\"article\")) {\r\n                o.setUrl(a);\r\n                o.setTitle(s);\r\n                o.setDesc(\"One·A\");\r\n                mArticleLst.add(o);\r\n            } else if (a.contains(\"question\")) {\r\n                o.setUrl(a);\r\n                o.setTitle(s);\r\n                o.setDesc(\"One·Q\");\r\n                mQuestionLst.add(o);\r\n            }\r\n        }\r\n        mLinkLst.add(mArticleLst.get(0));\r\n        mLinkLst.add(mQuestionLst.get(0));\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        finish();\r\n    }\r\n}\r\n```\r\n>3.显示爬取到的数据（WebView加载链接，图片自适应）\r\n\r\n```java\r\npackage com.ds.groupon.activity;\r\n\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport com.ds.groupon.R;\r\nimport com.ds.groupon.base.BaseActivity;\r\n\r\n/**\r\n * ====================== WebView界面 ========================\r\n * 查看外链\r\n * @author SGamble\r\n */\r\npublic class OneViewActivity extends BaseActivity {\r\n    String url;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_one_view);\r\n\r\n        Intent intent = getIntent();\r\n        url = intent.getStringExtra(\"url\");\r\n\r\n        initWebView(url);\r\n    }\r\n\r\n    private void initWebView(String url) {\r\n        WebView webView = (WebView)findViewById(R.id.WebView);\r\n        webView.loadUrl(url);\r\n        webView.setWebViewClient(new MyWebViewClient());\r\n        //声明WebSettings子类\r\n        WebSettings webSettings = webView.getSettings();\r\n        //设置自适应屏幕，两者合用\r\n        webSettings.setUseWideViewPort(true); //将图片调整到适合webview的大小\r\n        webSettings.setLoadWithOverviewMode(true); // 缩放至屏幕的大小\r\n        webSettings.setJavaScriptEnabled(true);//支持js\r\n        webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);\r\n    }\r\n\r\n    private class MyWebViewClient extends WebViewClient {\r\n        @Override\r\n        public void onPageFinished(WebView view, String url) {\r\n            super.onPageFinished(view, url);\r\n            imgReset(view);//重置webview中img标签的图片大小\r\n        }\r\n\r\n        @Override\r\n        public boolean shouldOverrideUrlLoading(WebView view, String url) {\r\n            if(url.startsWith(\"http:\") || url.startsWith(\"https:\") ) {\r\n                view.loadUrl(url);\r\n                return false;\r\n            }else{\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\r\n                startActivity(intent);\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对图片进行重置大小，宽度就是手机屏幕宽度，高度根据宽度比便自动缩放\r\n     * @param view\r\n     */\r\n    private void imgReset(WebView view) {\r\n        view.loadUrl(\"javascript:(function(){\" +\r\n                \"var objs = document.getElementsByTagName(\'img\'); \" +\r\n                \"for(var i=0;i<objs.length;i++)  \" +\r\n                \"{\"\r\n                + \"var img = objs[i];   \" +\r\n                \"    img.style.maxWidth = \'100%\'; img.style.height = \'auto\';  \" +\r\n                \"}\" +\r\n                \"})()\");\r\n    }\r\n}\r\n```',`groups`='Android',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 151 [ RunTime:0.000880s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.001053s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000410s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Android' LIMIT 1 [ RunTime:0.001026s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=42  WHERE  `groups` = 'Android' [ RunTime:0.000395s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/151.html
[ info ] qingrang.top/daily/admin/note/shownote/id/151.html [运行时间：0.075836s][吞吐率：13.19req/s] [内存消耗：1,989.29kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/151',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '151',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000535s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001481s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 151 LIMIT 1 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000867s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000344s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/190
[ info ] qingrang.top/daily/admin/note/editnote/id/190 [运行时间：0.102016s][吞吐率：9.80req/s] [内存消耗：2,031.05kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000787s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002095s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000627s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001723s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000427s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:25+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/190.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/190.html [运行时间：0.062101s][吞吐率：16.10req/s] [内存消耗：2,075.11kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10171',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/190',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 翻墙相关知识
[TOC]

## 翻墙基本原理

正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/0HdBh8IGGj.png)

## 专业名词介绍

### vps
>Virtual private server - 虚拟专用服务器

是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。

### vpn
>Virtual Private Network - 虚拟私人网络

是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。

由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。

### ss/ssr

ss 和 ssr 它的原理都是一样的，就是 socks5 代理。socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 socks 代理比其他应用层代理要快的多。socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。

通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 google，你的电脑发出请求，流量通过 socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 google，再把访问结果传回你的电脑，这样就实现了翻墙。


------------
ss：ss 作者是 clowwindy，大约两年前，他自己为了翻墙写了shadowsocks，简称 ss 或者叫影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了 github 上，然后就火了，但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个好像是一个国外的大兄弟在维护。

ssr：在 ss 作者被喝茶之后，github 上出现了一个叫 breakwa11 的帐号，声称 ss 容易被防火墙检测到，所以**在混淆和协议方面做了改进**，更加不容易被检测到，而且兼容 ss，改进后的项目叫 shadowsocks-R，简称 ssr。

------------

### vpn 和 ss/ssr 的区别和优缺点

ss/ssr 的目的就是用来翻墙的，而 vpn 的目的是用来加密企业数据的，因为 vpn 是走的专用通道，它是用来给企业传输加密数据用的，所以 vpn 的流量特征很明显，防火墙直接分析你的流量，如果特征匹配，直接封掉。对于 vpn 来说安全是第一位的，而对于 ss/ssr 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所有流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是检测不到你在翻墙的。两者的出发点和着重点就不同，ss/ssr 更注重流量的混淆加密。如果要安全匿名上网，可以用 vpn + tor 或者 ss/ssr + tor。

而安全性方面还要补充的一点就是，国内 vpn 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。',
  'groups' => 'Basics',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '190',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000577s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001408s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000438s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000340s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000879s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000298s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000308s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=190,`p_id`=2,`title`='翻墙相关知识\r',`content`='# 翻墙相关知识\r\n[TOC]\r\n\r\n## 翻墙基本原理\r\n\r\n正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/0HdBh8IGGj.png)\r\n\r\n## 专业名词介绍\r\n\r\n### vps\r\n>Virtual private server - 虚拟专用服务器\r\n\r\n是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。\r\n\r\n### vpn\r\n>Virtual Private Network - 虚拟私人网络\r\n\r\n是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。\r\n\r\n由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。\r\n\r\n### ss/ssr\r\n\r\nss 和 ssr 它的原理都是一样的，就是 socks5 代理。socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 socks 代理比其他应用层代理要快的多。socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。\r\n\r\n通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 google，你的电脑发出请求，流量通过 socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 google，再把访问结果传回你的电脑，这样就实现了翻墙。\r\n\r\n\r\n------------\r\nss：ss 作者是 clowwindy，大约两年前，他自己为了翻墙写了shadowsocks，简称 ss 或者叫影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了 github 上，然后就火了，但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个好像是一个国外的大兄弟在维护。\r\n\r\nssr：在 ss 作者被喝茶之后，github 上出现了一个叫 breakwa11 的帐号，声称 ss 容易被防火墙检测到，所以**在混淆和协议方面做了改进**，更加不容易被检测到，而且兼容 ss，改进后的项目叫 shadowsocks-R，简称 ssr。\r\n\r\n------------\r\n\r\n### vpn 和 ss/ssr 的区别和优缺点\r\n\r\nss/ssr 的目的就是用来翻墙的，而 vpn 的目的是用来加密企业数据的，因为 vpn 是走的专用通道，它是用来给企业传输加密数据用的，所以 vpn 的流量特征很明显，防火墙直接分析你的流量，如果特征匹配，直接封掉。对于 vpn 来说安全是第一位的，而对于 ss/ssr 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所有流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是检测不到你在翻墙的。两者的出发点和着重点就不同，ss/ssr 更注重流量的混淆加密。如果要安全匿名上网，可以用 vpn + tor 或者 ss/ssr + tor。\r\n\r\n而安全性方面还要补充的一点就是，国内 vpn 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。',`groups`='Basics',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 190 [ RunTime:0.000592s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000900s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=19  WHERE  `groups` = 'Basics' [ RunTime:0.000314s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000810s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=19  WHERE  `groups` = 'Basics' [ RunTime:0.000302s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/190.html
[ info ] qingrang.top/daily/admin/note/shownote/id/190.html [运行时间：0.056411s][吞吐率：17.73req/s] [内存消耗：1,983.44kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/190',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000443s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001378s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000447s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000902s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000291s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/170
[ info ] qingrang.top/daily/admin/note/editnote/id/170 [运行时间：0.071468s][吞吐率：13.99req/s] [内存消耗：2,030.32kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '170',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000505s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001280s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000399s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000991s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000495s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:45+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/170.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/170.html [运行时间：0.057994s][吞吐率：17.24req/s] [内存消耗：2,062.64kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5546',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/170',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 山地车购买指南
*-- Captain 邵*
>最近母亲想要买一辆自行车，致母亲的购买指南。

### 1. 你到底是想要一款性能卓越的车，或只是单纯贵的车？

如果是前者，我不建议买那么贵的车，为什么呢？根据一些山地车发烧友的建议，若是真正想在性能上有突破，真正的玩家是不会买整车的，他们会根据越野强度(XC、AM、FR、DH)自己组装，前叉，车架，制动系统，传动系统等，这些名词没听说过吧，那很明显你不属于这一类人，那也证明你并不是真正追求高性能的人。当然，我也不是，我也没有能够组车的知识储备，那我们只有买整车了吧。从购买整车开始，我们注定是一个业余玩家，或者说是一个新手，入门级玩家，那如此贵的整车，有必要吗？在别人看来就是人傻钱多。

如果你只是单纯想买特别贵的车，那以上都是废话，直接去店里拿最贵的一辆就行了。不用担心，他的性能一定比一两千的好。一分钱的一分货不一定对，但价值一万与一千肯定是有差距的，但这个差距对于你来说，你知道吗？如果不告诉你我耳机的价格，你肯定觉得，他和家里面那个一样吧。

个人觉得理性的做法为，先买一辆普通的山地车，等你骑着他走过了一些地方，对他有了一定的认识后，再根据自己的财力与实际需求自行组装出属于自己的车。

其实我们目前的体力，花在骑行上的时间，骑行的路段等，这实在是配不上一辆好车。

**建议你不要陷入器材党的怪圈中，在路上寻找乐趣而不是在这辆车多少钱上，发动机才是最重要的。
**

### 2. 尺寸选择
![车架](https://img30.360buyimg.com/popWaterMark/jfs/t7687/173/3428042380/541641/1eb94dc4/59bf1561Nf0582825.jpg "车架")',
  'groups' => 'Default',
  'showsel' => '0',
  'showse2' => '0',
  'id' => '170',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000517s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001393s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000446s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000351s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000841s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000305s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000387s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000300s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=170,`p_id`=1,`title`='山地车购买指南\r',`content`='# 山地车购买指南\r\n*-- Captain 邵*\r\n>最近母亲想要买一辆自行车，致母亲的购买指南。\r\n\r\n### 1. 你到底是想要一款性能卓越的车，或只是单纯贵的车？\r\n\r\n如果是前者，我不建议买那么贵的车，为什么呢？根据一些山地车发烧友的建议，若是真正想在性能上有突破，真正的玩家是不会买整车的，他们会根据越野强度(XC、AM、FR、DH)自己组装，前叉，车架，制动系统，传动系统等，这些名词没听说过吧，那很明显你不属于这一类人，那也证明你并不是真正追求高性能的人。当然，我也不是，我也没有能够组车的知识储备，那我们只有买整车了吧。从购买整车开始，我们注定是一个业余玩家，或者说是一个新手，入门级玩家，那如此贵的整车，有必要吗？在别人看来就是人傻钱多。\r\n\r\n如果你只是单纯想买特别贵的车，那以上都是废话，直接去店里拿最贵的一辆就行了。不用担心，他的性能一定比一两千的好。一分钱的一分货不一定对，但价值一万与一千肯定是有差距的，但这个差距对于你来说，你知道吗？如果不告诉你我耳机的价格，你肯定觉得，他和家里面那个一样吧。\r\n\r\n个人觉得理性的做法为，先买一辆普通的山地车，等你骑着他走过了一些地方，对他有了一定的认识后，再根据自己的财力与实际需求自行组装出属于自己的车。\r\n\r\n其实我们目前的体力，花在骑行上的时间，骑行的路段等，这实在是配不上一辆好车。\r\n\r\n**建议你不要陷入器材党的怪圈中，在路上寻找乐趣而不是在这辆车多少钱上，发动机才是最重要的。\r\n**\r\n\r\n### 2. 尺寸选择\r\n![车架](https://img30.360buyimg.com/popWaterMark/jfs/t7687/173/3428042380/541641/1eb94dc4/59bf1561Nf0582825.jpg \"车架\")',`groups`='Default',`is_show`=0,`publish`=0,`summary`=''  WHERE  `id` = 170 [ RunTime:0.000479s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000993s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Default' [ RunTime:0.000346s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000920s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Default' [ RunTime:0.000333s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:45+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/170.html
[ info ] qingrang.top/daily/admin/note/shownote/id/170.html [运行时间：0.053344s][吞吐率：18.75req/s] [内存消耗：1,981.76kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/170',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '170',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000543s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001317s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 170 LIMIT 1 [ RunTime:0.000416s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000900s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-11-06T17:48:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/178
[ info ] qingrang.top/daily/admin/note/editnote/id/178 [运行时间：0.060170s][吞吐率：16.62req/s] [内存消耗：2,030.77kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '178',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000601s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001390s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 178 LIMIT 1 [ RunTime:0.000470s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000956s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000376s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:05+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/178.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/178.html [运行时间：0.071229s][吞吐率：14.04req/s] [内存消耗：2,070.10kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '6186',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/178',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# LAMP 搭建( Linux + Apache + MySql + PHP )
[TOC]
## 重启服务器
```
service httpd restart
service php-fpm restart
service mysqld restart
```
## 搭建流程
### 1.安装apache

yum  install  httpd
### 2.启动apahce 

service  httpd  start
### 3.检查 浏览器访问IP

若失败：
查看端口信息
netstat  -antp
关闭防火墙
service  iptables  stop
或使防火墙开放80端口
修改vi /etc/sysconfig/iptables命令添加使防火墙开放80端口
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
/var/www/html/
### 4.安装PHP

yum  install  php  	//主程序
yum  install  php-mysql  php-gd	//扩展模块
php  –v	//查看版本信息
php  -m	//查看安装好的模块信息
yum  install  php-fpm	//安装
service  php-fpm  start	//启动服务(端口默认为9000)

**代码需放在/var/www/html下，
注意权限问题，需要给 /var/www/html/daily/runtime 目录开放权限。**
>5.安装MySql

yum  install  mysql-server  //安装mysql
service  mysqld  start		//启动mysql

**设密码**
设置root密码，无密码不能远程连接（默认可能无密码）
```
# mysqladmin -u root -p password 123456     ###设置root密码为123456
```
**若忘记密码，改密码**
```
# /etc/init.d/mysqld stop 
# mysqld_safe --user=mysql --skip-grant-tables --skip-networking & 
# mysql -u root mysql 
mysql> UPDATE user SET Password=PASSWORD(’新密码’) where USER=’root’; 
mysql> FLUSH PRIVILEGES; 
mysql> quit 
# /etc/init.d/mysqld restart 
# mysql -uroot -p 
Enter password: <输入新设的密码newpassword> 
mysql> 
```

**ERROR 1130: Host xxx.xxx.xxx.xxx is not allowed to connect to this MySQL server 是无法给远程连接的用户权限问题.**
```
mysql>GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'123456\' WITH GRANT OPTION;
mysql>flush privileges;
```
**远程连接**
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/HBhdFgD231.png)
***
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/IFh6554lFI.png)

## CentOS 6.5 升级 PHP 到 5.6
>1.首先先看下已安装的版本：

yum list installed | grep php

```
//可以看到我的都是5.3的
php.x86_64              5.3.3-48.el6_8  @updates
php-cli.x86_64          5.3.3-48.el6_8  @updates
php-common.x86_64       5.3.3-48.el6_8  @updates
php-fpm.x86_64          5.3.3-48.el6_8  @updates
php-gd.x86_64           5.3.3-48.el6_8  @updates
php-mysql.x86_64        5.3.3-48.el6_8  @updates
php-pdo.x86_64          5.3.3-48.el6_8  @updates
```
>2.升级之前需要卸载一下旧版本，不卸载直接安装新版会提示失败：

yum remove php php-common
我的就卸载了以上两个就ok了

>3.然后更新一下yum源：

rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm
>4.最后安装 5.6版 php 和 php-fpm 以及一些其他扩展，按需选择

yum install php56w php56w-fpm php56w-mysql php56w-mbstring php56w-gd php56w-dom

其中 php-fpm 是 nginx 里要用的 fast-cgi 进程管理器，重新安装后可能还需要重启一下fpm
/etc/init.d/php-fpm restart

**注：如果要升级php7，把上面命令中的 php56w 改为 php70w 即可**',
  'groups' => 'Linux',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '178',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000622s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001606s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 178 LIMIT 1 [ RunTime:0.000494s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 178 LIMIT 1 [ RunTime:0.000313s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000998s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000364s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=178,`p_id`=2,`title`='LAMP 搭建( Linux + Apache + MySql + PHP )\r',`content`='# LAMP 搭建( Linux + Apache + MySql + PHP )\r\n[TOC]\r\n## 重启服务器\r\n```\r\nservice httpd restart\r\nservice php-fpm restart\r\nservice mysqld restart\r\n```\r\n## 搭建流程\r\n### 1.安装apache\r\n\r\nyum  install  httpd\r\n### 2.启动apahce \r\n\r\nservice  httpd  start\r\n### 3.检查 浏览器访问IP\r\n\r\n若失败：\r\n查看端口信息\r\nnetstat  -antp\r\n关闭防火墙\r\nservice  iptables  stop\r\n或使防火墙开放80端口\r\n修改vi /etc/sysconfig/iptables命令添加使防火墙开放80端口\r\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n/var/www/html/\r\n### 4.安装PHP\r\n\r\nyum  install  php  	//主程序\r\nyum  install  php-mysql  php-gd	//扩展模块\r\nphp  –v	//查看版本信息\r\nphp  -m	//查看安装好的模块信息\r\nyum  install  php-fpm	//安装\r\nservice  php-fpm  start	//启动服务(端口默认为9000)\r\n\r\n**代码需放在/var/www/html下，\r\n注意权限问题，需要给 /var/www/html/daily/runtime 目录开放权限。**\r\n>5.安装MySql\r\n\r\nyum  install  mysql-server  //安装mysql\r\nservice  mysqld  start		//启动mysql\r\n\r\n**设密码**\r\n设置root密码，无密码不能远程连接（默认可能无密码）\r\n```\r\n# mysqladmin -u root -p password 123456     ###设置root密码为123456\r\n```\r\n**若忘记密码，改密码**\r\n```\r\n# /etc/init.d/mysqld stop \r\n# mysqld_safe --user=mysql --skip-grant-tables --skip-networking & \r\n# mysql -u root mysql \r\nmysql> UPDATE user SET Password=PASSWORD(’新密码’) where USER=’root’; \r\nmysql> FLUSH PRIVILEGES; \r\nmysql> quit \r\n# /etc/init.d/mysqld restart \r\n# mysql -uroot -p \r\nEnter password: <输入新设的密码newpassword> \r\nmysql> \r\n```\r\n\r\n**ERROR 1130: Host xxx.xxx.xxx.xxx is not allowed to connect to this MySQL server 是无法给远程连接的用户权限问题.**\r\n```\r\nmysql>GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'123456\' WITH GRANT OPTION;\r\nmysql>flush privileges;\r\n```\r\n**远程连接**\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/HBhdFgD231.png)\r\n***\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/IFh6554lFI.png)\r\n\r\n## CentOS 6.5 升级 PHP 到 5.6\r\n>1.首先先看下已安装的版本：\r\n\r\nyum list installed | grep php\r\n\r\n```\r\n//可以看到我的都是5.3的\r\nphp.x86_64              5.3.3-48.el6_8  @updates\r\nphp-cli.x86_64          5.3.3-48.el6_8  @updates\r\nphp-common.x86_64       5.3.3-48.el6_8  @updates\r\nphp-fpm.x86_64          5.3.3-48.el6_8  @updates\r\nphp-gd.x86_64           5.3.3-48.el6_8  @updates\r\nphp-mysql.x86_64        5.3.3-48.el6_8  @updates\r\nphp-pdo.x86_64          5.3.3-48.el6_8  @updates\r\n```\r\n>2.升级之前需要卸载一下旧版本，不卸载直接安装新版会提示失败：\r\n\r\nyum remove php php-common\r\n我的就卸载了以上两个就ok了\r\n\r\n>3.然后更新一下yum源：\r\n\r\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\r\nrpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm\r\n>4.最后安装 5.6版 php 和 php-fpm 以及一些其他扩展，按需选择\r\n\r\nyum install php56w php56w-fpm php56w-mysql php56w-mbstring php56w-gd php56w-dom\r\n\r\n其中 php-fpm 是 nginx 里要用的 fast-cgi 进程管理器，重新安装后可能还需要重启一下fpm\r\n/etc/init.d/php-fpm restart\r\n\r\n**注：如果要升级php7，把上面命令中的 php56w 改为 php70w 即可**',`groups`='Linux',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 178 [ RunTime:0.000611s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.001026s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=11  WHERE  `groups` = 'Linux' [ RunTime:0.000414s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000991s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=11  WHERE  `groups` = 'Linux' [ RunTime:0.000323s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:06+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/178.html
[ info ] qingrang.top/daily/admin/note/shownote/id/178.html [运行时间：0.065581s][吞吐率：15.25req/s] [内存消耗：1,983.15kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/178',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '178',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000772s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001492s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 178 LIMIT 1 [ RunTime:0.000433s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000937s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000314s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:12+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/182
[ info ] qingrang.top/daily/admin/note/editnote/id/182 [运行时间：0.078020s][吞吐率：12.82req/s] [内存消耗：2,027.96kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '182',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000626s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001923s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 182 LIMIT 1 [ RunTime:0.000526s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001116s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000303s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:20+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/182.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/182.html [运行时间：0.062781s][吞吐率：15.93req/s] [内存消耗：2,050.09kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '843',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/182',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 在 PhpStorm 中管理 Git 代码仓库
1.在 PhpStorm 中配置 Git
--
File -> Settings
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/0geb7jKHkj.png)

2.克隆服务器上的项目
--
VCS -> Checkout from Version Control -> git
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/DImccDCgig.png)

3.本地修改后，提交至服务器（普通的 Git 操作）
--
右键 -> Git -> commit 和 push',
  'groups' => 'PHP',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '182',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000532s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001394s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 182 LIMIT 1 [ RunTime:0.000425s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 182 LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000857s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'PHP' LIMIT 1 [ RunTime:0.000337s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000281s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=182,`p_id`=2,`title`='在 PhpStorm 中管理 Git 代码仓库\r',`content`='# 在 PhpStorm 中管理 Git 代码仓库\r\n1.在 PhpStorm 中配置 Git\r\n--\r\nFile -> Settings\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/0geb7jKHkj.png)\r\n\r\n2.克隆服务器上的项目\r\n--\r\nVCS -> Checkout from Version Control -> git\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/DImccDCgig.png)\r\n\r\n3.本地修改后，提交至服务器（普通的 Git 操作）\r\n--\r\n右键 -> Git -> commit 和 push',`groups`='PHP',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 182 [ RunTime:0.000435s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'PHP' LIMIT 1 [ RunTime:0.000882s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'PHP' [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'PHP' LIMIT 1 [ RunTime:0.000734s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'PHP' [ RunTime:0.000305s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:21+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/182.html
[ info ] qingrang.top/daily/admin/note/shownote/id/182.html [运行时间：0.054958s][吞吐率：18.20req/s] [内存消耗：1,980.31kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/182',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '182',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000455s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001297s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 182 LIMIT 1 [ RunTime:0.000441s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000911s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000274s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/188
[ info ] qingrang.top/daily/admin/note/editnote/id/188 [运行时间：0.067218s][吞吐率：14.88req/s] [内存消耗：2,028.94kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '188',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000742s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001568s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 188 LIMIT 1 [ RunTime:0.000430s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001146s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000376s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/188.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/188.html [运行时间：0.070678s][吞吐率：14.15req/s] [内存消耗：2,057.02kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '2218',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/188',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# html 实现上角标的效果
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/103kEh4KFg.png)
```
<!DOCTYPE html>  
<html lang="en">  
<head>  
    <meta charset="UTF-8">  
    <title>制作角标的方法</title>  
    <script src="http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js"></script>  
    <style>  
        .con{  
            height: 250px;  
            width: 200px;  
            margin: 0 auto;  
            overflow: hidden;  
            margin-top: 100px;  
            position: relative;  
            background-color: #4cd964;  
        }  
        
        /* 角标 */
        .subscript{
            z-index: 999;
            color: #fff;
            height: 30px;
            width: 100px;
            position: absolute;
            right: -30px;
            text-align: center;
            line-height: 30px;
            font-family: "黑体";
            background-color: #0c60ee;
            -moz-transform:rotate(45deg);
            -webkit-transform:rotate(45deg);
            -o-transform:rotate(45deg);
            -ms-transform:rotate(45deg);
            transform:rotate(45deg);
        }

        /* 角标文字 */
        .subscript_number{
            transform: rotate(-45deg);
        }
    </style>  
</head>  
<body>  
<div class="con">  
    <div class="subscript">
        <div class="subscript_number">1</div>
    </div>
</div>  
</body>  
</html>  
```',
  'groups' => 'WebFront-end',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '188',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000618s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001529s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 188 LIMIT 1 [ RunTime:0.000592s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 188 LIMIT 1 [ RunTime:0.000552s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001168s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'WebFront-end' LIMIT 1 [ RunTime:0.000392s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000449s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=188,`p_id`=2,`title`='html 实现上角标的效果\r',`content`='# html 实现上角标的效果\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/103kEh4KFg.png)\r\n```\r\n<!DOCTYPE html>  \r\n<html lang=\"en\">  \r\n<head>  \r\n    <meta charset=\"UTF-8\">  \r\n    <title>制作角标的方法</title>  \r\n    <script src=\"http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js\"></script>  \r\n    <style>  \r\n        .con{  \r\n            height: 250px;  \r\n            width: 200px;  \r\n            margin: 0 auto;  \r\n            overflow: hidden;  \r\n            margin-top: 100px;  \r\n            position: relative;  \r\n            background-color: #4cd964;  \r\n        }  \r\n        \r\n        /* 角标 */\r\n        .subscript{\r\n            z-index: 999;\r\n            color: #fff;\r\n            height: 30px;\r\n            width: 100px;\r\n            position: absolute;\r\n            right: -30px;\r\n            text-align: center;\r\n            line-height: 30px;\r\n            font-family: \"黑体\";\r\n            background-color: #0c60ee;\r\n            -moz-transform:rotate(45deg);\r\n            -webkit-transform:rotate(45deg);\r\n            -o-transform:rotate(45deg);\r\n            -ms-transform:rotate(45deg);\r\n            transform:rotate(45deg);\r\n        }\r\n\r\n        /* 角标文字 */\r\n        .subscript_number{\r\n            transform: rotate(-45deg);\r\n        }\r\n    </style>  \r\n</head>  \r\n<body>  \r\n<div class=\"con\">  \r\n    <div class=\"subscript\">\r\n        <div class=\"subscript_number\">1</div>\r\n    </div>\r\n</div>  \r\n</body>  \r\n</html>  \r\n```',`groups`='WebFront-end',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 188 [ RunTime:0.000653s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'WebFront-end' LIMIT 1 [ RunTime:0.000946s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=12  WHERE  `groups` = 'WebFront-end' [ RunTime:0.000325s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'WebFront-end' LIMIT 1 [ RunTime:0.000784s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=12  WHERE  `groups` = 'WebFront-end' [ RunTime:0.000416s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:29+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/188.html
[ info ] qingrang.top/daily/admin/note/shownote/id/188.html [运行时间：0.053938s][吞吐率：18.54req/s] [内存消耗：1,981.33kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/188',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '188',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000465s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001269s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 188 LIMIT 1 [ RunTime:0.000471s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001112s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000282s ]
---------------------------------------------------------------
[ 2018-11-06T17:50:33+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/214
[ info ] qingrang.top/daily/admin/note/editnote/id/214 [运行时间：0.066185s][吞吐率：15.11req/s] [内存消耗：2,075.23kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000659s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001891s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000690s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001572s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000437s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:07+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/214.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/214.html [运行时间：0.069325s][吞吐率：14.42req/s] [内存消耗：2,244.97kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '54398',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/214',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 文件和 IO流
[TOC]
## 1. 文件
### File
>使用绝对路径或者相对路径创建 File 对象

```
// 绝对路径
File f1 = new File("d:/LOLFolder");
System.out.println("f1的绝对路径：" + f1.getAbsolutePath());

// 相对路径,相对于工作目录，如果在 eclipse 中，就是项目目录
File f2 = new File("LOL.exe");
System.out.println("f2的绝对路径：" + f2.getAbsolutePath());

// 把f1作为父目录创建文件对象
File f3 = new File(f1, "LOL.exe");
System.out.println("f3的绝对路径：" + f3.getAbsolutePath());
```

>文件常用方法

```
File f = new File("d:/LOLFolder/LOL.exe");
System.out.println("当前文件是：" +f);

//文件是否存在
System.out.println("判断是否存在："+f.exists());

//是否是文件夹
System.out.println("判断是否是文件夹："+f.isDirectory());

//是否是文件（非文件夹）
System.out.println("判断是否是文件："+f.isFile());

//文件长度
System.out.println("获取文件的长度："+f.length());

//文件最后修改时间
long time = f.lastModified();
Date d = new Date(time);
System.out.println("获取文件的最后修改时间："+d);

//设置文件修改时间为1970.1.1 08:00:00
f.setLastModified(0);

//文件重命名
File f2 =new File("d:/LOLFolder/DOTA.exe");
f.renameTo(f2);
System.out.println("把LOL.exe改名成了DOTA.exe");

System.out.println("注意： 需要在D:\\\\LOLFolder确实存在一个LOL.exe,\\r\\n才可以看到对应的文件长度、修改时间等信息");

File f = new File("d:/LOLFolder/skin/garen.ski");

// 以字符串数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）
f.list();

// 以文件数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）
File[]fs= f.listFiles();

// 以字符串形式返回获取所在文件夹
f.getParent();

// 以文件形式返回获取所在文件夹
f.getParentFile();
// 创建文件夹，如果父文件夹skin不存在，创建就无效
f.mkdir();

// 创建文件夹，如果父文件夹skin不存在，就会创建父文件夹
f.mkdirs();

// 创建一个空文件,如果父文件夹skin不存在，就会抛出异常
f.createNewFile();
// 所以创建一个空文件之前，通常都会创建父目录
f.getParentFile().mkdirs();

// 列出所有的盘符c: d: e: 等等
f.listRoots();

// 刪除文件
f.delete();

// JVM结束的时候，刪除文件，常用于临时文件的删除
f.deleteOnExit();
```
>File 类

```
package io;

import java.io.File;
import java.io.IOException;

public class FileDemo {
    public static void main(String[] args) {
        // 以当前路径来创建一个File对象,"."代表当前路径
        File file = new File(".");
        // 直接获取文件名，输出"."
        System.out.println(file.getName());
        // 获取相对路径的父路径可能出错，下面代码输出 null
        System.out.println(file.getParent());
        // 获取绝对路径
        System.out.println(file.getAbsoluteFile());
        // 获取上一级路径
        System.out.println(file.getAbsoluteFile().getParent());

        // 以指定的文件名创建 File 对象
        File newFile = new File("D:\\\\qst.txt");
        System.out.println("newFile 对象是否存在：" + newFile.exists());
        try {
            // 以指定newFile对象来创建一个文件
            newFile.createNewFile();
            System.out.println(newFile.getName());
        } catch (IOException e) {
            e.printStackTrace();
        }

        // 以 newFile 对象来创建一个目录，因为 newFile 已经存在
        // 所以下面方法返回 false，即无法创建该目录
        System.out.println("创建目录：" + newFile.mkdir());

        // 使用list()方法来列出当前路径下的所有文件和路径
        System.out.println("====当前路径下所有文件和路径如下====");
        String[] fileList = file.list();
        for (String fileName : fileList) {
            System.out.println(fileName);
        }

        // listRoots()静态方法列出所有的磁盘根路径。
        System.out.println("====系统所有根路径如下====");
        File[] roots = File.listRoots();
        for (File root : roots) {
            System.out.println(root);
        }
    }
}
```
---
~~.
null
G:\\Java\\Study2\\JavaSE\\.
G:\\Java\\Study2\\JavaSE
newFile 对象是否存在：true
qst.txt
创建目录：false
====当前路径下所有文件和路径如下====
.idea
Demo.txt
Demo2.txt
JavaSE.iml
out
src
====系统所有根路径如下====
C:\\
D:\\
E:\\
F:\\
G:\\
H:\\
I:\\~~

---
### FilenameFilter 接口
文件过滤器接口，提供 accept 方法
```
package io;

import java.io.File;
import java.io.FilenameFilter;

public class Demo {
    public static void main(String[] args) {
        // 根据路径名称创建 File 对象
        File file = new File(".");
        // 得到文件名列表
        if (file.exists() && file.isDirectory()) {
            // 显示该目录下所有文件列表
            String[] allFileNames = file.list();

            for (String name : allFileNames) {
                System.out.println(name);
            }
            System.out.println("--------------------");

            // 创建FileNameFilter类型的匿名类，并作为参数传入到list()方法中
            String[] filterFileNames = file.list(new FilenameFilter() {
                public boolean accept(File dir, String name) {
                    // 对文件名进行过滤，文件名的后缀为.zip或.txt
                    return (name.endsWith(".zip") || name.endsWith(".txt"));
                }
            });
            System.out.println("过滤后的文件列表：");
            for (String name : filterFileNames) {
                System.out.println(name);
            }
        }
    }
}
```
---
~~.idea
Demo.txt
Demo2.txt
JavaSE.iml
out
src
\\--------------------
过滤后的文件列表：
Demo.txt
Demo2.txt~~

---
## 2. IO 流
Java 的 IO 流都是由以下 4 个抽象基类派生的。

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/11HKL57cGk.png)

计算机中的文件常被分为二进制文件和文本文件两大类。

字节流处理的最基本单位为单个字节
字符流处理的最基本的单元是 Unicode 码元

**如果进行输入输出的内容是文本，则使用字符流，若是二进制，则使用字节流。**

## 3. 字节流
### InputStream
>读取一个 .java 文件，并打印在控制台上

```
package io;

import java.io.FileInputStream;
import java.io.IOException;

public class FileInputStreamDemo {
    public static void main(String[] args) {
        // 声明文件字节输入流
        FileInputStream fis = null;
        try {
            // 实例化文件字节输入流
            fis = new FileInputStream("src\\\\io\\\\FileInputStreamDemo.java");
            // 创建一个长度为1024的字节数组作为缓冲区
            byte[] bbuf = new byte[1024];
            // 用于保存实际读取的字节数
            int hasRead = 0;
            // 使用循环重复读文件中的数据
            while ((hasRead = fis.read(bbuf)) > 0) {
                // 将缓冲区中的数据转换成字符串输出
                System.out.print(new String(bbuf, 0, hasRead));
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                // 关闭文件输入流
                fis.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
```
### OutputStream
>控制台输入内容，保存到文件

```
package io;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;

public class FileOutputStreamDemo {
    public static void main(String[] args) {
        // 建立一个从键盘接收数据的扫描器
        Scanner scanner = new Scanner(System.in);

        // 声明文件字节输出流
        FileOutputStream fos = null;
        try {
            // 实例化文件字节输出流
            fos = new FileOutputStream("D:\\\\mytest.txt");
            System.out.println("请输入内容：");
            String str = scanner.nextLine();
            // 将数据写入文件中
            fos.write(str.getBytes());
            System.out.println("已保存！");
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                // 关闭文件输出流
                fos.close();
                scanner.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }

}
```

## 4. 字符流
### Writer
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/daily/181007/kI45gfiJa6.png)

既然 IO 流是用于操作数据的，那么数据的最常见体现形式是：文件。

需求:在硬盘上，创建一个文件并写入一些文字数据。

```
package io;

import java.io.FileWriter;
import java.io.IOException;

/**
 * 字符流
 *  在硬盘上，创建一个文件并写入一些文字数据
 * Created by CaptainQR on 2018/10/7.
 */
public class FileWriterDemo {
    public static void main(String[] args) throws IOException{
        /*
        * 1. 创建一个 FileWriter 对象，该对象一被初始化就必须要明确被操作的文件
        *   而且该文件会被创建到指定目录下，如果该目录下有同名文件，将被覆盖。
        *   其实该步就是在明确数据要存放的目的地。
        * */
        FileWriter fw = new FileWriter("Demo.txt");

        //2. 调用 write 方法，将字符串写入到流中
        fw.write("abc");

        //3. 刷新流对象中的缓冲数据，将数据刷到目的地中
        fw.flush();
        fw.write("--def");

        //4. 关闭流资源，但是关闭之前会刷新一次内部的缓冲中的数据，将数据刷到目的地中
        //   和 flush 的区别：flush 刷新后，流可以继续使用，close 刷新后，会将流关闭
        fw.close();
    }
}
```

#### 续写
>构造函数

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/daily/181007/9I9JbDBkE7.png)

```
//传递一个 true 参数，代表不覆盖已有的文件，在末尾追加
FileWriter fw2 = new FileWriter("Demo.txt",true);
```
### Reader
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/daily/181007/e3a8ecdEH0.png)
#### 1. 读取单个字符
```
package io;

import java.io.FileReader;
import java.io.IOException;

public class Demo {
    public static void main(String[] args){
        FileReader fr = null;
        try {
            // 创建一个文件读取对象，和指定名称的文件相关联
            fr = new FileReader("Demo.txt");
            int ch = 0;
            /*
            * 调用读取流对象的 read 方法
            *   read()：一次读一个字符，而且会自动往下读
            * */
            while ((ch = fr.read()) != -1){
                System.out.println((char)ch);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            if(fr != null){
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
```
#### 2. 读取字符数组
>读取一个 .java 文件，并打印在控制台上

```
package io;

import java.io.FileReader;
import java.io.IOException;

public class Demo {
    public static void main(String[] args){
        FileReader fr = null;
        try {
            fr = new FileReader("G:\\\\Java\\\\Study2\\\\JavaSE\\\\src\\\\io\\\\FileWriterDemo.java");
            // 存储读到的字符，一般定义大小为 1024 即为 1k
            char[] buf = new char[1024];
            int num = 0;
            // read(char[]) 返回的是读到的字符个数
            while ((num = fr.read(buf)) != -1){
                // String 类，String(char value[], int offset, int count)
                // 分配一个新的 String，它包含取 自字符数组一个子数组(num)的字符
                System.out.println(new String(buf,0,num));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            if(fr != null){
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
```
#### 3. 将C盘一个文本文件复制到D盘
复制的原理：
其实就是将C盘下的文件数据存储到D盘的一个文件中。

步骤：
1，在 D 盘创建一个文件。用于存储 C 盘文件中的数据。
2，定义读取流和 C 盘文件关联。
3，通过不断的读写完成数据存储。
4，关闭资源。

```
package io;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class Demo {
    public static void main(String[] args){
        FileWriter fw = null;
        FileReader fr = null;
        try {
            fr = new FileReader("Demo.txt");
            // 写入 H 盘
            fw = new FileWriter("H:\\\\DemoCopy.txt");

            char[] buf = new char[1024];
            int len = 0;
            while ((len = fr.read(buf)) != -1){
                fw.write(buf,0,len);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            // 需要对每一个流进行处理
            if(fr != null){
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if(fw != null){
                try {
                    fw.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
```
#### 控制台输入，文件输出
```
package io;

import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class WriterDemo {
    public static void main(String[] args) {
        // 建立一个从键盘接收数据的扫描器
        Scanner scanner = new Scanner(System.in);

        try (
                FileWriter fw = new FileWriter("H:\\\\WriterDemo.txt");
                ) {
            System.out.println("请输入内容：");
            String str = scanner.nextLine();
            // 将数据写入文件中
            fw.write(str);
            System.out.println("已保存！");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
## 5. Buffered 缓冲区
缓冲区的出现是为了提高流的操作效率，所以在创建缓冲区之前，必须要先有流对象
### BufferedWriter
```
package io;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class BufferedWriterDemo {
    public static void main(String[] args) throws IOException{
        //创建一个字符写入流对象
        FileWriter fw = new FileWriter("buf.txt");

        //为了提高字符写入流效率，加入了缓冲技术
        //只要将需要被提高效率的流对象作为参数传递给缓冲区的构造函数即可
        BufferedWriter bufw = new BufferedWriter(fw);

        for (int x=1;x<5;x++){
            bufw.write("abc" + x);
            bufw.newLine(); //换行
            bufw.flush();   //刷新
        }
        bufw.close();   //其实关闭缓冲流就是渣关闭缓冲区中的流对象
    }
}
```
### BufferedReader
```
package io;

import java.io.*;

public class BufferedReaderDemo {
    public static void main(String[] args) throws IOException{
        //创建一个读取流对象和文件相关联
        FileReader fr = new FileReader("buf.txt");

        //为了提高效率，加入了缓冲技术，将字符读取对象作为参数传递给缓冲对象的构造函数
        BufferedReader bufr = new BufferedReader(fr);

        //readLine 一次读一行
        String line = null;
        while ((line = bufr.readLine()) != null){
            System.out.println(line);
        }
        bufr.close();
    }
}
```
>通过缓冲区复制文件

```
package io;

import java.io.*;

public class BufferCopy {
    public static void main(String[] args){
        try (
                BufferedReader bufr = new BufferedReader(new FileReader("Demo.txt"));
                BufferedWriter bufw = new BufferedWriter(new FileWriter("H:\\\\BufferCopy.txt"));
                ){
            String line = null;
            while ((line = bufr.readLine()) != null){
                bufw.write(line);
                bufw.newLine();
                bufw.flush();
            }
        }catch (IOException e){
            System.out.println("Error");
        }
    }
}
```
## 6. 过滤流和转换流
### 过滤流
过滤流对一个已有的流进行连接和封装，以更加便利的方式对数据进行读写操作，过滤流又分为过滤输入流和过滤输出流。
```
package io;

import java.io.BufferedInputStream;
import java.io.FileInputStream;

public class BufferedInputStreamDemo {

    public static void main(String[] args) {
        try (
                // 利用FileInputStream对象创建一个输入缓冲流
                BufferedInputStream bi = new BufferedInputStream(new FileInputStream("Demo.txt"));
                )
        {
            int result = 0;
            //循环读数据
            while ((result = bi.read()) != -1) {
                //输出
                System.out.print((char) result);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```
### 转换流
Java 的 IO流 体系中提供了两个转换流：
- InputStreamReader：将字节输入流转换为字符输入流
- OutputStreamWriter：将字符输出流转换为字节输出流

```
package io;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class InputStreamReaderDemo {
    public static void main(String[] args) {
        try (
                // 将 Sytem.in 标准输入流 InputStream 字节流转换成 Reader 字符流
                InputStreamReader reader = new InputStreamReader(System.in);
                // 将普通 Reader 包装成 BufferedReader，BufferedReader 具有缓冲功能
                BufferedReader br = new BufferedReader(reader)) {
            String line = null;
            // 采用循环方式来一行一行的读取
            while ((line = br.readLine()) != null) {
                // 如果读取的字符串为"exit"，程序退出
                if (line.equals("exit")) {
                    System.exit(1);
                }
                // 打印读取的内容
                System.out.println("输入内容为:" + line);
            }
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }
}
```
## 7. 对象流
在 Java 中，使用对象流可实现对象的序列化和反序列化。

对象的序列化是指将对象数据写到一个输出流中的过程；而对象的反序列化是指从一个输入流中读取一个对象。

在 Java 中，如果需要将某个对象保存到磁盘或通过网络传输，则该对象必须是可以序列化的。

若一个类的对象是可序列化的，则该类必须实现 java.lang 包下的 Serializable 接口或 Externalizable 接口。

```
//定义一个可以序列化的 Person 实体类
public class Person implements Serializable {
	...
}
```

>序列化

```
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public class ObjectOutputStreamDemo {

	public static void main(String[] args) {

		// 创建一个ObjectOutputStream对象输出流
		try (ObjectOutputStream obs = new ObjectOutputStream(new FileOutputStream("d:\\\\PersonObject.txt"))) {
			// 创建一个Person类型的对象
			Person person = new Person("张三", 25, "青岛");
			// 把对象写入到文件中
			obs.writeObject(person);
			obs.flush();
			System.out.println("序列化完毕！");
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}
```
>反序列化

```
import java.io.FileInputStream;
import java.io.ObjectInputStream;

public class ObjectInputStreamDemo {
	public static void main(String[] args) {
		// 创建一个ObjectInputStream对象输入流
		try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("d:\\\\PersonObject.txt"))) {
			// 从ObjectInputStream对象输入流中读取一个对象，并强制转换成Person对象
			Person person =(Person)ois.readObject();
			System.out.println("序列化完毕！读出的对象信息如下：");
			System.out.println(person);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}
```
## 8. NIO
NIO 将文件或文件的一段区域映射到内存中，这样可以像访问内存一样来访问文件。

Buffer 和 Channel 是 NIO 中两个核心对象：
- Buffer 可以理解成一个容器，其本质是一个数组。
- Channel 是对传统 IO 系统的模拟，在 NIO 系统中所有数据都需要经过通道传输；Channel 与传统的 InputStream、OutputStream最大的区别是提供一个 map() 方法，通过该方法可以直接将一块数据映射到内存中。

### Buffer

```
import java.nio.CharBuffer;

public class NIOBufferDemo {
	public static void main(String[] args) {
		// 实例化一个容量为 8 的 CharBuffer
		CharBuffer buff = CharBuffer.allocate(8);
		System.out.println("capacity: "	+ buff.capacity());
		System.out.println("limit: " + buff.limit());
		System.out.println("position: " + buff.position());
		
		// 使用 put 方法，放入元素
		buff.put(\'a\');
		buff.put(\'b\');
		buff.put(\'c\');     
		System.out.println("加入三个元素后，position = " + buff.position());
		
		// 调用 flip() 方法，反转缓冲区
		buff.flip();	  // ③
		System.out.println("执行flip()后，limit = " + buff.limit());
		System.out.println("position = " + buff.position());
		
		// get 方法，取出第一个元素
		System.out.println("第一个元素(position=0)：" + buff.get()); 
		System.out.println("取出一个元素后，position = " + buff.position());
		
		// 调用 clear 方法，清除缓冲区
		buff.clear(); 
		System.out.println("执行clear()后，limit = " + buff.limit());
		System.out.println("执行clear()后，position = " + buff.position());
		System.out.println("执行clear()后，缓冲区内容并没有被清除：" + "第三个元素为：" +  buff.get(2));
		System.out.println("执行绝对读取后，position = " + buff.position());

	}

}
```
### Channel
Channel 与传统的 IO流 类似，但主要有两点区别：
- Channel 类可以直接将指定文件的部分或全部直接映射成 Buffer
- 程序不能直接访问 Channel 中的数据，Channel 只能与 Buffer 进行交互
>将 FileChannel 的所有数据映射成 ByteBuffer

```
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.CharBuffer;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;

public class NIOFileChannelDemo {
    public static void main(String[] args) {
        File f = new File("src\\\\com\\\\qst\\\\chapter01\\\\NIOFileChannelDemo.java");
        try (
                // 创建FileInputStream，以该文件输入流创建FileChannel
                FileChannel inChannel = new FileInputStream(f).getChannel();
                // 以文件输出流创建FileBuffer，用以控制输出
                FileChannel outChannel = new FileOutputStream("D:\\\\channel.txt")
                        .getChannel()) {
            // 将FileChannel里的全部数据映射成ByteBuffer
            MappedByteBuffer buffer = inChannel.map(
                    FileChannel.MapMode.READ_ONLY, 0, f.length()); // ①
            // 使用GBK的字符集来创建解码器
            Charset charset = Charset.forName("GBK");
            // 直接将buffer里的数据全部输出
            outChannel.write(buffer); // ②
            // 再次调用buffer的clear()方法，复原limit、position的位置
            buffer.clear();
            // 创建解码器(CharsetDecoder)对象
            CharsetDecoder decoder = charset.newDecoder();
            // 使用解码器将ByteBuffer转换成CharBuffer
            CharBuffer charBuffer = decoder.decode(buffer);
            // CharBuffer的toString方法可以获取对应的字符串
            System.out.println(charBuffer);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
```

## 9. NOI.2
>java.nio.file.Path 下的 Path类

```
import java.nio.file.Path;
import java.nio.file.Paths;

public class NIO2PathDemo {
	public static void main(String[] args) {
		// 以当前路径来创建Path对象
		Path path = Paths.get(".");
		System.out.println("path里包含的路径数量：" + path.getNameCount());
		System.out.println("path的根路径：" + path.getRoot());
		
		// 获取path对应的绝对路径。
		Path absolutePath = path.toAbsolutePath();
		System.out.println(absolutePath);
		
		// 获取绝对路径的根路径
		System.out.println("absolutePath的根路径：" + absolutePath.getRoot());
		
		// 获取绝对路径所包含的路径数量
		System.out.println("absolutePath里包含的路径数量：" + absolutePath.getNameCount());
		System.out.println(absolutePath.getName(3));
		
		// 以多个String来构建Path对象
		Path path2 = Paths.get("g:", "publish", "codes");
		System.out.println(path2);
	}
}
```

>Files类

```
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.FileStore;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class NIO2FilesDemo {
	public static void main(String[] args) {
		try {
			// 复制文件
			Files.copy(
					Paths.get("src\\\\com\\\\qst\\\\chapter01\\\\NIO2FilesDemo.java"),
					new FileOutputStream("a.txt"));
			// 判断NIO2FilesDemo.java文件是否为隐藏文件
			System.out.println("NIO2FilesDemo.java是否为隐藏文件："
					+ Files.isHidden(Paths
							.get("src/com/qst/chapter09/NIO2FilesDemo.java")));
			// 一次性读取FilesTest.java文件的所有行
			List<String> lines = Files.readAllLines(Paths.get("src", "com",
					"qst", "chapter09", "NIO2FilesDemo.java"), Charset
					.forName("gbk"));
			System.out.println("行数：" + lines.size());
			// 判断指定文件的大小
			System.out.println("a.txt文件的大小为：" + Files.size(Paths.get("a.txt")));
			List<String> poem = new ArrayList<>();
			poem.add("使用NIO.2技术");
			poem.add("往文件中写内容");
			// 直接将多个字符串内容写入指定文件中
			Files.write(Paths.get("pome.txt"), poem, Charset.forName("gbk"));
			FileStore cStore = Files.getFileStore(Paths.get("C:"));
			// 判断C盘的总空间，可用空间
			System.out.println("C:共有空间：" + cStore.getTotalSpace());
			System.out.println("C:可用空间：" + cStore.getUsableSpace());
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000592s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001281s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000627s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000325s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001167s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000329s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=214,`p_id`=2,`title`='Java SE - 文件和 IO流\r',`content`='# Java SE - 文件和 IO流\r\n[TOC]\r\n## 1. 文件\r\n### File\r\n>使用绝对路径或者相对路径创建 File 对象\r\n\r\n```\r\n// 绝对路径\r\nFile f1 = new File(\"d:/LOLFolder\");\r\nSystem.out.println(\"f1的绝对路径：\" + f1.getAbsolutePath());\r\n\r\n// 相对路径,相对于工作目录，如果在 eclipse 中，就是项目目录\r\nFile f2 = new File(\"LOL.exe\");\r\nSystem.out.println(\"f2的绝对路径：\" + f2.getAbsolutePath());\r\n\r\n// 把f1作为父目录创建文件对象\r\nFile f3 = new File(f1, \"LOL.exe\");\r\nSystem.out.println(\"f3的绝对路径：\" + f3.getAbsolutePath());\r\n```\r\n\r\n>文件常用方法\r\n\r\n```\r\nFile f = new File(\"d:/LOLFolder/LOL.exe\");\r\nSystem.out.println(\"当前文件是：\" +f);\r\n\r\n//文件是否存在\r\nSystem.out.println(\"判断是否存在：\"+f.exists());\r\n\r\n//是否是文件夹\r\nSystem.out.println(\"判断是否是文件夹：\"+f.isDirectory());\r\n\r\n//是否是文件（非文件夹）\r\nSystem.out.println(\"判断是否是文件：\"+f.isFile());\r\n\r\n//文件长度\r\nSystem.out.println(\"获取文件的长度：\"+f.length());\r\n\r\n//文件最后修改时间\r\nlong time = f.lastModified();\r\nDate d = new Date(time);\r\nSystem.out.println(\"获取文件的最后修改时间：\"+d);\r\n\r\n//设置文件修改时间为1970.1.1 08:00:00\r\nf.setLastModified(0);\r\n\r\n//文件重命名\r\nFile f2 =new File(\"d:/LOLFolder/DOTA.exe\");\r\nf.renameTo(f2);\r\nSystem.out.println(\"把LOL.exe改名成了DOTA.exe\");\r\n\r\nSystem.out.println(\"注意： 需要在D:\\\\LOLFolder确实存在一个LOL.exe,\\r\\n才可以看到对应的文件长度、修改时间等信息\");\r\n\r\nFile f = new File(\"d:/LOLFolder/skin/garen.ski\");\r\n\r\n// 以字符串数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）\r\nf.list();\r\n\r\n// 以文件数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）\r\nFile[]fs= f.listFiles();\r\n\r\n// 以字符串形式返回获取所在文件夹\r\nf.getParent();\r\n\r\n// 以文件形式返回获取所在文件夹\r\nf.getParentFile();\r\n// 创建文件夹，如果父文件夹skin不存在，创建就无效\r\nf.mkdir();\r\n\r\n// 创建文件夹，如果父文件夹skin不存在，就会创建父文件夹\r\nf.mkdirs();\r\n\r\n// 创建一个空文件,如果父文件夹skin不存在，就会抛出异常\r\nf.createNewFile();\r\n// 所以创建一个空文件之前，通常都会创建父目录\r\nf.getParentFile().mkdirs();\r\n\r\n// 列出所有的盘符c: d: e: 等等\r\nf.listRoots();\r\n\r\n// 刪除文件\r\nf.delete();\r\n\r\n// JVM结束的时候，刪除文件，常用于临时文件的删除\r\nf.deleteOnExit();\r\n```\r\n>File 类\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class FileDemo {\r\n    public static void main(String[] args) {\r\n        // 以当前路径来创建一个File对象,\".\"代表当前路径\r\n        File file = new File(\".\");\r\n        // 直接获取文件名，输出\".\"\r\n        System.out.println(file.getName());\r\n        // 获取相对路径的父路径可能出错，下面代码输出 null\r\n        System.out.println(file.getParent());\r\n        // 获取绝对路径\r\n        System.out.println(file.getAbsoluteFile());\r\n        // 获取上一级路径\r\n        System.out.println(file.getAbsoluteFile().getParent());\r\n\r\n        // 以指定的文件名创建 File 对象\r\n        File newFile = new File(\"D:\\\\qst.txt\");\r\n        System.out.println(\"newFile 对象是否存在：\" + newFile.exists());\r\n        try {\r\n            // 以指定newFile对象来创建一个文件\r\n            newFile.createNewFile();\r\n            System.out.println(newFile.getName());\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        // 以 newFile 对象来创建一个目录，因为 newFile 已经存在\r\n        // 所以下面方法返回 false，即无法创建该目录\r\n        System.out.println(\"创建目录：\" + newFile.mkdir());\r\n\r\n        // 使用list()方法来列出当前路径下的所有文件和路径\r\n        System.out.println(\"====当前路径下所有文件和路径如下====\");\r\n        String[] fileList = file.list();\r\n        for (String fileName : fileList) {\r\n            System.out.println(fileName);\r\n        }\r\n\r\n        // listRoots()静态方法列出所有的磁盘根路径。\r\n        System.out.println(\"====系统所有根路径如下====\");\r\n        File[] roots = File.listRoots();\r\n        for (File root : roots) {\r\n            System.out.println(root);\r\n        }\r\n    }\r\n}\r\n```\r\n---\r\n~~.\r\nnull\r\nG:\\Java\\Study2\\JavaSE\\.\r\nG:\\Java\\Study2\\JavaSE\r\nnewFile 对象是否存在：true\r\nqst.txt\r\n创建目录：false\r\n====当前路径下所有文件和路径如下====\r\n.idea\r\nDemo.txt\r\nDemo2.txt\r\nJavaSE.iml\r\nout\r\nsrc\r\n====系统所有根路径如下====\r\nC:\\\r\nD:\\\r\nE:\\\r\nF:\\\r\nG:\\\r\nH:\\\r\nI:\\~~\r\n\r\n---\r\n### FilenameFilter 接口\r\n文件过滤器接口，提供 accept 方法\r\n```\r\npackage io;\r\n\r\nimport java.io.File;\r\nimport java.io.FilenameFilter;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args) {\r\n        // 根据路径名称创建 File 对象\r\n        File file = new File(\".\");\r\n        // 得到文件名列表\r\n        if (file.exists() && file.isDirectory()) {\r\n            // 显示该目录下所有文件列表\r\n            String[] allFileNames = file.list();\r\n\r\n            for (String name : allFileNames) {\r\n                System.out.println(name);\r\n            }\r\n            System.out.println(\"--------------------\");\r\n\r\n            // 创建FileNameFilter类型的匿名类，并作为参数传入到list()方法中\r\n            String[] filterFileNames = file.list(new FilenameFilter() {\r\n                public boolean accept(File dir, String name) {\r\n                    // 对文件名进行过滤，文件名的后缀为.zip或.txt\r\n                    return (name.endsWith(\".zip\") || name.endsWith(\".txt\"));\r\n                }\r\n            });\r\n            System.out.println(\"过滤后的文件列表：\");\r\n            for (String name : filterFileNames) {\r\n                System.out.println(name);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n---\r\n~~.idea\r\nDemo.txt\r\nDemo2.txt\r\nJavaSE.iml\r\nout\r\nsrc\r\n\\--------------------\r\n过滤后的文件列表：\r\nDemo.txt\r\nDemo2.txt~~\r\n\r\n---\r\n## 2. IO 流\r\nJava 的 IO 流都是由以下 4 个抽象基类派生的。\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/11HKL57cGk.png)\r\n\r\n计算机中的文件常被分为二进制文件和文本文件两大类。\r\n\r\n字节流处理的最基本单位为单个字节\r\n字符流处理的最基本的单元是 Unicode 码元\r\n\r\n**如果进行输入输出的内容是文本，则使用字符流，若是二进制，则使用字节流。**\r\n\r\n## 3. 字节流\r\n### InputStream\r\n>读取一个 .java 文件，并打印在控制台上\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\n\r\npublic class FileInputStreamDemo {\r\n    public static void main(String[] args) {\r\n        // 声明文件字节输入流\r\n        FileInputStream fis = null;\r\n        try {\r\n            // 实例化文件字节输入流\r\n            fis = new FileInputStream(\"src\\\\io\\\\FileInputStreamDemo.java\");\r\n            // 创建一个长度为1024的字节数组作为缓冲区\r\n            byte[] bbuf = new byte[1024];\r\n            // 用于保存实际读取的字节数\r\n            int hasRead = 0;\r\n            // 使用循环重复读文件中的数据\r\n            while ((hasRead = fis.read(bbuf)) > 0) {\r\n                // 将缓冲区中的数据转换成字符串输出\r\n                System.out.print(new String(bbuf, 0, hasRead));\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                // 关闭文件输入流\r\n                fis.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n### OutputStream\r\n>控制台输入内容，保存到文件\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class FileOutputStreamDemo {\r\n    public static void main(String[] args) {\r\n        // 建立一个从键盘接收数据的扫描器\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        // 声明文件字节输出流\r\n        FileOutputStream fos = null;\r\n        try {\r\n            // 实例化文件字节输出流\r\n            fos = new FileOutputStream(\"D:\\\\mytest.txt\");\r\n            System.out.println(\"请输入内容：\");\r\n            String str = scanner.nextLine();\r\n            // 将数据写入文件中\r\n            fos.write(str.getBytes());\r\n            System.out.println(\"已保存！\");\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                // 关闭文件输出流\r\n                fos.close();\r\n                scanner.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n```\r\n\r\n## 4. 字符流\r\n### Writer\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/daily/181007/kI45gfiJa6.png)\r\n\r\n既然 IO 流是用于操作数据的，那么数据的最常见体现形式是：文件。\r\n\r\n需求:在硬盘上，创建一个文件并写入一些文字数据。\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\n/**\r\n * 字符流\r\n *  在硬盘上，创建一个文件并写入一些文字数据\r\n * Created by CaptainQR on 2018/10/7.\r\n */\r\npublic class FileWriterDemo {\r\n    public static void main(String[] args) throws IOException{\r\n        /*\r\n        * 1. 创建一个 FileWriter 对象，该对象一被初始化就必须要明确被操作的文件\r\n        *   而且该文件会被创建到指定目录下，如果该目录下有同名文件，将被覆盖。\r\n        *   其实该步就是在明确数据要存放的目的地。\r\n        * */\r\n        FileWriter fw = new FileWriter(\"Demo.txt\");\r\n\r\n        //2. 调用 write 方法，将字符串写入到流中\r\n        fw.write(\"abc\");\r\n\r\n        //3. 刷新流对象中的缓冲数据，将数据刷到目的地中\r\n        fw.flush();\r\n        fw.write(\"--def\");\r\n\r\n        //4. 关闭流资源，但是关闭之前会刷新一次内部的缓冲中的数据，将数据刷到目的地中\r\n        //   和 flush 的区别：flush 刷新后，流可以继续使用，close 刷新后，会将流关闭\r\n        fw.close();\r\n    }\r\n}\r\n```\r\n\r\n#### 续写\r\n>构造函数\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/daily/181007/9I9JbDBkE7.png)\r\n\r\n```\r\n//传递一个 true 参数，代表不覆盖已有的文件，在末尾追加\r\nFileWriter fw2 = new FileWriter(\"Demo.txt\",true);\r\n```\r\n### Reader\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/daily/181007/e3a8ecdEH0.png)\r\n#### 1. 读取单个字符\r\n```\r\npackage io;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args){\r\n        FileReader fr = null;\r\n        try {\r\n            // 创建一个文件读取对象，和指定名称的文件相关联\r\n            fr = new FileReader(\"Demo.txt\");\r\n            int ch = 0;\r\n            /*\r\n            * 调用读取流对象的 read 方法\r\n            *   read()：一次读一个字符，而且会自动往下读\r\n            * */\r\n            while ((ch = fr.read()) != -1){\r\n                System.out.println((char)ch);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            if(fr != null){\r\n                try {\r\n                    fr.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n#### 2. 读取字符数组\r\n>读取一个 .java 文件，并打印在控制台上\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args){\r\n        FileReader fr = null;\r\n        try {\r\n            fr = new FileReader(\"G:\\\\Java\\\\Study2\\\\JavaSE\\\\src\\\\io\\\\FileWriterDemo.java\");\r\n            // 存储读到的字符，一般定义大小为 1024 即为 1k\r\n            char[] buf = new char[1024];\r\n            int num = 0;\r\n            // read(char[]) 返回的是读到的字符个数\r\n            while ((num = fr.read(buf)) != -1){\r\n                // String 类，String(char value[], int offset, int count)\r\n                // 分配一个新的 String，它包含取 自字符数组一个子数组(num)的字符\r\n                System.out.println(new String(buf,0,num));\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            if(fr != null){\r\n                try {\r\n                    fr.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n#### 3. 将C盘一个文本文件复制到D盘\r\n复制的原理：\r\n其实就是将C盘下的文件数据存储到D盘的一个文件中。\r\n\r\n步骤：\r\n1，在 D 盘创建一个文件。用于存储 C 盘文件中的数据。\r\n2，定义读取流和 C 盘文件关联。\r\n3，通过不断的读写完成数据存储。\r\n4，关闭资源。\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args){\r\n        FileWriter fw = null;\r\n        FileReader fr = null;\r\n        try {\r\n            fr = new FileReader(\"Demo.txt\");\r\n            // 写入 H 盘\r\n            fw = new FileWriter(\"H:\\\\DemoCopy.txt\");\r\n\r\n            char[] buf = new char[1024];\r\n            int len = 0;\r\n            while ((len = fr.read(buf)) != -1){\r\n                fw.write(buf,0,len);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            // 需要对每一个流进行处理\r\n            if(fr != null){\r\n                try {\r\n                    fr.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            if(fw != null){\r\n                try {\r\n                    fw.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n#### 控制台输入，文件输出\r\n```\r\npackage io;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class WriterDemo {\r\n    public static void main(String[] args) {\r\n        // 建立一个从键盘接收数据的扫描器\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        try (\r\n                FileWriter fw = new FileWriter(\"H:\\\\WriterDemo.txt\");\r\n                ) {\r\n            System.out.println(\"请输入内容：\");\r\n            String str = scanner.nextLine();\r\n            // 将数据写入文件中\r\n            fw.write(str);\r\n            System.out.println(\"已保存！\");\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n## 5. Buffered 缓冲区\r\n缓冲区的出现是为了提高流的操作效率，所以在创建缓冲区之前，必须要先有流对象\r\n### BufferedWriter\r\n```\r\npackage io;\r\n\r\nimport java.io.BufferedWriter;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class BufferedWriterDemo {\r\n    public static void main(String[] args) throws IOException{\r\n        //创建一个字符写入流对象\r\n        FileWriter fw = new FileWriter(\"buf.txt\");\r\n\r\n        //为了提高字符写入流效率，加入了缓冲技术\r\n        //只要将需要被提高效率的流对象作为参数传递给缓冲区的构造函数即可\r\n        BufferedWriter bufw = new BufferedWriter(fw);\r\n\r\n        for (int x=1;x<5;x++){\r\n            bufw.write(\"abc\" + x);\r\n            bufw.newLine(); //换行\r\n            bufw.flush();   //刷新\r\n        }\r\n        bufw.close();   //其实关闭缓冲流就是渣关闭缓冲区中的流对象\r\n    }\r\n}\r\n```\r\n### BufferedReader\r\n```\r\npackage io;\r\n\r\nimport java.io.*;\r\n\r\npublic class BufferedReaderDemo {\r\n    public static void main(String[] args) throws IOException{\r\n        //创建一个读取流对象和文件相关联\r\n        FileReader fr = new FileReader(\"buf.txt\");\r\n\r\n        //为了提高效率，加入了缓冲技术，将字符读取对象作为参数传递给缓冲对象的构造函数\r\n        BufferedReader bufr = new BufferedReader(fr);\r\n\r\n        //readLine 一次读一行\r\n        String line = null;\r\n        while ((line = bufr.readLine()) != null){\r\n            System.out.println(line);\r\n        }\r\n        bufr.close();\r\n    }\r\n}\r\n```\r\n>通过缓冲区复制文件\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.*;\r\n\r\npublic class BufferCopy {\r\n    public static void main(String[] args){\r\n        try (\r\n                BufferedReader bufr = new BufferedReader(new FileReader(\"Demo.txt\"));\r\n                BufferedWriter bufw = new BufferedWriter(new FileWriter(\"H:\\\\BufferCopy.txt\"));\r\n                ){\r\n            String line = null;\r\n            while ((line = bufr.readLine()) != null){\r\n                bufw.write(line);\r\n                bufw.newLine();\r\n                bufw.flush();\r\n            }\r\n        }catch (IOException e){\r\n            System.out.println(\"Error\");\r\n        }\r\n    }\r\n}\r\n```\r\n## 6. 过滤流和转换流\r\n### 过滤流\r\n过滤流对一个已有的流进行连接和封装，以更加便利的方式对数据进行读写操作，过滤流又分为过滤输入流和过滤输出流。\r\n```\r\npackage io;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.FileInputStream;\r\n\r\npublic class BufferedInputStreamDemo {\r\n\r\n    public static void main(String[] args) {\r\n        try (\r\n                // 利用FileInputStream对象创建一个输入缓冲流\r\n                BufferedInputStream bi = new BufferedInputStream(new FileInputStream(\"Demo.txt\"));\r\n                )\r\n        {\r\n            int result = 0;\r\n            //循环读数据\r\n            while ((result = bi.read()) != -1) {\r\n                //输出\r\n                System.out.print((char) result);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n### 转换流\r\nJava 的 IO流 体系中提供了两个转换流：\r\n- InputStreamReader：将字节输入流转换为字符输入流\r\n- OutputStreamWriter：将字符输出流转换为字节输出流\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class InputStreamReaderDemo {\r\n    public static void main(String[] args) {\r\n        try (\r\n                // 将 Sytem.in 标准输入流 InputStream 字节流转换成 Reader 字符流\r\n                InputStreamReader reader = new InputStreamReader(System.in);\r\n                // 将普通 Reader 包装成 BufferedReader，BufferedReader 具有缓冲功能\r\n                BufferedReader br = new BufferedReader(reader)) {\r\n            String line = null;\r\n            // 采用循环方式来一行一行的读取\r\n            while ((line = br.readLine()) != null) {\r\n                // 如果读取的字符串为\"exit\"，程序退出\r\n                if (line.equals(\"exit\")) {\r\n                    System.exit(1);\r\n                }\r\n                // 打印读取的内容\r\n                System.out.println(\"输入内容为:\" + line);\r\n            }\r\n        } catch (IOException ioe) {\r\n            ioe.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n## 7. 对象流\r\n在 Java 中，使用对象流可实现对象的序列化和反序列化。\r\n\r\n对象的序列化是指将对象数据写到一个输出流中的过程；而对象的反序列化是指从一个输入流中读取一个对象。\r\n\r\n在 Java 中，如果需要将某个对象保存到磁盘或通过网络传输，则该对象必须是可以序列化的。\r\n\r\n若一个类的对象是可序列化的，则该类必须实现 java.lang 包下的 Serializable 接口或 Externalizable 接口。\r\n\r\n```\r\n//定义一个可以序列化的 Person 实体类\r\npublic class Person implements Serializable {\r\n	...\r\n}\r\n```\r\n\r\n>序列化\r\n\r\n```\r\nimport java.io.FileOutputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.io.Serializable;\r\n\r\npublic class ObjectOutputStreamDemo {\r\n\r\n	public static void main(String[] args) {\r\n\r\n		// 创建一个ObjectOutputStream对象输出流\r\n		try (ObjectOutputStream obs = new ObjectOutputStream(new FileOutputStream(\"d:\\\\PersonObject.txt\"))) {\r\n			// 创建一个Person类型的对象\r\n			Person person = new Person(\"张三\", 25, \"青岛\");\r\n			// 把对象写入到文件中\r\n			obs.writeObject(person);\r\n			obs.flush();\r\n			System.out.println(\"序列化完毕！\");\r\n		} catch (Exception ex) {\r\n			ex.printStackTrace();\r\n		}\r\n	}\r\n}\r\n```\r\n>反序列化\r\n\r\n```\r\nimport java.io.FileInputStream;\r\nimport java.io.ObjectInputStream;\r\n\r\npublic class ObjectInputStreamDemo {\r\n	public static void main(String[] args) {\r\n		// 创建一个ObjectInputStream对象输入流\r\n		try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"d:\\\\PersonObject.txt\"))) {\r\n			// 从ObjectInputStream对象输入流中读取一个对象，并强制转换成Person对象\r\n			Person person =(Person)ois.readObject();\r\n			System.out.println(\"序列化完毕！读出的对象信息如下：\");\r\n			System.out.println(person);\r\n		} catch (Exception ex) {\r\n			ex.printStackTrace();\r\n		}\r\n	}\r\n}\r\n```\r\n## 8. NIO\r\nNIO 将文件或文件的一段区域映射到内存中，这样可以像访问内存一样来访问文件。\r\n\r\nBuffer 和 Channel 是 NIO 中两个核心对象：\r\n- Buffer 可以理解成一个容器，其本质是一个数组。\r\n- Channel 是对传统 IO 系统的模拟，在 NIO 系统中所有数据都需要经过通道传输；Channel 与传统的 InputStream、OutputStream最大的区别是提供一个 map() 方法，通过该方法可以直接将一块数据映射到内存中。\r\n\r\n### Buffer\r\n\r\n```\r\nimport java.nio.CharBuffer;\r\n\r\npublic class NIOBufferDemo {\r\n	public static void main(String[] args) {\r\n		// 实例化一个容量为 8 的 CharBuffer\r\n		CharBuffer buff = CharBuffer.allocate(8);\r\n		System.out.println(\"capacity: \"	+ buff.capacity());\r\n		System.out.println(\"limit: \" + buff.limit());\r\n		System.out.println(\"position: \" + buff.position());\r\n		\r\n		// 使用 put 方法，放入元素\r\n		buff.put(\'a\');\r\n		buff.put(\'b\');\r\n		buff.put(\'c\');     \r\n		System.out.println(\"加入三个元素后，position = \" + buff.position());\r\n		\r\n		// 调用 flip() 方法，反转缓冲区\r\n		buff.flip();	  // ③\r\n		System.out.println(\"执行flip()后，limit = \" + buff.limit());\r\n		System.out.println(\"position = \" + buff.position());\r\n		\r\n		// get 方法，取出第一个元素\r\n		System.out.println(\"第一个元素(position=0)：\" + buff.get()); \r\n		System.out.println(\"取出一个元素后，position = \" + buff.position());\r\n		\r\n		// 调用 clear 方法，清除缓冲区\r\n		buff.clear(); \r\n		System.out.println(\"执行clear()后，limit = \" + buff.limit());\r\n		System.out.println(\"执行clear()后，position = \" + buff.position());\r\n		System.out.println(\"执行clear()后，缓冲区内容并没有被清除：\" + \"第三个元素为：\" +  buff.get(2));\r\n		System.out.println(\"执行绝对读取后，position = \" + buff.position());\r\n\r\n	}\r\n\r\n}\r\n```\r\n### Channel\r\nChannel 与传统的 IO流 类似，但主要有两点区别：\r\n- Channel 类可以直接将指定文件的部分或全部直接映射成 Buffer\r\n- 程序不能直接访问 Channel 中的数据，Channel 只能与 Buffer 进行交互\r\n>将 FileChannel 的所有数据映射成 ByteBuffer\r\n\r\n```\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.CharBuffer;\r\nimport java.nio.MappedByteBuffer;\r\nimport java.nio.channels.FileChannel;\r\nimport java.nio.charset.Charset;\r\nimport java.nio.charset.CharsetDecoder;\r\n\r\npublic class NIOFileChannelDemo {\r\n    public static void main(String[] args) {\r\n        File f = new File(\"src\\\\com\\\\qst\\\\chapter01\\\\NIOFileChannelDemo.java\");\r\n        try (\r\n                // 创建FileInputStream，以该文件输入流创建FileChannel\r\n                FileChannel inChannel = new FileInputStream(f).getChannel();\r\n                // 以文件输出流创建FileBuffer，用以控制输出\r\n                FileChannel outChannel = new FileOutputStream(\"D:\\\\channel.txt\")\r\n                        .getChannel()) {\r\n            // 将FileChannel里的全部数据映射成ByteBuffer\r\n            MappedByteBuffer buffer = inChannel.map(\r\n                    FileChannel.MapMode.READ_ONLY, 0, f.length()); // ①\r\n            // 使用GBK的字符集来创建解码器\r\n            Charset charset = Charset.forName(\"GBK\");\r\n            // 直接将buffer里的数据全部输出\r\n            outChannel.write(buffer); // ②\r\n            // 再次调用buffer的clear()方法，复原limit、position的位置\r\n            buffer.clear();\r\n            // 创建解码器(CharsetDecoder)对象\r\n            CharsetDecoder decoder = charset.newDecoder();\r\n            // 使用解码器将ByteBuffer转换成CharBuffer\r\n            CharBuffer charBuffer = decoder.decode(buffer);\r\n            // CharBuffer的toString方法可以获取对应的字符串\r\n            System.out.println(charBuffer);\r\n        } catch (IOException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## 9. NOI.2\r\n>java.nio.file.Path 下的 Path类\r\n\r\n```\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\n\r\npublic class NIO2PathDemo {\r\n	public static void main(String[] args) {\r\n		// 以当前路径来创建Path对象\r\n		Path path = Paths.get(\".\");\r\n		System.out.println(\"path里包含的路径数量：\" + path.getNameCount());\r\n		System.out.println(\"path的根路径：\" + path.getRoot());\r\n		\r\n		// 获取path对应的绝对路径。\r\n		Path absolutePath = path.toAbsolutePath();\r\n		System.out.println(absolutePath);\r\n		\r\n		// 获取绝对路径的根路径\r\n		System.out.println(\"absolutePath的根路径：\" + absolutePath.getRoot());\r\n		\r\n		// 获取绝对路径所包含的路径数量\r\n		System.out.println(\"absolutePath里包含的路径数量：\" + absolutePath.getNameCount());\r\n		System.out.println(absolutePath.getName(3));\r\n		\r\n		// 以多个String来构建Path对象\r\n		Path path2 = Paths.get(\"g:\", \"publish\", \"codes\");\r\n		System.out.println(path2);\r\n	}\r\n}\r\n```\r\n\r\n>Files类\r\n\r\n```\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.charset.Charset;\r\nimport java.nio.file.FileStore;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class NIO2FilesDemo {\r\n	public static void main(String[] args) {\r\n		try {\r\n			// 复制文件\r\n			Files.copy(\r\n					Paths.get(\"src\\\\com\\\\qst\\\\chapter01\\\\NIO2FilesDemo.java\"),\r\n					new FileOutputStream(\"a.txt\"));\r\n			// 判断NIO2FilesDemo.java文件是否为隐藏文件\r\n			System.out.println(\"NIO2FilesDemo.java是否为隐藏文件：\"\r\n					+ Files.isHidden(Paths\r\n							.get(\"src/com/qst/chapter09/NIO2FilesDemo.java\")));\r\n			// 一次性读取FilesTest.java文件的所有行\r\n			List<String> lines = Files.readAllLines(Paths.get(\"src\", \"com\",\r\n					\"qst\", \"chapter09\", \"NIO2FilesDemo.java\"), Charset\r\n					.forName(\"gbk\"));\r\n			System.out.println(\"行数：\" + lines.size());\r\n			// 判断指定文件的大小\r\n			System.out.println(\"a.txt文件的大小为：\" + Files.size(Paths.get(\"a.txt\")));\r\n			List<String> poem = new ArrayList<>();\r\n			poem.add(\"使用NIO.2技术\");\r\n			poem.add(\"往文件中写内容\");\r\n			// 直接将多个字符串内容写入指定文件中\r\n			Files.write(Paths.get(\"pome.txt\"), poem, Charset.forName(\"gbk\"));\r\n			FileStore cStore = Files.getFileStore(Paths.get(\"C:\"));\r\n			// 判断C盘的总空间，可用空间\r\n			System.out.println(\"C:共有空间：\" + cStore.getTotalSpace());\r\n			System.out.println(\"C:可用空间：\" + cStore.getUsableSpace());\r\n		} catch (FileNotFoundException e) {\r\n			e.printStackTrace();\r\n		} catch (IOException e) {\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n}\r\n```',`groups`='Java',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 214 [ RunTime:0.001064s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000922s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000416s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001238s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000353s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/214.html
[ info ] qingrang.top/daily/admin/note/shownote/id/214.html [运行时间：0.051218s][吞吐率：19.52req/s] [内存消耗：2,023.62kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/214',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000459s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001280s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000481s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000848s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000285s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:14+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/222
[ info ] qingrang.top/daily/admin/note/editnote/id/222 [运行时间：0.053262s][吞吐率：18.78req/s] [内存消耗：2,028.18kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000446s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001195s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000426s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000958s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000288s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/222.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/222.html [运行时间：0.064924s][吞吐率：15.40req/s] [内存消耗：2,053.05kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '1923',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/222',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 不盲目倾向弱者，不过分苛刻强者
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/GKl5i9B21f.png)

认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。

然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。 

细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。',
  'groups' => 'Essays',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000551s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002351s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000474s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000323s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001012s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000321s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000266s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000351s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=222,`p_id`=24,`title`='不盲目倾向弱者，不过分苛刻强者\r',`content`='# 不盲目倾向弱者，不过分苛刻强者\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/GKl5i9B21f.png)\r\n\r\n认知不足，初看这条回复，我的观点是:留言很客气了，但冯大回复可不太友好，感觉很傲气，因此更倾向于留言者，不太赞同冯大。\r\n\r\n然而帅张却刚刚相反，他觉得留言者没脑子，当然，他也给出了这么说的原因。 \r\n\r\n细细想来，确实是这么回事。自己看问题过于局限，往往忽略了事件背后的实际情况，这也导致了情绪上会直接倾向于弱者，难道这就是所谓的「仇强」心理？哎呀，不可，不可，实在不可。',`groups`='Essays',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 222 [ RunTime:0.000565s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000929s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Essays' LIMIT 1 [ RunTime:0.000741s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'Essays' [ RunTime:0.000368s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/222.html
[ info ] qingrang.top/daily/admin/note/shownote/id/222.html [运行时间：0.061150s][吞吐率：16.35req/s] [内存消耗：1,980.55kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/222',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '222',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000627s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001445s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 222 LIMIT 1 [ RunTime:0.000419s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001042s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000341s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/229
[ info ] qingrang.top/daily/admin/note/editnote/id/229 [运行时间：0.060853s][吞吐率：16.43req/s] [内存消耗：2,032.01kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '229',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000482s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001291s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 229 LIMIT 1 [ RunTime:0.000541s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000931s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000487s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:47+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/229.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/229.html [运行时间：0.060397s][吞吐率：16.56req/s] [内存消耗：2,082.37kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12493',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/229',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 数据结构与算法之美 - 数组
[TOC]
## 什么是数组？
数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。
## 如何实现随机访问？
1. 数组是线性表（Linear List）
数组支持随机访问，根据下标随机访问的时间复杂度为 O(1)。
2. 数组是连续的内存空间和相同类型的数据。

## 一维数组内存寻址公式
`a[i]address = base_address + i * data_type_size`

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/8KcK70mFh5.png)
## 二维数组的内存寻址公式
对于 m * n 的数组，`a [i][j] (i < m,j < n)`的地址为：

`a[i][j]address = base_address + ( i * n + j) * type_size`

## 警惕数组的访问越界问题
```
int main(int argc, char* argv[]){
    int i = 0;
    int arr[3] = {0};
    for(; i<=3; i++){
        arr[i] = 0;
        printf("hello world\\n");
    }
    return 0;
}
```
这段代码的运行结果并非是打印三行 “hello word”，而是会无限打印 “hello world”，这是为什么呢？

在 C 语言中，只要不是访问受限的内存，所有的内存空间都是可以自由访问的。

根据我们前面讲的数组寻址公式，a[3] 也会被定位到某块不属于数组的内存地址上，而这个地址正好是存储变量 i 的内存地址，那么 a[3]=0 就相当于 i=0，所以就会导致代码无限循环。

数组越界在 C 语言中是一种未决行为，并没有规定数组访问越界时编译器应该如何处理。因为，访问数组的本质就是访问一段连续内存，只要数组通过偏移计算得到的内存地址是可用的，那么程序就可能不会报任何错误。

**函数体内的局部变量存在栈上，且是连续压栈**。在 Linux 进程的内存布局中，栈区在高地址空间，从高向低增长。变量 i 和 arr 在相邻地址，且 i 比 arr 的地址大，所以 arr 越界正好访问到 i 。当然，前提是 i 和 arr 元素同类型，否则那段代码仍是未决行为。

但并非所有的语言都像 C 一样，把数组越界检查的工作丢给程序员来做，像 Java 本身就会做越界检查。

## 数组和 ArrayList 的区别
### 容器会自动扩容，耗时操作
ArrayList 每次存储空间不够的时候，它都会将空间自动扩容为 1.5 倍大小。因为**扩容操作涉及内存申请和数据搬移，是比较耗时的**。所以，如果事先能确定需要存储的数据大小，最好在创建 ArrayList 的时候事先指定数据大小。事先指定数据大小可以省掉很多次内存申请和数据搬移操作。
### Java ArrayList 无法存储基本类型
Java ArrayList 无法存储基本类型，比如 int、long，需要封装为 Integer、Long 类，而 Autoboxing、Unboxing 则有一定的性能消耗，所以如果特别关注性能，或者希望使用基本类型，就可以选用数组。

## 为什么大多数编程语言中，数组要从 0 开始编号，而不是从 1 开始呢？
从数组存储的内存模型上来看，“下标”最确切的定义应该是“偏移（offset）”。如果用 a 来表示数组的首地址，a[0] 就是偏移为 0 的位置，也就是首地址，a[k] 就表示偏移 k 个 type_size 的位置，所以计算 a[k] 的内存地址只需要用这个公式：

`a[k]_address = base_address + k * type_size`

但是，如果数组从 1 开始计数，那我们计算数组元素 a[k] 的内存地址就会变为：

`a[k]_address = base_address + (k-1)*type_size`

对比两个公式，我们不难发现，从 1 开始编号，每次随机访问数组元素都多了一次减法运算，对于 CPU 来说，就是多了一次减法指令。

数组作为非常基础的数据结构，通过下标随机访问数组元素又是其非常基础的编程操作，效率的优化就要尽可能做到极致。所以为了减少一次减法操作，数组选择了从 0 开始编号，而不是从 1 开始。
## JVM 的标记清除垃圾回收算法
标记-清除算法在垃圾收集时会先标记出需要回收的对象，标记完成后统一回收所有被标记的对象。清除之后会产生大量不连续的内存碎片。标记-整理垃圾回收算法在标记完成之后让所有存活的对象都向一端移动，然后直接清理掉边界以外的内存。

不足：1.效率问题。标记和清理效率都不高，但是当知道只有少量垃圾产生时会很高效。2.空间问题。会产生不连续的内存空间碎片。
',
  'groups' => 'Algorithm',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '229',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000619s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001386s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 229 LIMIT 1 [ RunTime:0.000412s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 229 LIMIT 1 [ RunTime:0.000288s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000853s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Algorithm' LIMIT 1 [ RunTime:0.000314s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000319s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=229,`p_id`=2,`title`='数据结构与算法之美 - 数组\r',`content`='# 数据结构与算法之美 - 数组\r\n[TOC]\r\n## 什么是数组？\r\n数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。\r\n## 如何实现随机访问？\r\n1. 数组是线性表（Linear List）\r\n数组支持随机访问，根据下标随机访问的时间复杂度为 O(1)。\r\n2. 数组是连续的内存空间和相同类型的数据。\r\n\r\n## 一维数组内存寻址公式\r\n`a[i]address = base_address + i * data_type_size`\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/8KcK70mFh5.png)\r\n## 二维数组的内存寻址公式\r\n对于 m * n 的数组，`a [i][j] (i < m,j < n)`的地址为：\r\n\r\n`a[i][j]address = base_address + ( i * n + j) * type_size`\r\n\r\n## 警惕数组的访问越界问题\r\n```\r\nint main(int argc, char* argv[]){\r\n    int i = 0;\r\n    int arr[3] = {0};\r\n    for(; i<=3; i++){\r\n        arr[i] = 0;\r\n        printf(\"hello world\\n\");\r\n    }\r\n    return 0;\r\n}\r\n```\r\n这段代码的运行结果并非是打印三行 “hello word”，而是会无限打印 “hello world”，这是为什么呢？\r\n\r\n在 C 语言中，只要不是访问受限的内存，所有的内存空间都是可以自由访问的。\r\n\r\n根据我们前面讲的数组寻址公式，a[3] 也会被定位到某块不属于数组的内存地址上，而这个地址正好是存储变量 i 的内存地址，那么 a[3]=0 就相当于 i=0，所以就会导致代码无限循环。\r\n\r\n数组越界在 C 语言中是一种未决行为，并没有规定数组访问越界时编译器应该如何处理。因为，访问数组的本质就是访问一段连续内存，只要数组通过偏移计算得到的内存地址是可用的，那么程序就可能不会报任何错误。\r\n\r\n**函数体内的局部变量存在栈上，且是连续压栈**。在 Linux 进程的内存布局中，栈区在高地址空间，从高向低增长。变量 i 和 arr 在相邻地址，且 i 比 arr 的地址大，所以 arr 越界正好访问到 i 。当然，前提是 i 和 arr 元素同类型，否则那段代码仍是未决行为。\r\n\r\n但并非所有的语言都像 C 一样，把数组越界检查的工作丢给程序员来做，像 Java 本身就会做越界检查。\r\n\r\n## 数组和 ArrayList 的区别\r\n### 容器会自动扩容，耗时操作\r\nArrayList 每次存储空间不够的时候，它都会将空间自动扩容为 1.5 倍大小。因为**扩容操作涉及内存申请和数据搬移，是比较耗时的**。所以，如果事先能确定需要存储的数据大小，最好在创建 ArrayList 的时候事先指定数据大小。事先指定数据大小可以省掉很多次内存申请和数据搬移操作。\r\n### Java ArrayList 无法存储基本类型\r\nJava ArrayList 无法存储基本类型，比如 int、long，需要封装为 Integer、Long 类，而 Autoboxing、Unboxing 则有一定的性能消耗，所以如果特别关注性能，或者希望使用基本类型，就可以选用数组。\r\n\r\n## 为什么大多数编程语言中，数组要从 0 开始编号，而不是从 1 开始呢？\r\n从数组存储的内存模型上来看，“下标”最确切的定义应该是“偏移（offset）”。如果用 a 来表示数组的首地址，a[0] 就是偏移为 0 的位置，也就是首地址，a[k] 就表示偏移 k 个 type_size 的位置，所以计算 a[k] 的内存地址只需要用这个公式：\r\n\r\n`a[k]_address = base_address + k * type_size`\r\n\r\n但是，如果数组从 1 开始计数，那我们计算数组元素 a[k] 的内存地址就会变为：\r\n\r\n`a[k]_address = base_address + (k-1)*type_size`\r\n\r\n对比两个公式，我们不难发现，从 1 开始编号，每次随机访问数组元素都多了一次减法运算，对于 CPU 来说，就是多了一次减法指令。\r\n\r\n数组作为非常基础的数据结构，通过下标随机访问数组元素又是其非常基础的编程操作，效率的优化就要尽可能做到极致。所以为了减少一次减法操作，数组选择了从 0 开始编号，而不是从 1 开始。\r\n## JVM 的标记清除垃圾回收算法\r\n标记-清除算法在垃圾收集时会先标记出需要回收的对象，标记完成后统一回收所有被标记的对象。清除之后会产生大量不连续的内存碎片。标记-整理垃圾回收算法在标记完成之后让所有存活的对象都向一端移动，然后直接清理掉边界以外的内存。\r\n\r\n不足：1.效率问题。标记和清理效率都不高，但是当知道只有少量垃圾产生时会很高效。2.空间问题。会产生不连续的内存空间碎片。\r\n',`groups`='Algorithm',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 229 [ RunTime:0.000688s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Algorithm' LIMIT 1 [ RunTime:0.000843s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=2  WHERE  `groups` = 'Algorithm' [ RunTime:0.000308s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Algorithm' LIMIT 1 [ RunTime:0.000805s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=2  WHERE  `groups` = 'Algorithm' [ RunTime:0.000308s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:47+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/229.html
[ info ] qingrang.top/daily/admin/note/shownote/id/229.html [运行时间：0.052009s][吞吐率：19.23req/s] [内存消耗：1,984.41kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/229',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '229',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000504s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001293s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 229 LIMIT 1 [ RunTime:0.000439s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000976s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000303s ]
---------------------------------------------------------------
[ 2018-11-06T17:51:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/239.html
[ info ] qingrang.top/daily/admin/note/editnote/id/239.html [运行时间：0.051806s][吞吐率：19.30req/s] [内存消耗：2,032.81kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '239',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000538s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001477s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 239 LIMIT 1 [ RunTime:0.000534s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000908s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000336s ]
---------------------------------------------------------------
[ 2018-11-06T17:52:15+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/239.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/239.html [运行时间：0.082733s][吞吐率：12.09req/s] [内存消耗：2,086.01kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11335',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/239.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 适配器模式
[TOC]
## GitHub
https://github.com/SSGamble/AdapterPattern
## 概念
适配器模式就是将某个类的接口转换为接口客户所需的类型。 换句话说，**适配器模式解决的问题是，使得原本由于接口不兼容而不能一起工作、不能统一管理的那些类可以在一起工作、可以进行统一管理。**

需求：厨师的工作是 cook()，程序员的工作是 program()，司机的工作是 drive()，教师的工作是 teach()，不同的工种，其具体工作内容不同。现在程序要将这些（例如有 30 个不同工种）不同工种的工作内容全部输出。

解决方案一：逐个访问每个工种对象的相应工作方法。无法循环遍历，无法统一管理。
解决方案二：使用适配器模式，将这些不兼容的具体工作转换为一个统一的工作，实现循环遍历。

## Demo
这里举个适配器模式的例子：这里有厨师接口 ICooker、程序员接口 IProgrammer，分别用于定义他们各自工种的具体工作。然后又定义了全聚德的厨师 QjdCooker、京东的程序员 JdProgrammer。这些不同的工种所做的工作都各自是不同的，无法进行统一管理，协同工作。所以，此时就需要定义一个员工适配器接口 IWorkerAdapter，用于将这些不同的工种进行统一管理。

### 工种的接口和实现类

厨师接口:
```
public interface ICooker {
	String cook();
}
```
厨师实现类：
```
public class QjdCooker implements ICooker {
	@Override
	public String cook() {
		return "烤制美味烤鸭";
	}
}
```
程序员接口：
```
public interface IProgrammer {
	String program();
}
```
程序员实现类：
```
public class JdProgrammer implements IProgrammer {
	@Override
	public String program() {
		return "编写高效程序";
	}
}
```

### 不使用适配器
![不使用适配器](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/5e492aCk3d.png)
```
public class MyTest {
	public static void main(String[] args) {
		ICooker qjdCooker = new QjdCooker();
		IProgrammer jdProgrammer = new JdProgrammer();
		System.out.println(qjdCooker.cook());
		System.out.println(jdProgrammer.program());
	}
}
```
### 只定义一个适配器实现类
![只定义一个适配器实现类](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/jJ0CI54lCg.png)
适配器接口:
```
public interface IWorkerAdapter {
	String work(Object worker);
}
```
适配器类：
```
public class WorkerAdapter implements IWorkerAdapter {
	@Override
	public String work(Object worker) {
		String workContent = "";
		// 若传来的对象是厨师，则调用其 cook()方法
		if(worker instanceof ICooker) {
			workContent = ((ICooker)worker).cook();
		} else if(worker instanceof IProgrammer) {
			workContent = ((IProgrammer)worker).program();
		}
		return workContent;
	}
}
```
测试方法：
```
public class MyTest {
	public static void main(String[] args) {
		ICooker qjdCooker = new QjdCooker();
		IProgrammer jdProgrammer = new JdProgrammer();
		Object[] workers = {qjdCooker, jdProgrammer};
		
		// 创建适配器对象
		IWorkerAdapter adapter = new WorkerAdapter();
		// 循环遍历每个工种对象，让每个工种对象在适配器中逐个进行匹配
		for (Object worker : workers) {
			String workContent = adapter.work(worker);
			System.out.println(workContent);
		}
	}
}
```
### 多适配器实现类(为每一个工种都定义一个适配器)
![为每一个工种都定义一个适配器](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/62eegH64cb.png)
通用的适配器接口:
```
public interface IWorkerAdapter {
	String work(Object worker);
	boolean supports(Object worker);
}
```

厨师适配器:
```
public class CookerAdapter implements IWorkerAdapter {
	@Override
	public String work(Object worker) {
		return ((ICooker)worker).cook();
	}

	@Override
	public boolean supports(Object worker) {
		return (worker instanceof ICooker);
	}
}
```

程序员适配器:
```
public class ProgrammerAdapter implements IWorkerAdapter {
	@Override
	public String work(Object worker) {
		return ((IProgrammer)worker).program();
	}

	@Override
	public boolean supports(Object worker) {
		return (worker instanceof IProgrammer);
	}
}
```
测试方法：
```
public class MyTest {
	public static void main(String[] args) {
		ICooker qjdCooker = new QjdCooker();
		IProgrammer jdProgrammer = new JdProgrammer();
		Object[] workers = {qjdCooker, jdProgrammer};
		
		// 循环遍历每个工种对象，让每个工种对象在适配器中逐个进行匹配
		for (Object worker : workers) {
			IWorkerAdapter adapter = getAdapter(worker);
			System.out.println(adapter.work(worker));
		}
	}

	/**
	 * 根据 worker 获取相应的适配器对象
	 * @param worker 任何工人对象
	 * @return
	 */
	private static IWorkerAdapter getAdapter(Object worker) {
		List<IWorkerAdapter> adapters = getAllAdapters();
		for (IWorkerAdapter adapter : adapters) {
			if(adapter.supports(worker)) {
				return adapter;
			}
		}
		return null;
	}

	/**
	 * 获取所有的适配器
	 */
	private static List<IWorkerAdapter> getAllAdapters() {
		List<IWorkerAdapter> adapters = new ArrayList<>();
		adapters.add(new CookerAdapter());
		adapters.add(new ProgrammerAdapter());
		return adapters;
	}
}
```',
  'groups' => 'DesignPattern',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '239',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001067s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.003024s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 239 LIMIT 1 [ RunTime:0.000824s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 239 LIMIT 1 [ RunTime:0.000491s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.002141s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'DesignPattern' LIMIT 1 [ RunTime:0.000542s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000377s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=239,`p_id`=2,`title`='适配器模式\r',`content`='# 适配器模式\r\n[TOC]\r\n## GitHub\r\nhttps://github.com/SSGamble/AdapterPattern\r\n## 概念\r\n适配器模式就是将某个类的接口转换为接口客户所需的类型。 换句话说，**适配器模式解决的问题是，使得原本由于接口不兼容而不能一起工作、不能统一管理的那些类可以在一起工作、可以进行统一管理。**\r\n\r\n需求：厨师的工作是 cook()，程序员的工作是 program()，司机的工作是 drive()，教师的工作是 teach()，不同的工种，其具体工作内容不同。现在程序要将这些（例如有 30 个不同工种）不同工种的工作内容全部输出。\r\n\r\n解决方案一：逐个访问每个工种对象的相应工作方法。无法循环遍历，无法统一管理。\r\n解决方案二：使用适配器模式，将这些不兼容的具体工作转换为一个统一的工作，实现循环遍历。\r\n\r\n## Demo\r\n这里举个适配器模式的例子：这里有厨师接口 ICooker、程序员接口 IProgrammer，分别用于定义他们各自工种的具体工作。然后又定义了全聚德的厨师 QjdCooker、京东的程序员 JdProgrammer。这些不同的工种所做的工作都各自是不同的，无法进行统一管理，协同工作。所以，此时就需要定义一个员工适配器接口 IWorkerAdapter，用于将这些不同的工种进行统一管理。\r\n\r\n### 工种的接口和实现类\r\n\r\n厨师接口:\r\n```\r\npublic interface ICooker {\r\n	String cook();\r\n}\r\n```\r\n厨师实现类：\r\n```\r\npublic class QjdCooker implements ICooker {\r\n	@Override\r\n	public String cook() {\r\n		return \"烤制美味烤鸭\";\r\n	}\r\n}\r\n```\r\n程序员接口：\r\n```\r\npublic interface IProgrammer {\r\n	String program();\r\n}\r\n```\r\n程序员实现类：\r\n```\r\npublic class JdProgrammer implements IProgrammer {\r\n	@Override\r\n	public String program() {\r\n		return \"编写高效程序\";\r\n	}\r\n}\r\n```\r\n\r\n### 不使用适配器\r\n![不使用适配器](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/5e492aCk3d.png)\r\n```\r\npublic class MyTest {\r\n	public static void main(String[] args) {\r\n		ICooker qjdCooker = new QjdCooker();\r\n		IProgrammer jdProgrammer = new JdProgrammer();\r\n		System.out.println(qjdCooker.cook());\r\n		System.out.println(jdProgrammer.program());\r\n	}\r\n}\r\n```\r\n### 只定义一个适配器实现类\r\n![只定义一个适配器实现类](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/jJ0CI54lCg.png)\r\n适配器接口:\r\n```\r\npublic interface IWorkerAdapter {\r\n	String work(Object worker);\r\n}\r\n```\r\n适配器类：\r\n```\r\npublic class WorkerAdapter implements IWorkerAdapter {\r\n	@Override\r\n	public String work(Object worker) {\r\n		String workContent = \"\";\r\n		// 若传来的对象是厨师，则调用其 cook()方法\r\n		if(worker instanceof ICooker) {\r\n			workContent = ((ICooker)worker).cook();\r\n		} else if(worker instanceof IProgrammer) {\r\n			workContent = ((IProgrammer)worker).program();\r\n		}\r\n		return workContent;\r\n	}\r\n}\r\n```\r\n测试方法：\r\n```\r\npublic class MyTest {\r\n	public static void main(String[] args) {\r\n		ICooker qjdCooker = new QjdCooker();\r\n		IProgrammer jdProgrammer = new JdProgrammer();\r\n		Object[] workers = {qjdCooker, jdProgrammer};\r\n		\r\n		// 创建适配器对象\r\n		IWorkerAdapter adapter = new WorkerAdapter();\r\n		// 循环遍历每个工种对象，让每个工种对象在适配器中逐个进行匹配\r\n		for (Object worker : workers) {\r\n			String workContent = adapter.work(worker);\r\n			System.out.println(workContent);\r\n		}\r\n	}\r\n}\r\n```\r\n### 多适配器实现类(为每一个工种都定义一个适配器)\r\n![为每一个工种都定义一个适配器](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/62eegH64cb.png)\r\n通用的适配器接口:\r\n```\r\npublic interface IWorkerAdapter {\r\n	String work(Object worker);\r\n	boolean supports(Object worker);\r\n}\r\n```\r\n\r\n厨师适配器:\r\n```\r\npublic class CookerAdapter implements IWorkerAdapter {\r\n	@Override\r\n	public String work(Object worker) {\r\n		return ((ICooker)worker).cook();\r\n	}\r\n\r\n	@Override\r\n	public boolean supports(Object worker) {\r\n		return (worker instanceof ICooker);\r\n	}\r\n}\r\n```\r\n\r\n程序员适配器:\r\n```\r\npublic class ProgrammerAdapter implements IWorkerAdapter {\r\n	@Override\r\n	public String work(Object worker) {\r\n		return ((IProgrammer)worker).program();\r\n	}\r\n\r\n	@Override\r\n	public boolean supports(Object worker) {\r\n		return (worker instanceof IProgrammer);\r\n	}\r\n}\r\n```\r\n测试方法：\r\n```\r\npublic class MyTest {\r\n	public static void main(String[] args) {\r\n		ICooker qjdCooker = new QjdCooker();\r\n		IProgrammer jdProgrammer = new JdProgrammer();\r\n		Object[] workers = {qjdCooker, jdProgrammer};\r\n		\r\n		// 循环遍历每个工种对象，让每个工种对象在适配器中逐个进行匹配\r\n		for (Object worker : workers) {\r\n			IWorkerAdapter adapter = getAdapter(worker);\r\n			System.out.println(adapter.work(worker));\r\n		}\r\n	}\r\n\r\n	/**\r\n	 * 根据 worker 获取相应的适配器对象\r\n	 * @param worker 任何工人对象\r\n	 * @return\r\n	 */\r\n	private static IWorkerAdapter getAdapter(Object worker) {\r\n		List<IWorkerAdapter> adapters = getAllAdapters();\r\n		for (IWorkerAdapter adapter : adapters) {\r\n			if(adapter.supports(worker)) {\r\n				return adapter;\r\n			}\r\n		}\r\n		return null;\r\n	}\r\n\r\n	/**\r\n	 * 获取所有的适配器\r\n	 */\r\n	private static List<IWorkerAdapter> getAllAdapters() {\r\n		List<IWorkerAdapter> adapters = new ArrayList<>();\r\n		adapters.add(new CookerAdapter());\r\n		adapters.add(new ProgrammerAdapter());\r\n		return adapters;\r\n	}\r\n}\r\n```',`groups`='DesignPattern',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 239 [ RunTime:0.000790s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'DesignPattern' LIMIT 1 [ RunTime:0.001264s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'DesignPattern' [ RunTime:0.000464s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'DesignPattern' LIMIT 1 [ RunTime:0.001137s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'DesignPattern' [ RunTime:0.000372s ]
---------------------------------------------------------------
[ 2018-11-06T17:52:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/239.html
[ info ] qingrang.top/daily/admin/note/shownote/id/239.html [运行时间：0.056923s][吞吐率：17.57req/s] [内存消耗：1,985.13kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/239.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '239',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000504s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001426s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 239 LIMIT 1 [ RunTime:0.000468s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001137s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000363s ]
---------------------------------------------------------------
[ 2018-11-06T17:52:34+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/179
[ info ] qingrang.top/daily/admin/note/editnote/id/179 [运行时间：0.066678s][吞吐率：15.00req/s] [内存消耗：2,027.93kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '179',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000651s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001655s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 179 LIMIT 1 [ RunTime:0.000506s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001252s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000409s ]
---------------------------------------------------------------
[ 2018-11-06T17:52:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/113
[ info ] qingrang.top/daily/admin/note/editnote/id/113 [运行时间：0.056761s][吞吐率：17.62req/s] [内存消耗：2,054.80kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001449s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000529s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001064s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000354s ]
---------------------------------------------------------------
[ 2018-11-06T17:53:03+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/113.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/113.html [运行时间：0.068504s][吞吐率：14.60req/s] [内存消耗：2,132.68kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '27915',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/113',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Linux 常用命令
[TOC]
## 文件操作
>文件类型：

d	目录
\\-	文件
l	连接文件
b	设备文件里的可供存储的接口设备
c	设备文件里的串行端口设备(如鼠标，键盘)
>查看文件内容：

cat
　-n	//加行号
tac  //反向列示
nl 		//添加行号打印
>翻页查看：

more	//不能向前翻页
less
head  -n  20  demo.txt	//取出前面20行
tail  -n  20  demo.txt	//取出后面20行
od		//非纯文本
>创建文件夹： mkdir

>创建文件或修改文件时间： touch

>删除文件： rm		 

rm  -rf  test
>删除空的目录：rmdir

>移动文件：mv

mv  文件名  新文件名		//改文件名
>复制文件：cp

cp  源文件  目标文件
cp  -a  源文件  目标文件
>命令查看文件时3个时间点解析  * stat

>列出文件 ls

ls  -l
>取得路径的文件名与目录名称

basename  /etc/sysconfig/network		//文件名
==》network
dirname  /etc/sysconfig/network		//目录名
==》/etc/sysconfig 
>查找：

find  /  -name  filename
## 文件权限
>查看用户文件权限 

ls  -l  -d  xx
>文件默认权限：umask

>文件隐藏属性：

chattr	//设置
lsattr	//显示

>文件特殊权限：

SUID	4
SGID	2
SBIT	1
chmod  4755  filename

>chgrp	 改变文件所属用户组：

chgrp  组名  文件名
>chown  改变文件所有者：

chown  bin  test  //将 test 的拥有者改为 bin 这个账号
>chmod  改变文件的权限：

r = 4
w = 2
x = 1
u 所属用户 g 所属用户组 o 其他用户
chmod  u=rw,g-r,o+w  demo.txt
chmod  -R  777  demo.txt 
## 账号管理
>新增用户

useradd 用户名
>设置密码

passwd 用户名
>查询用户

who
>用户对谈

write  用户名 pts/x
mesg  n	//不接收消息
>建立用户组

groupadd 组名
>将用户加入到组

gpasswd –a 用户名  组名  
>从组中删除用户

gpasswd –d 用户名  组名  
>查看用户属于某组

groups  用户名
>删除用户组

groupdel  组名
## 压缩与解压缩
>.zip

解压：unzip  FileName.zip
压缩：zip -r FileName.zip  DirName
## Vim
:set  nu		//显示行号
:set  nonu		//取消显示行号
>移动光标：

G		//移动到文件最后一行
nG		//移动到文件的第n行
20j		//向下20行   
n-		//向上跳n行   
20gg		//跳到20行   
>复制，粘贴，删除：

yy		//复制光标所在行
nyy		//复制光标所在向下n行

p(P)	//粘贴到下(上)一行

dd		//删除光标所在行
Ndd		//删除光标所在行以下的N行
>查找替换：

/word		//向下查找word
?word		//向上查找word
n		//重复前一个查找动作
N		//反向重复前一个查找动作
>保存，离开：

:wq		//保存后离开
:q!		//不保存离开
## 正则表达式
grep
##yum
-y	//自动选择y，全自动
>查看可用的仓库：

yum  repolist
yum  repolist  enabled 
yum  repolist  all
yum  repolist  disabled
>安装软件：

yum  install  xxx
yum  localinstall 安装本地的RPM包
yum　reinstall  [RPM包] 重新安装包
>更新软件包：

yum  check-update	//检查可更新的rpm包
yum  update	//更新所有的rpm包
yum  update  kernel  kernel-source//更新指定的rpm包,如更新kernel和kernel source
>删除软件：

yum  remove  xxx
yum  erase  xxx
yum  -y  remove  httpd*  //卸载多个相类似的软件
yum  -y  remove  httpd php php-gd mysql //卸载多个非类似软件时
>查询软件信息：

yum  search  XXX	//会搜索所有可用rpm的描述
>软件包列表：

yum  list  all 	//列出所有可安装的软件包
yum  list  available 		//仓库中没有安装的  
yum  list  installed  	//已经安装的
yum  list  updates  	//可用的升级
yum  list  extras		//列出所有已安装但不在仓库內的软件包
>查找软件包中的文件：

yum  provides  /etc/inittab		//查看哪个软件包提供了指定的功能
>依赖关系：

yum  deplist  XXX	 //列出包的依赖
>清除YUM缓存：

yum会把下载的软件包和header存储在cache中，而不会自动删除。
yum  clean  headers	 //清除headers
yum  clean  packages 	//清除下载的rpm包
yum clean all   //一股脑儿端
>软件组：

yum  grouplist
yum  groupinstalll  "Development Tools"
## 网络配置
>网络服务：

service  network  start		//启动network服务
service  network  stop		//关闭network服务 
service  network  restart	//重启network服务
chkconfig  --level  234  服务名  on	/off		// 设置服务在运行级别为2、3、4、的情况下都是on（开启）的状态(在系统启动时生效，并不是立即生效的)
>网络设备命名：

lo 回环设备
eth0 系统内第一块以太网卡
ppp0 系统内第一个串行设备(多数出现在使用ADSL拨入Internet时)
>网络配置：

ifconfig		//暂时的网络配置
ifconfig   -a 		//查看所有网卡IP
ifconfig  eth0 	//查看特定网卡IP
ifup  eth0 		//打开网络
ifdown  eth0		//关闭网络
ifconfig  eth0  192.168.120.56  netmask  255.255.255.0  broadcast 192.168.120.255		//手动设置IP
>修改网卡配置文件:  /etc/sysconfig/network-scripts/ifcfg-ethX

BOOTPROTO=static 	#协议类型 dhcp bootp none
IPADDR=192.168.1.90 	#网络IP地址
NETMASK=255.255.255.0 	#网络子网地址
GATEWAY=192.168.1.1 	#网关地址
BROADCAST=192.168.1.255 	#广播地址
HWADDR=00:0C:29:FE:1A:09	#网卡MAC地址
>修改主机名：

临时修改
hostname  主机名
永久修改
编辑主机名配置文件文件（/etc/sysconfig/network）；
同时修改/etc/hosts文件（ip与域名的对应关系）
>DNS客户端配置:

编辑/etc/hosts
本地域名解析数据文件
在DNS被检索前先查询
编辑/etc/resolv.conf
添加dns服务器 nameserver xx.xx.xx.xx
如果指定多台nameserver，系统会按照次序检索服务器
## 进程管理
ps			//查看进程
　-l 仅查看自己bash相关进程
　a 显示与终端有关的所有进程（包括其他用户的进程）
　r 只显示正在运行的进程。显示运行中的进程;
　x 显示与终端无关的进程（服务程序）。
　u 有效用户（effective user）相关的进程；按用户名和启动时间的顺序来显示进程;
ps  -l  仅查看自己bash相关进程，输出项含义：
　F ：进程标识（Flag）。4表示进程的权限是root，1表示此子进程仅可进行fork而无法实际exec
　S：进程状态
　UID/PID/PPID：用户ID，进程ID，父进程ID
　C：CPU使用率
　PRI/NI：Priority/Nice 优先级。值越小则越快被CPU执行。
　ADDR：该进程在内存的哪部分，如果是running的进程，会是“-”。
　SZ：进程用掉的内存。
　WCHAN：目前进程是否运行，“-”表示正在运行中。
　TTY：登录者终端机位置。tty1-tty6是本地登录；若是远程登陆则使用动态终端接口（pts/n）。
　TIME:花费CPU运行的时间
ps aux 输出项含义：
　USER PID %CPU  %MEM  VSZ  RSS  TTY STAT START TIME COMMAND
　USER：进程所有者。
　PID：进程号。
　%CPU：占用的 CPU 使用率。
　%MEM：占用的内存使用率。
　VSZ：占用的虚拟内存大小。该进程用掉的虚拟内存（KB）
　RSS：占用的内存大小。该进程占用的固定的内存量（KB）
　TTY：终端的次设备号码。
　STAT：该进程的状态。
　START：进程开始时间。
　TIME：执行的时间。
　COMMAND：所执行的命令
ctrl + z		//将一个正在运行的前台进程丢入后台,并默认暂停
ctrl + d 	//终止一个正在前台运行的进程（还有正常含义）
ctrl + c 	//终止一个正在前台运行的进程（还有强制含义）
命令 & 	//在后台运行命令，在该控制台退出后，进程会挂断
nohup  command  & 		//将一个进程直接丢入后台运行，而且在该控制台退出后，进程仍不挂断
jobs 		//显示后台作业和被挂起的进程
　-l 列出job number之外，同时列出PID号码
　-r 仅仅列出正在后台运行(run)的工作
　-s 仅仅列出在后台当中暂停(stop)的工作
　显示说明
　+ 最近放到后台的工作号码
　- 倒数第二个被放到后台的工作号码
　[] 中的数字就是job number
bg   %  job编号		//让送往后台的作业继续在后台运行   
fg   %  job编号		//将后台作业调回前台	
kill  -信号  %  job编号		//终止指定的作业
　1 （SIGHUP） 在不重启进程的情况下，重读配置文件
　2 （SIGINT）中断进程，相当于CTRL+C
　9 （SIGKILL）立即强制杀死一个进程
　15 （SIGTERM）以正常方式终止进程。kill默认用此信号终止进程。
killall 进程名		//杀死同一进程组内的所有进程
top  //进程实时监控 

## 虚拟主机
>1.修改Apache配置文件

vi  /etc/httpd/conf/httpd.conf

NameVirtualHost *:80 //解开注释
```
<VirtualHost *:80>
 #ServerAdmin shaosijai@qq.com
 DocumentRoot /home/www.a.com/html
 ServerName www.a.com
 #ErrorLog /home/www.a.com/logs/error_log
 #CustomLog /home/www.a.com/logs/access_log common
</VirtualHost>
<VirtualHost *:80>
 #ServerAdmin shaosijai@qq.com
 DocumentRoot /home/www.b.com/html
 ServerName www.b.com
 #ErrorLog /home/www.b.com/logs/error_log
 #CustomLog /home/www.b.com/logs/access_log common
</VirtualHost>
```
>2.创建相应的目录

mkdir -p /home/www.a.com/html
mkdir -p /home/www.a.com/logs
mkdir -p /home/www.b.com/logs
mkdir -p /home/www.b.com/html
>3.编写测试页面

cd  /home/www.a.com/html/
echo "hello a" > index.html
cd  /home/www.b.com/html/
echo "hello b" > index.html
>4.修改hosts文件(域名解析)

vi  /etc/hosts
192.168.36.129 www.a.com
192.168.36.129 www.b.com
>5.关闭

setenforce  0
## 杂
>查看版本信息

cat /etc/issue

>执行等级：

/etc目录下通常有rc0.d-rc6.d目录，里面对应包含了从init0-init6不同运行级所要启动的命令，rc.d目录下有8个目录和3个文件，其中目录为rc0.d-rc6.d，分别代表了各个run-level的脚本，目录中文件名称均以S及K开头，后接两位数字与该服务名称，这些文件都是link文件，指向/etc/rc.d/init.d目录。在rc3.d目录中，以S开头的文件为执行该服务，以K开头的文件则是杀掉该服务的意思。数字代表启动顺序。
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/gj7F6J9F2m.png)
cat  /etc/inittab
等级0表示：表示关机
等级1表示：单用户模式
等级2表示：无网络连接的多用户命令行模式
等级3表示：有网络连接的多用户命令行模式
等级4表示：不可用
等级5表示：带图形界面的多用户模式
等级6表示：重新启动
init  1~5 		//切换执行等级
runlevel		//查看当前运行级别
>切换界面：

ctrl+alt+F1	--图形化界面
ctrl+alt+F3	--命令界面
>查看硬件设备：

lspci		//显示所有的pci设备信息
>设置语言：

LANG="zh_CN.UTF-8"
LANG="en_US"
>显示日期：

date
>显示日历：

cal
>计算器软件：

bc
>软连接和硬链接  *：

ln  f1  f2     #创建f1的一个硬连接文件f2
ln  -s  f1  f3   #创建f1的一个符号连接文件f3
>系统服务

chkconfig  	//更新（启动或停止）和查询系统服务的运行级信息
>查看是否安装软件

rpm  -qa|grep  http	//是否安装http相关的软件
>查看端口信息

netstat  -antp
>历史命令

history',
  'groups' => 'Linux',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '113',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000507s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001356s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000538s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000338s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001194s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000357s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=113,`p_id`=2,`title`='Linux 常用命令\r',`content`='# Linux 常用命令\r\n[TOC]\r\n## 文件操作\r\n>文件类型：\r\n\r\nd	目录\r\n\\-	文件\r\nl	连接文件\r\nb	设备文件里的可供存储的接口设备\r\nc	设备文件里的串行端口设备(如鼠标，键盘)\r\n>查看文件内容：\r\n\r\ncat\r\n　-n	//加行号\r\ntac  //反向列示\r\nnl 		//添加行号打印\r\n>翻页查看：\r\n\r\nmore	//不能向前翻页\r\nless\r\nhead  -n  20  demo.txt	//取出前面20行\r\ntail  -n  20  demo.txt	//取出后面20行\r\nod		//非纯文本\r\n>创建文件夹： mkdir\r\n\r\n>创建文件或修改文件时间： touch\r\n\r\n>删除文件： rm		 \r\n\r\nrm  -rf  test\r\n>删除空的目录：rmdir\r\n\r\n>移动文件：mv\r\n\r\nmv  文件名  新文件名		//改文件名\r\n>复制文件：cp\r\n\r\ncp  源文件  目标文件\r\ncp  -a  源文件  目标文件\r\n>命令查看文件时3个时间点解析  * stat\r\n\r\n>列出文件 ls\r\n\r\nls  -l\r\n>取得路径的文件名与目录名称\r\n\r\nbasename  /etc/sysconfig/network		//文件名\r\n==》network\r\ndirname  /etc/sysconfig/network		//目录名\r\n==》/etc/sysconfig \r\n>查找：\r\n\r\nfind  /  -name  filename\r\n## 文件权限\r\n>查看用户文件权限 \r\n\r\nls  -l  -d  xx\r\n>文件默认权限：umask\r\n\r\n>文件隐藏属性：\r\n\r\nchattr	//设置\r\nlsattr	//显示\r\n\r\n>文件特殊权限：\r\n\r\nSUID	4\r\nSGID	2\r\nSBIT	1\r\nchmod  4755  filename\r\n\r\n>chgrp	 改变文件所属用户组：\r\n\r\nchgrp  组名  文件名\r\n>chown  改变文件所有者：\r\n\r\nchown  bin  test  //将 test 的拥有者改为 bin 这个账号\r\n>chmod  改变文件的权限：\r\n\r\nr = 4\r\nw = 2\r\nx = 1\r\nu 所属用户 g 所属用户组 o 其他用户\r\nchmod  u=rw,g-r,o+w  demo.txt\r\nchmod  -R  777  demo.txt \r\n## 账号管理\r\n>新增用户\r\n\r\nuseradd 用户名\r\n>设置密码\r\n\r\npasswd 用户名\r\n>查询用户\r\n\r\nwho\r\n>用户对谈\r\n\r\nwrite  用户名 pts/x\r\nmesg  n	//不接收消息\r\n>建立用户组\r\n\r\ngroupadd 组名\r\n>将用户加入到组\r\n\r\ngpasswd –a 用户名  组名  \r\n>从组中删除用户\r\n\r\ngpasswd –d 用户名  组名  \r\n>查看用户属于某组\r\n\r\ngroups  用户名\r\n>删除用户组\r\n\r\ngroupdel  组名\r\n## 压缩与解压缩\r\n>.zip\r\n\r\n解压：unzip  FileName.zip\r\n压缩：zip -r FileName.zip  DirName\r\n## Vim\r\n:set  nu		//显示行号\r\n:set  nonu		//取消显示行号\r\n>移动光标：\r\n\r\nG		//移动到文件最后一行\r\nnG		//移动到文件的第n行\r\n20j		//向下20行   \r\nn-		//向上跳n行   \r\n20gg		//跳到20行   \r\n>复制，粘贴，删除：\r\n\r\nyy		//复制光标所在行\r\nnyy		//复制光标所在向下n行\r\n\r\np(P)	//粘贴到下(上)一行\r\n\r\ndd		//删除光标所在行\r\nNdd		//删除光标所在行以下的N行\r\n>查找替换：\r\n\r\n/word		//向下查找word\r\n?word		//向上查找word\r\nn		//重复前一个查找动作\r\nN		//反向重复前一个查找动作\r\n>保存，离开：\r\n\r\n:wq		//保存后离开\r\n:q!		//不保存离开\r\n## 正则表达式\r\ngrep\r\n##yum\r\n-y	//自动选择y，全自动\r\n>查看可用的仓库：\r\n\r\nyum  repolist\r\nyum  repolist  enabled \r\nyum  repolist  all\r\nyum  repolist  disabled\r\n>安装软件：\r\n\r\nyum  install  xxx\r\nyum  localinstall 安装本地的RPM包\r\nyum　reinstall  [RPM包] 重新安装包\r\n>更新软件包：\r\n\r\nyum  check-update	//检查可更新的rpm包\r\nyum  update	//更新所有的rpm包\r\nyum  update  kernel  kernel-source//更新指定的rpm包,如更新kernel和kernel source\r\n>删除软件：\r\n\r\nyum  remove  xxx\r\nyum  erase  xxx\r\nyum  -y  remove  httpd*  //卸载多个相类似的软件\r\nyum  -y  remove  httpd php php-gd mysql //卸载多个非类似软件时\r\n>查询软件信息：\r\n\r\nyum  search  XXX	//会搜索所有可用rpm的描述\r\n>软件包列表：\r\n\r\nyum  list  all 	//列出所有可安装的软件包\r\nyum  list  available 		//仓库中没有安装的  \r\nyum  list  installed  	//已经安装的\r\nyum  list  updates  	//可用的升级\r\nyum  list  extras		//列出所有已安装但不在仓库內的软件包\r\n>查找软件包中的文件：\r\n\r\nyum  provides  /etc/inittab		//查看哪个软件包提供了指定的功能\r\n>依赖关系：\r\n\r\nyum  deplist  XXX	 //列出包的依赖\r\n>清除YUM缓存：\r\n\r\nyum会把下载的软件包和header存储在cache中，而不会自动删除。\r\nyum  clean  headers	 //清除headers\r\nyum  clean  packages 	//清除下载的rpm包\r\nyum clean all   //一股脑儿端\r\n>软件组：\r\n\r\nyum  grouplist\r\nyum  groupinstalll  \"Development Tools\"\r\n## 网络配置\r\n>网络服务：\r\n\r\nservice  network  start		//启动network服务\r\nservice  network  stop		//关闭network服务 \r\nservice  network  restart	//重启network服务\r\nchkconfig  --level  234  服务名  on	/off		// 设置服务在运行级别为2、3、4、的情况下都是on（开启）的状态(在系统启动时生效，并不是立即生效的)\r\n>网络设备命名：\r\n\r\nlo 回环设备\r\neth0 系统内第一块以太网卡\r\nppp0 系统内第一个串行设备(多数出现在使用ADSL拨入Internet时)\r\n>网络配置：\r\n\r\nifconfig		//暂时的网络配置\r\nifconfig   -a 		//查看所有网卡IP\r\nifconfig  eth0 	//查看特定网卡IP\r\nifup  eth0 		//打开网络\r\nifdown  eth0		//关闭网络\r\nifconfig  eth0  192.168.120.56  netmask  255.255.255.0  broadcast 192.168.120.255		//手动设置IP\r\n>修改网卡配置文件:  /etc/sysconfig/network-scripts/ifcfg-ethX\r\n\r\nBOOTPROTO=static 	#协议类型 dhcp bootp none\r\nIPADDR=192.168.1.90 	#网络IP地址\r\nNETMASK=255.255.255.0 	#网络子网地址\r\nGATEWAY=192.168.1.1 	#网关地址\r\nBROADCAST=192.168.1.255 	#广播地址\r\nHWADDR=00:0C:29:FE:1A:09	#网卡MAC地址\r\n>修改主机名：\r\n\r\n临时修改\r\nhostname  主机名\r\n永久修改\r\n编辑主机名配置文件文件（/etc/sysconfig/network）；\r\n同时修改/etc/hosts文件（ip与域名的对应关系）\r\n>DNS客户端配置:\r\n\r\n编辑/etc/hosts\r\n本地域名解析数据文件\r\n在DNS被检索前先查询\r\n编辑/etc/resolv.conf\r\n添加dns服务器 nameserver xx.xx.xx.xx\r\n如果指定多台nameserver，系统会按照次序检索服务器\r\n## 进程管理\r\nps			//查看进程\r\n　-l 仅查看自己bash相关进程\r\n　a 显示与终端有关的所有进程（包括其他用户的进程）\r\n　r 只显示正在运行的进程。显示运行中的进程;\r\n　x 显示与终端无关的进程（服务程序）。\r\n　u 有效用户（effective user）相关的进程；按用户名和启动时间的顺序来显示进程;\r\nps  -l  仅查看自己bash相关进程，输出项含义：\r\n　F ：进程标识（Flag）。4表示进程的权限是root，1表示此子进程仅可进行fork而无法实际exec\r\n　S：进程状态\r\n　UID/PID/PPID：用户ID，进程ID，父进程ID\r\n　C：CPU使用率\r\n　PRI/NI：Priority/Nice 优先级。值越小则越快被CPU执行。\r\n　ADDR：该进程在内存的哪部分，如果是running的进程，会是“-”。\r\n　SZ：进程用掉的内存。\r\n　WCHAN：目前进程是否运行，“-”表示正在运行中。\r\n　TTY：登录者终端机位置。tty1-tty6是本地登录；若是远程登陆则使用动态终端接口（pts/n）。\r\n　TIME:花费CPU运行的时间\r\nps aux 输出项含义：\r\n　USER PID %CPU  %MEM  VSZ  RSS  TTY STAT START TIME COMMAND\r\n　USER：进程所有者。\r\n　PID：进程号。\r\n　%CPU：占用的 CPU 使用率。\r\n　%MEM：占用的内存使用率。\r\n　VSZ：占用的虚拟内存大小。该进程用掉的虚拟内存（KB）\r\n　RSS：占用的内存大小。该进程占用的固定的内存量（KB）\r\n　TTY：终端的次设备号码。\r\n　STAT：该进程的状态。\r\n　START：进程开始时间。\r\n　TIME：执行的时间。\r\n　COMMAND：所执行的命令\r\nctrl + z		//将一个正在运行的前台进程丢入后台,并默认暂停\r\nctrl + d 	//终止一个正在前台运行的进程（还有正常含义）\r\nctrl + c 	//终止一个正在前台运行的进程（还有强制含义）\r\n命令 & 	//在后台运行命令，在该控制台退出后，进程会挂断\r\nnohup  command  & 		//将一个进程直接丢入后台运行，而且在该控制台退出后，进程仍不挂断\r\njobs 		//显示后台作业和被挂起的进程\r\n　-l 列出job number之外，同时列出PID号码\r\n　-r 仅仅列出正在后台运行(run)的工作\r\n　-s 仅仅列出在后台当中暂停(stop)的工作\r\n　显示说明\r\n　+ 最近放到后台的工作号码\r\n　- 倒数第二个被放到后台的工作号码\r\n　[] 中的数字就是job number\r\nbg   %  job编号		//让送往后台的作业继续在后台运行   \r\nfg   %  job编号		//将后台作业调回前台	\r\nkill  -信号  %  job编号		//终止指定的作业\r\n　1 （SIGHUP） 在不重启进程的情况下，重读配置文件\r\n　2 （SIGINT）中断进程，相当于CTRL+C\r\n　9 （SIGKILL）立即强制杀死一个进程\r\n　15 （SIGTERM）以正常方式终止进程。kill默认用此信号终止进程。\r\nkillall 进程名		//杀死同一进程组内的所有进程\r\ntop  //进程实时监控 \r\n\r\n## 虚拟主机\r\n>1.修改Apache配置文件\r\n\r\nvi  /etc/httpd/conf/httpd.conf\r\n\r\nNameVirtualHost *:80 //解开注释\r\n```\r\n<VirtualHost *:80>\r\n #ServerAdmin shaosijai@qq.com\r\n DocumentRoot /home/www.a.com/html\r\n ServerName www.a.com\r\n #ErrorLog /home/www.a.com/logs/error_log\r\n #CustomLog /home/www.a.com/logs/access_log common\r\n</VirtualHost>\r\n<VirtualHost *:80>\r\n #ServerAdmin shaosijai@qq.com\r\n DocumentRoot /home/www.b.com/html\r\n ServerName www.b.com\r\n #ErrorLog /home/www.b.com/logs/error_log\r\n #CustomLog /home/www.b.com/logs/access_log common\r\n</VirtualHost>\r\n```\r\n>2.创建相应的目录\r\n\r\nmkdir -p /home/www.a.com/html\r\nmkdir -p /home/www.a.com/logs\r\nmkdir -p /home/www.b.com/logs\r\nmkdir -p /home/www.b.com/html\r\n>3.编写测试页面\r\n\r\ncd  /home/www.a.com/html/\r\necho \"hello a\" > index.html\r\ncd  /home/www.b.com/html/\r\necho \"hello b\" > index.html\r\n>4.修改hosts文件(域名解析)\r\n\r\nvi  /etc/hosts\r\n192.168.36.129 www.a.com\r\n192.168.36.129 www.b.com\r\n>5.关闭\r\n\r\nsetenforce  0\r\n## 杂\r\n>查看版本信息\r\n\r\ncat /etc/issue\r\n\r\n>执行等级：\r\n\r\n/etc目录下通常有rc0.d-rc6.d目录，里面对应包含了从init0-init6不同运行级所要启动的命令，rc.d目录下有8个目录和3个文件，其中目录为rc0.d-rc6.d，分别代表了各个run-level的脚本，目录中文件名称均以S及K开头，后接两位数字与该服务名称，这些文件都是link文件，指向/etc/rc.d/init.d目录。在rc3.d目录中，以S开头的文件为执行该服务，以K开头的文件则是杀掉该服务的意思。数字代表启动顺序。\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/gj7F6J9F2m.png)\r\ncat  /etc/inittab\r\n等级0表示：表示关机\r\n等级1表示：单用户模式\r\n等级2表示：无网络连接的多用户命令行模式\r\n等级3表示：有网络连接的多用户命令行模式\r\n等级4表示：不可用\r\n等级5表示：带图形界面的多用户模式\r\n等级6表示：重新启动\r\ninit  1~5 		//切换执行等级\r\nrunlevel		//查看当前运行级别\r\n>切换界面：\r\n\r\nctrl+alt+F1	--图形化界面\r\nctrl+alt+F3	--命令界面\r\n>查看硬件设备：\r\n\r\nlspci		//显示所有的pci设备信息\r\n>设置语言：\r\n\r\nLANG=\"zh_CN.UTF-8\"\r\nLANG=\"en_US\"\r\n>显示日期：\r\n\r\ndate\r\n>显示日历：\r\n\r\ncal\r\n>计算器软件：\r\n\r\nbc\r\n>软连接和硬链接  *：\r\n\r\nln  f1  f2     #创建f1的一个硬连接文件f2\r\nln  -s  f1  f3   #创建f1的一个符号连接文件f3\r\n>系统服务\r\n\r\nchkconfig  	//更新（启动或停止）和查询系统服务的运行级信息\r\n>查看是否安装软件\r\n\r\nrpm  -qa|grep  http	//是否安装http相关的软件\r\n>查看端口信息\r\n\r\nnetstat  -antp\r\n>历史命令\r\n\r\nhistory',`groups`='Linux',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 113 [ RunTime:0.000818s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.001021s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=11  WHERE  `groups` = 'Linux' [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000890s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=11  WHERE  `groups` = 'Linux' [ RunTime:0.000343s ]
---------------------------------------------------------------
[ 2018-11-06T17:53:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/113.html
[ info ] qingrang.top/daily/admin/note/shownote/id/113.html [运行时间：0.059692s][吞吐率：16.75req/s] [内存消耗：1,991.16kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/113',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000480s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001578s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000440s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001090s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000427s ]
---------------------------------------------------------------
[ 2018-11-06T17:53:10+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/178
[ info ] qingrang.top/daily/admin/note/editnote/id/178 [运行时间：0.071850s][吞吐率：13.92req/s] [内存消耗：2,030.77kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '178',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000596s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001740s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 178 LIMIT 1 [ RunTime:0.000541s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001250s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000391s ]
---------------------------------------------------------------
[ 2018-11-06T17:53:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/214
[ info ] qingrang.top/daily/admin/note/editnote/id/214 [运行时间：0.058555s][吞吐率：17.08req/s] [内存消耗：2,075.25kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000513s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001343s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000534s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000867s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000320s ]
---------------------------------------------------------------
[ 2018-11-06T17:54:06+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/214.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/214.html [运行时间：0.065887s][吞吐率：15.18req/s] [内存消耗：2,244.93kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '54347',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/214',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java SE - 文件和 IO流
[TOC]
## 1. 文件
### File
>使用绝对路径或者相对路径创建 File 对象

```
// 绝对路径
File f1 = new File("d:/LOLFolder");
System.out.println("f1的绝对路径：" + f1.getAbsolutePath());

// 相对路径,相对于工作目录，如果在 eclipse 中，就是项目目录
File f2 = new File("LOL.exe");
System.out.println("f2的绝对路径：" + f2.getAbsolutePath());

// 把f1作为父目录创建文件对象
File f3 = new File(f1, "LOL.exe");
System.out.println("f3的绝对路径：" + f3.getAbsolutePath());
```

>文件常用方法

```
File f = new File("d:/LOLFolder/LOL.exe");
System.out.println("当前文件是：" +f);

//文件是否存在
System.out.println("判断是否存在："+f.exists());

//是否是文件夹
System.out.println("判断是否是文件夹："+f.isDirectory());

//是否是文件（非文件夹）
System.out.println("判断是否是文件："+f.isFile());

//文件长度
System.out.println("获取文件的长度："+f.length());

//文件最后修改时间
long time = f.lastModified();
Date d = new Date(time);
System.out.println("获取文件的最后修改时间："+d);

//设置文件修改时间为1970.1.1 08:00:00
f.setLastModified(0);

//文件重命名
File f2 =new File("d:/LOLFolder/DOTA.exe");
f.renameTo(f2);
System.out.println("把LOL.exe改名成了DOTA.exe");

System.out.println("注意： 需要在D:\\\\LOLFolder确实存在一个LOL.exe,\\r\\n才可以看到对应的文件长度、修改时间等信息");

File f = new File("d:/LOLFolder/skin/garen.ski");

// 以字符串数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）
f.list();

// 以文件数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）
File[]fs= f.listFiles();

// 以字符串形式返回获取所在文件夹
f.getParent();

// 以文件形式返回获取所在文件夹
f.getParentFile();
// 创建文件夹，如果父文件夹skin不存在，创建就无效
f.mkdir();

// 创建文件夹，如果父文件夹skin不存在，就会创建父文件夹
f.mkdirs();

// 创建一个空文件,如果父文件夹skin不存在，就会抛出异常
f.createNewFile();
// 所以创建一个空文件之前，通常都会创建父目录
f.getParentFile().mkdirs();

// 列出所有的盘符c: d: e: 等等
f.listRoots();

// 刪除文件
f.delete();

// JVM结束的时候，刪除文件，常用于临时文件的删除
f.deleteOnExit();
```
>File 类

```
package io;

import java.io.File;
import java.io.IOException;

public class FileDemo {
    public static void main(String[] args) {
        // 以当前路径来创建一个File对象,"."代表当前路径
        File file = new File(".");
        // 直接获取文件名，输出"."
        System.out.println(file.getName());
        // 获取相对路径的父路径可能出错，下面代码输出 null
        System.out.println(file.getParent());
        // 获取绝对路径
        System.out.println(file.getAbsoluteFile());
        // 获取上一级路径
        System.out.println(file.getAbsoluteFile().getParent());

        // 以指定的文件名创建 File 对象
        File newFile = new File("D:\\\\qst.txt");
        System.out.println("newFile 对象是否存在：" + newFile.exists());
        try {
            // 以指定newFile对象来创建一个文件
            newFile.createNewFile();
            System.out.println(newFile.getName());
        } catch (IOException e) {
            e.printStackTrace();
        }

        // 以 newFile 对象来创建一个目录，因为 newFile 已经存在
        // 所以下面方法返回 false，即无法创建该目录
        System.out.println("创建目录：" + newFile.mkdir());

        // 使用list()方法来列出当前路径下的所有文件和路径
        System.out.println("====当前路径下所有文件和路径如下====");
        String[] fileList = file.list();
        for (String fileName : fileList) {
            System.out.println(fileName);
        }

        // listRoots()静态方法列出所有的磁盘根路径。
        System.out.println("====系统所有根路径如下====");
        File[] roots = File.listRoots();
        for (File root : roots) {
            System.out.println(root);
        }
    }
}
```
---
~~.
null
G:\\Java\\Study2\\JavaSE\\.
G:\\Java\\Study2\\JavaSE
newFile 对象是否存在：true
qst.txt
创建目录：false
====当前路径下所有文件和路径如下====
.idea
Demo.txt
Demo2.txt
JavaSE.iml
out
src
====系统所有根路径如下====
C:\\
D:\\
E:\\
F:\\
G:\\
H:\\
I:\\~~

---
### FilenameFilter 接口
文件过滤器接口，提供 accept 方法
```
package io;

import java.io.File;
import java.io.FilenameFilter;

public class Demo {
    public static void main(String[] args) {
        // 根据路径名称创建 File 对象
        File file = new File(".");
        // 得到文件名列表
        if (file.exists() && file.isDirectory()) {
            // 显示该目录下所有文件列表
            String[] allFileNames = file.list();

            for (String name : allFileNames) {
                System.out.println(name);
            }
            System.out.println("--------------------");

            // 创建FileNameFilter类型的匿名类，并作为参数传入到list()方法中
            String[] filterFileNames = file.list(new FilenameFilter() {
                public boolean accept(File dir, String name) {
                    // 对文件名进行过滤，文件名的后缀为.zip或.txt
                    return (name.endsWith(".zip") || name.endsWith(".txt"));
                }
            });
            System.out.println("过滤后的文件列表：");
            for (String name : filterFileNames) {
                System.out.println(name);
            }
        }
    }
}
```
---
~~.idea
Demo.txt
Demo2.txt
JavaSE.iml
out
src
\\--------------------
过滤后的文件列表：
Demo.txt
Demo2.txt~~

---
## 2. IO 流
Java 的 IO 流都是由以下 4 个抽象基类派生的。

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/11HKL57cGk.png)

计算机中的文件常被分为二进制文件和文本文件两大类。

字节流处理的最基本单位为单个字节
字符流处理的最基本的单元是 Unicode 码元

**如果进行输入输出的内容是文本，则使用字符流，若是二进制，则使用字节流。**

## 3. 字节流
### InputStream
>读取一个 .java 文件，并打印在控制台上

```
package io;

import java.io.FileInputStream;
import java.io.IOException;

public class FileInputStreamDemo {
    public static void main(String[] args) {
        // 声明文件字节输入流
        FileInputStream fis = null;
        try {
            // 实例化文件字节输入流
            fis = new FileInputStream("src\\\\io\\\\FileInputStreamDemo.java");
            // 创建一个长度为1024的字节数组作为缓冲区
            byte[] bbuf = new byte[1024];
            // 用于保存实际读取的字节数
            int hasRead = 0;
            // 使用循环重复读文件中的数据
            while ((hasRead = fis.read(bbuf)) > 0) {
                // 将缓冲区中的数据转换成字符串输出
                System.out.print(new String(bbuf, 0, hasRead));
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                // 关闭文件输入流
                fis.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
```
### OutputStream
>控制台输入内容，保存到文件

```
package io;

import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;

public class FileOutputStreamDemo {
    public static void main(String[] args) {
        // 建立一个从键盘接收数据的扫描器
        Scanner scanner = new Scanner(System.in);

        // 声明文件字节输出流
        FileOutputStream fos = null;
        try {
            // 实例化文件字节输出流
            fos = new FileOutputStream("D:\\\\mytest.txt");
            System.out.println("请输入内容：");
            String str = scanner.nextLine();
            // 将数据写入文件中
            fos.write(str.getBytes());
            System.out.println("已保存！");
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                // 关闭文件输出流
                fos.close();
                scanner.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }

}
```

## 4. 字符流
### Writer
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/kI45gfiJa6.png)

既然 IO 流是用于操作数据的，那么数据的最常见体现形式是：文件。

需求:在硬盘上，创建一个文件并写入一些文字数据。

```
package io;

import java.io.FileWriter;
import java.io.IOException;

/**
 * 字符流
 *  在硬盘上，创建一个文件并写入一些文字数据
 * Created by CaptainQR on 2018/10/7.
 */
public class FileWriterDemo {
    public static void main(String[] args) throws IOException{
        /*
        * 1. 创建一个 FileWriter 对象，该对象一被初始化就必须要明确被操作的文件
        *   而且该文件会被创建到指定目录下，如果该目录下有同名文件，将被覆盖。
        *   其实该步就是在明确数据要存放的目的地。
        * */
        FileWriter fw = new FileWriter("Demo.txt");

        //2. 调用 write 方法，将字符串写入到流中
        fw.write("abc");

        //3. 刷新流对象中的缓冲数据，将数据刷到目的地中
        fw.flush();
        fw.write("--def");

        //4. 关闭流资源，但是关闭之前会刷新一次内部的缓冲中的数据，将数据刷到目的地中
        //   和 flush 的区别：flush 刷新后，流可以继续使用，close 刷新后，会将流关闭
        fw.close();
    }
}
```

#### 续写
>构造函数

![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/9I9JbDBkE7.png)

```
//传递一个 true 参数，代表不覆盖已有的文件，在末尾追加
FileWriter fw2 = new FileWriter("Demo.txt",true);
```
### Reader
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/e3a8ecdEH0.png)
#### 1. 读取单个字符
```
package io;

import java.io.FileReader;
import java.io.IOException;

public class Demo {
    public static void main(String[] args){
        FileReader fr = null;
        try {
            // 创建一个文件读取对象，和指定名称的文件相关联
            fr = new FileReader("Demo.txt");
            int ch = 0;
            /*
            * 调用读取流对象的 read 方法
            *   read()：一次读一个字符，而且会自动往下读
            * */
            while ((ch = fr.read()) != -1){
                System.out.println((char)ch);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            if(fr != null){
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
```
#### 2. 读取字符数组
>读取一个 .java 文件，并打印在控制台上

```
package io;

import java.io.FileReader;
import java.io.IOException;

public class Demo {
    public static void main(String[] args){
        FileReader fr = null;
        try {
            fr = new FileReader("G:\\\\Java\\\\Study2\\\\JavaSE\\\\src\\\\io\\\\FileWriterDemo.java");
            // 存储读到的字符，一般定义大小为 1024 即为 1k
            char[] buf = new char[1024];
            int num = 0;
            // read(char[]) 返回的是读到的字符个数
            while ((num = fr.read(buf)) != -1){
                // String 类，String(char value[], int offset, int count)
                // 分配一个新的 String，它包含取 自字符数组一个子数组(num)的字符
                System.out.println(new String(buf,0,num));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            if(fr != null){
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
```
#### 3. 将C盘一个文本文件复制到D盘
复制的原理：
其实就是将C盘下的文件数据存储到D盘的一个文件中。

步骤：
1，在 D 盘创建一个文件。用于存储 C 盘文件中的数据。
2，定义读取流和 C 盘文件关联。
3，通过不断的读写完成数据存储。
4，关闭资源。

```
package io;

import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class Demo {
    public static void main(String[] args){
        FileWriter fw = null;
        FileReader fr = null;
        try {
            fr = new FileReader("Demo.txt");
            // 写入 H 盘
            fw = new FileWriter("H:\\\\DemoCopy.txt");

            char[] buf = new char[1024];
            int len = 0;
            while ((len = fr.read(buf)) != -1){
                fw.write(buf,0,len);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }finally {
            // 需要对每一个流进行处理
            if(fr != null){
                try {
                    fr.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            if(fw != null){
                try {
                    fw.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
```
#### 控制台输入，文件输出
```
package io;

import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class WriterDemo {
    public static void main(String[] args) {
        // 建立一个从键盘接收数据的扫描器
        Scanner scanner = new Scanner(System.in);

        try (
                FileWriter fw = new FileWriter("H:\\\\WriterDemo.txt");
                ) {
            System.out.println("请输入内容：");
            String str = scanner.nextLine();
            // 将数据写入文件中
            fw.write(str);
            System.out.println("已保存！");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
```
## 5. Buffered 缓冲区
缓冲区的出现是为了提高流的操作效率，所以在创建缓冲区之前，必须要先有流对象
### BufferedWriter
```
package io;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class BufferedWriterDemo {
    public static void main(String[] args) throws IOException{
        //创建一个字符写入流对象
        FileWriter fw = new FileWriter("buf.txt");

        //为了提高字符写入流效率，加入了缓冲技术
        //只要将需要被提高效率的流对象作为参数传递给缓冲区的构造函数即可
        BufferedWriter bufw = new BufferedWriter(fw);

        for (int x=1;x<5;x++){
            bufw.write("abc" + x);
            bufw.newLine(); //换行
            bufw.flush();   //刷新
        }
        bufw.close();   //其实关闭缓冲流就是渣关闭缓冲区中的流对象
    }
}
```
### BufferedReader
```
package io;

import java.io.*;

public class BufferedReaderDemo {
    public static void main(String[] args) throws IOException{
        //创建一个读取流对象和文件相关联
        FileReader fr = new FileReader("buf.txt");

        //为了提高效率，加入了缓冲技术，将字符读取对象作为参数传递给缓冲对象的构造函数
        BufferedReader bufr = new BufferedReader(fr);

        //readLine 一次读一行
        String line = null;
        while ((line = bufr.readLine()) != null){
            System.out.println(line);
        }
        bufr.close();
    }
}
```
>通过缓冲区复制文件

```
package io;

import java.io.*;

public class BufferCopy {
    public static void main(String[] args){
        try (
                BufferedReader bufr = new BufferedReader(new FileReader("Demo.txt"));
                BufferedWriter bufw = new BufferedWriter(new FileWriter("H:\\\\BufferCopy.txt"));
                ){
            String line = null;
            while ((line = bufr.readLine()) != null){
                bufw.write(line);
                bufw.newLine();
                bufw.flush();
            }
        }catch (IOException e){
            System.out.println("Error");
        }
    }
}
```
## 6. 过滤流和转换流
### 过滤流
过滤流对一个已有的流进行连接和封装，以更加便利的方式对数据进行读写操作，过滤流又分为过滤输入流和过滤输出流。
```
package io;

import java.io.BufferedInputStream;
import java.io.FileInputStream;

public class BufferedInputStreamDemo {

    public static void main(String[] args) {
        try (
                // 利用FileInputStream对象创建一个输入缓冲流
                BufferedInputStream bi = new BufferedInputStream(new FileInputStream("Demo.txt"));
                )
        {
            int result = 0;
            //循环读数据
            while ((result = bi.read()) != -1) {
                //输出
                System.out.print((char) result);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
```
### 转换流
Java 的 IO流 体系中提供了两个转换流：
- InputStreamReader：将字节输入流转换为字符输入流
- OutputStreamWriter：将字符输出流转换为字节输出流

```
package io;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class InputStreamReaderDemo {
    public static void main(String[] args) {
        try (
                // 将 Sytem.in 标准输入流 InputStream 字节流转换成 Reader 字符流
                InputStreamReader reader = new InputStreamReader(System.in);
                // 将普通 Reader 包装成 BufferedReader，BufferedReader 具有缓冲功能
                BufferedReader br = new BufferedReader(reader)) {
            String line = null;
            // 采用循环方式来一行一行的读取
            while ((line = br.readLine()) != null) {
                // 如果读取的字符串为"exit"，程序退出
                if (line.equals("exit")) {
                    System.exit(1);
                }
                // 打印读取的内容
                System.out.println("输入内容为:" + line);
            }
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }
}
```
## 7. 对象流
在 Java 中，使用对象流可实现对象的序列化和反序列化。

对象的序列化是指将对象数据写到一个输出流中的过程；而对象的反序列化是指从一个输入流中读取一个对象。

在 Java 中，如果需要将某个对象保存到磁盘或通过网络传输，则该对象必须是可以序列化的。

若一个类的对象是可序列化的，则该类必须实现 java.lang 包下的 Serializable 接口或 Externalizable 接口。

```
//定义一个可以序列化的 Person 实体类
public class Person implements Serializable {
	...
}
```

>序列化

```
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public class ObjectOutputStreamDemo {

	public static void main(String[] args) {

		// 创建一个ObjectOutputStream对象输出流
		try (ObjectOutputStream obs = new ObjectOutputStream(new FileOutputStream("d:\\\\PersonObject.txt"))) {
			// 创建一个Person类型的对象
			Person person = new Person("张三", 25, "青岛");
			// 把对象写入到文件中
			obs.writeObject(person);
			obs.flush();
			System.out.println("序列化完毕！");
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}
```
>反序列化

```
import java.io.FileInputStream;
import java.io.ObjectInputStream;

public class ObjectInputStreamDemo {
	public static void main(String[] args) {
		// 创建一个ObjectInputStream对象输入流
		try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("d:\\\\PersonObject.txt"))) {
			// 从ObjectInputStream对象输入流中读取一个对象，并强制转换成Person对象
			Person person =(Person)ois.readObject();
			System.out.println("序列化完毕！读出的对象信息如下：");
			System.out.println(person);
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}
```
## 8. NIO
NIO 将文件或文件的一段区域映射到内存中，这样可以像访问内存一样来访问文件。

Buffer 和 Channel 是 NIO 中两个核心对象：
- Buffer 可以理解成一个容器，其本质是一个数组。
- Channel 是对传统 IO 系统的模拟，在 NIO 系统中所有数据都需要经过通道传输；Channel 与传统的 InputStream、OutputStream最大的区别是提供一个 map() 方法，通过该方法可以直接将一块数据映射到内存中。

### Buffer

```
import java.nio.CharBuffer;

public class NIOBufferDemo {
	public static void main(String[] args) {
		// 实例化一个容量为 8 的 CharBuffer
		CharBuffer buff = CharBuffer.allocate(8);
		System.out.println("capacity: "	+ buff.capacity());
		System.out.println("limit: " + buff.limit());
		System.out.println("position: " + buff.position());
		
		// 使用 put 方法，放入元素
		buff.put(\'a\');
		buff.put(\'b\');
		buff.put(\'c\');     
		System.out.println("加入三个元素后，position = " + buff.position());
		
		// 调用 flip() 方法，反转缓冲区
		buff.flip();	  // ③
		System.out.println("执行flip()后，limit = " + buff.limit());
		System.out.println("position = " + buff.position());
		
		// get 方法，取出第一个元素
		System.out.println("第一个元素(position=0)：" + buff.get()); 
		System.out.println("取出一个元素后，position = " + buff.position());
		
		// 调用 clear 方法，清除缓冲区
		buff.clear(); 
		System.out.println("执行clear()后，limit = " + buff.limit());
		System.out.println("执行clear()后，position = " + buff.position());
		System.out.println("执行clear()后，缓冲区内容并没有被清除：" + "第三个元素为：" +  buff.get(2));
		System.out.println("执行绝对读取后，position = " + buff.position());

	}

}
```
### Channel
Channel 与传统的 IO流 类似，但主要有两点区别：
- Channel 类可以直接将指定文件的部分或全部直接映射成 Buffer
- 程序不能直接访问 Channel 中的数据，Channel 只能与 Buffer 进行交互
>将 FileChannel 的所有数据映射成 ByteBuffer

```
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.CharBuffer;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;

public class NIOFileChannelDemo {
    public static void main(String[] args) {
        File f = new File("src\\\\com\\\\qst\\\\chapter01\\\\NIOFileChannelDemo.java");
        try (
                // 创建FileInputStream，以该文件输入流创建FileChannel
                FileChannel inChannel = new FileInputStream(f).getChannel();
                // 以文件输出流创建FileBuffer，用以控制输出
                FileChannel outChannel = new FileOutputStream("D:\\\\channel.txt")
                        .getChannel()) {
            // 将FileChannel里的全部数据映射成ByteBuffer
            MappedByteBuffer buffer = inChannel.map(
                    FileChannel.MapMode.READ_ONLY, 0, f.length()); // ①
            // 使用GBK的字符集来创建解码器
            Charset charset = Charset.forName("GBK");
            // 直接将buffer里的数据全部输出
            outChannel.write(buffer); // ②
            // 再次调用buffer的clear()方法，复原limit、position的位置
            buffer.clear();
            // 创建解码器(CharsetDecoder)对象
            CharsetDecoder decoder = charset.newDecoder();
            // 使用解码器将ByteBuffer转换成CharBuffer
            CharBuffer charBuffer = decoder.decode(buffer);
            // CharBuffer的toString方法可以获取对应的字符串
            System.out.println(charBuffer);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
```

## 9. NOI.2
>java.nio.file.Path 下的 Path类

```
import java.nio.file.Path;
import java.nio.file.Paths;

public class NIO2PathDemo {
	public static void main(String[] args) {
		// 以当前路径来创建Path对象
		Path path = Paths.get(".");
		System.out.println("path里包含的路径数量：" + path.getNameCount());
		System.out.println("path的根路径：" + path.getRoot());
		
		// 获取path对应的绝对路径。
		Path absolutePath = path.toAbsolutePath();
		System.out.println(absolutePath);
		
		// 获取绝对路径的根路径
		System.out.println("absolutePath的根路径：" + absolutePath.getRoot());
		
		// 获取绝对路径所包含的路径数量
		System.out.println("absolutePath里包含的路径数量：" + absolutePath.getNameCount());
		System.out.println(absolutePath.getName(3));
		
		// 以多个String来构建Path对象
		Path path2 = Paths.get("g:", "publish", "codes");
		System.out.println(path2);
	}
}
```

>Files类

```
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.FileStore;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class NIO2FilesDemo {
	public static void main(String[] args) {
		try {
			// 复制文件
			Files.copy(
					Paths.get("src\\\\com\\\\qst\\\\chapter01\\\\NIO2FilesDemo.java"),
					new FileOutputStream("a.txt"));
			// 判断NIO2FilesDemo.java文件是否为隐藏文件
			System.out.println("NIO2FilesDemo.java是否为隐藏文件："
					+ Files.isHidden(Paths
							.get("src/com/qst/chapter09/NIO2FilesDemo.java")));
			// 一次性读取FilesTest.java文件的所有行
			List<String> lines = Files.readAllLines(Paths.get("src", "com",
					"qst", "chapter09", "NIO2FilesDemo.java"), Charset
					.forName("gbk"));
			System.out.println("行数：" + lines.size());
			// 判断指定文件的大小
			System.out.println("a.txt文件的大小为：" + Files.size(Paths.get("a.txt")));
			List<String> poem = new ArrayList<>();
			poem.add("使用NIO.2技术");
			poem.add("往文件中写内容");
			// 直接将多个字符串内容写入指定文件中
			Files.write(Paths.get("pome.txt"), poem, Charset.forName("gbk"));
			FileStore cStore = Files.getFileStore(Paths.get("C:"));
			// 判断C盘的总空间，可用空间
			System.out.println("C:共有空间：" + cStore.getTotalSpace());
			System.out.println("C:可用空间：" + cStore.getUsableSpace());
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000510s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001319s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000458s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000300s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000902s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000292s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=214,`p_id`=2,`title`='Java SE - 文件和 IO流\r',`content`='# Java SE - 文件和 IO流\r\n[TOC]\r\n## 1. 文件\r\n### File\r\n>使用绝对路径或者相对路径创建 File 对象\r\n\r\n```\r\n// 绝对路径\r\nFile f1 = new File(\"d:/LOLFolder\");\r\nSystem.out.println(\"f1的绝对路径：\" + f1.getAbsolutePath());\r\n\r\n// 相对路径,相对于工作目录，如果在 eclipse 中，就是项目目录\r\nFile f2 = new File(\"LOL.exe\");\r\nSystem.out.println(\"f2的绝对路径：\" + f2.getAbsolutePath());\r\n\r\n// 把f1作为父目录创建文件对象\r\nFile f3 = new File(f1, \"LOL.exe\");\r\nSystem.out.println(\"f3的绝对路径：\" + f3.getAbsolutePath());\r\n```\r\n\r\n>文件常用方法\r\n\r\n```\r\nFile f = new File(\"d:/LOLFolder/LOL.exe\");\r\nSystem.out.println(\"当前文件是：\" +f);\r\n\r\n//文件是否存在\r\nSystem.out.println(\"判断是否存在：\"+f.exists());\r\n\r\n//是否是文件夹\r\nSystem.out.println(\"判断是否是文件夹：\"+f.isDirectory());\r\n\r\n//是否是文件（非文件夹）\r\nSystem.out.println(\"判断是否是文件：\"+f.isFile());\r\n\r\n//文件长度\r\nSystem.out.println(\"获取文件的长度：\"+f.length());\r\n\r\n//文件最后修改时间\r\nlong time = f.lastModified();\r\nDate d = new Date(time);\r\nSystem.out.println(\"获取文件的最后修改时间：\"+d);\r\n\r\n//设置文件修改时间为1970.1.1 08:00:00\r\nf.setLastModified(0);\r\n\r\n//文件重命名\r\nFile f2 =new File(\"d:/LOLFolder/DOTA.exe\");\r\nf.renameTo(f2);\r\nSystem.out.println(\"把LOL.exe改名成了DOTA.exe\");\r\n\r\nSystem.out.println(\"注意： 需要在D:\\\\LOLFolder确实存在一个LOL.exe,\\r\\n才可以看到对应的文件长度、修改时间等信息\");\r\n\r\nFile f = new File(\"d:/LOLFolder/skin/garen.ski\");\r\n\r\n// 以字符串数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）\r\nf.list();\r\n\r\n// 以文件数组的形式，返回当前文件夹下的所有文件（不包含子文件及子文件夹）\r\nFile[]fs= f.listFiles();\r\n\r\n// 以字符串形式返回获取所在文件夹\r\nf.getParent();\r\n\r\n// 以文件形式返回获取所在文件夹\r\nf.getParentFile();\r\n// 创建文件夹，如果父文件夹skin不存在，创建就无效\r\nf.mkdir();\r\n\r\n// 创建文件夹，如果父文件夹skin不存在，就会创建父文件夹\r\nf.mkdirs();\r\n\r\n// 创建一个空文件,如果父文件夹skin不存在，就会抛出异常\r\nf.createNewFile();\r\n// 所以创建一个空文件之前，通常都会创建父目录\r\nf.getParentFile().mkdirs();\r\n\r\n// 列出所有的盘符c: d: e: 等等\r\nf.listRoots();\r\n\r\n// 刪除文件\r\nf.delete();\r\n\r\n// JVM结束的时候，刪除文件，常用于临时文件的删除\r\nf.deleteOnExit();\r\n```\r\n>File 类\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class FileDemo {\r\n    public static void main(String[] args) {\r\n        // 以当前路径来创建一个File对象,\".\"代表当前路径\r\n        File file = new File(\".\");\r\n        // 直接获取文件名，输出\".\"\r\n        System.out.println(file.getName());\r\n        // 获取相对路径的父路径可能出错，下面代码输出 null\r\n        System.out.println(file.getParent());\r\n        // 获取绝对路径\r\n        System.out.println(file.getAbsoluteFile());\r\n        // 获取上一级路径\r\n        System.out.println(file.getAbsoluteFile().getParent());\r\n\r\n        // 以指定的文件名创建 File 对象\r\n        File newFile = new File(\"D:\\\\qst.txt\");\r\n        System.out.println(\"newFile 对象是否存在：\" + newFile.exists());\r\n        try {\r\n            // 以指定newFile对象来创建一个文件\r\n            newFile.createNewFile();\r\n            System.out.println(newFile.getName());\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        // 以 newFile 对象来创建一个目录，因为 newFile 已经存在\r\n        // 所以下面方法返回 false，即无法创建该目录\r\n        System.out.println(\"创建目录：\" + newFile.mkdir());\r\n\r\n        // 使用list()方法来列出当前路径下的所有文件和路径\r\n        System.out.println(\"====当前路径下所有文件和路径如下====\");\r\n        String[] fileList = file.list();\r\n        for (String fileName : fileList) {\r\n            System.out.println(fileName);\r\n        }\r\n\r\n        // listRoots()静态方法列出所有的磁盘根路径。\r\n        System.out.println(\"====系统所有根路径如下====\");\r\n        File[] roots = File.listRoots();\r\n        for (File root : roots) {\r\n            System.out.println(root);\r\n        }\r\n    }\r\n}\r\n```\r\n---\r\n~~.\r\nnull\r\nG:\\Java\\Study2\\JavaSE\\.\r\nG:\\Java\\Study2\\JavaSE\r\nnewFile 对象是否存在：true\r\nqst.txt\r\n创建目录：false\r\n====当前路径下所有文件和路径如下====\r\n.idea\r\nDemo.txt\r\nDemo2.txt\r\nJavaSE.iml\r\nout\r\nsrc\r\n====系统所有根路径如下====\r\nC:\\\r\nD:\\\r\nE:\\\r\nF:\\\r\nG:\\\r\nH:\\\r\nI:\\~~\r\n\r\n---\r\n### FilenameFilter 接口\r\n文件过滤器接口，提供 accept 方法\r\n```\r\npackage io;\r\n\r\nimport java.io.File;\r\nimport java.io.FilenameFilter;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args) {\r\n        // 根据路径名称创建 File 对象\r\n        File file = new File(\".\");\r\n        // 得到文件名列表\r\n        if (file.exists() && file.isDirectory()) {\r\n            // 显示该目录下所有文件列表\r\n            String[] allFileNames = file.list();\r\n\r\n            for (String name : allFileNames) {\r\n                System.out.println(name);\r\n            }\r\n            System.out.println(\"--------------------\");\r\n\r\n            // 创建FileNameFilter类型的匿名类，并作为参数传入到list()方法中\r\n            String[] filterFileNames = file.list(new FilenameFilter() {\r\n                public boolean accept(File dir, String name) {\r\n                    // 对文件名进行过滤，文件名的后缀为.zip或.txt\r\n                    return (name.endsWith(\".zip\") || name.endsWith(\".txt\"));\r\n                }\r\n            });\r\n            System.out.println(\"过滤后的文件列表：\");\r\n            for (String name : filterFileNames) {\r\n                System.out.println(name);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n---\r\n~~.idea\r\nDemo.txt\r\nDemo2.txt\r\nJavaSE.iml\r\nout\r\nsrc\r\n\\--------------------\r\n过滤后的文件列表：\r\nDemo.txt\r\nDemo2.txt~~\r\n\r\n---\r\n## 2. IO 流\r\nJava 的 IO 流都是由以下 4 个抽象基类派生的。\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/11HKL57cGk.png)\r\n\r\n计算机中的文件常被分为二进制文件和文本文件两大类。\r\n\r\n字节流处理的最基本单位为单个字节\r\n字符流处理的最基本的单元是 Unicode 码元\r\n\r\n**如果进行输入输出的内容是文本，则使用字符流，若是二进制，则使用字节流。**\r\n\r\n## 3. 字节流\r\n### InputStream\r\n>读取一个 .java 文件，并打印在控制台上\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\n\r\npublic class FileInputStreamDemo {\r\n    public static void main(String[] args) {\r\n        // 声明文件字节输入流\r\n        FileInputStream fis = null;\r\n        try {\r\n            // 实例化文件字节输入流\r\n            fis = new FileInputStream(\"src\\\\io\\\\FileInputStreamDemo.java\");\r\n            // 创建一个长度为1024的字节数组作为缓冲区\r\n            byte[] bbuf = new byte[1024];\r\n            // 用于保存实际读取的字节数\r\n            int hasRead = 0;\r\n            // 使用循环重复读文件中的数据\r\n            while ((hasRead = fis.read(bbuf)) > 0) {\r\n                // 将缓冲区中的数据转换成字符串输出\r\n                System.out.print(new String(bbuf, 0, hasRead));\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                // 关闭文件输入流\r\n                fis.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n### OutputStream\r\n>控制台输入内容，保存到文件\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class FileOutputStreamDemo {\r\n    public static void main(String[] args) {\r\n        // 建立一个从键盘接收数据的扫描器\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        // 声明文件字节输出流\r\n        FileOutputStream fos = null;\r\n        try {\r\n            // 实例化文件字节输出流\r\n            fos = new FileOutputStream(\"D:\\\\mytest.txt\");\r\n            System.out.println(\"请输入内容：\");\r\n            String str = scanner.nextLine();\r\n            // 将数据写入文件中\r\n            fos.write(str.getBytes());\r\n            System.out.println(\"已保存！\");\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                // 关闭文件输出流\r\n                fos.close();\r\n                scanner.close();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n```\r\n\r\n## 4. 字符流\r\n### Writer\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/kI45gfiJa6.png)\r\n\r\n既然 IO 流是用于操作数据的，那么数据的最常见体现形式是：文件。\r\n\r\n需求:在硬盘上，创建一个文件并写入一些文字数据。\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\n/**\r\n * 字符流\r\n *  在硬盘上，创建一个文件并写入一些文字数据\r\n * Created by CaptainQR on 2018/10/7.\r\n */\r\npublic class FileWriterDemo {\r\n    public static void main(String[] args) throws IOException{\r\n        /*\r\n        * 1. 创建一个 FileWriter 对象，该对象一被初始化就必须要明确被操作的文件\r\n        *   而且该文件会被创建到指定目录下，如果该目录下有同名文件，将被覆盖。\r\n        *   其实该步就是在明确数据要存放的目的地。\r\n        * */\r\n        FileWriter fw = new FileWriter(\"Demo.txt\");\r\n\r\n        //2. 调用 write 方法，将字符串写入到流中\r\n        fw.write(\"abc\");\r\n\r\n        //3. 刷新流对象中的缓冲数据，将数据刷到目的地中\r\n        fw.flush();\r\n        fw.write(\"--def\");\r\n\r\n        //4. 关闭流资源，但是关闭之前会刷新一次内部的缓冲中的数据，将数据刷到目的地中\r\n        //   和 flush 的区别：flush 刷新后，流可以继续使用，close 刷新后，会将流关闭\r\n        fw.close();\r\n    }\r\n}\r\n```\r\n\r\n#### 续写\r\n>构造函数\r\n\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/9I9JbDBkE7.png)\r\n\r\n```\r\n//传递一个 true 参数，代表不覆盖已有的文件，在末尾追加\r\nFileWriter fw2 = new FileWriter(\"Demo.txt\",true);\r\n```\r\n### Reader\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/e3a8ecdEH0.png)\r\n#### 1. 读取单个字符\r\n```\r\npackage io;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args){\r\n        FileReader fr = null;\r\n        try {\r\n            // 创建一个文件读取对象，和指定名称的文件相关联\r\n            fr = new FileReader(\"Demo.txt\");\r\n            int ch = 0;\r\n            /*\r\n            * 调用读取流对象的 read 方法\r\n            *   read()：一次读一个字符，而且会自动往下读\r\n            * */\r\n            while ((ch = fr.read()) != -1){\r\n                System.out.println((char)ch);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            if(fr != null){\r\n                try {\r\n                    fr.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n#### 2. 读取字符数组\r\n>读取一个 .java 文件，并打印在控制台上\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args){\r\n        FileReader fr = null;\r\n        try {\r\n            fr = new FileReader(\"G:\\\\Java\\\\Study2\\\\JavaSE\\\\src\\\\io\\\\FileWriterDemo.java\");\r\n            // 存储读到的字符，一般定义大小为 1024 即为 1k\r\n            char[] buf = new char[1024];\r\n            int num = 0;\r\n            // read(char[]) 返回的是读到的字符个数\r\n            while ((num = fr.read(buf)) != -1){\r\n                // String 类，String(char value[], int offset, int count)\r\n                // 分配一个新的 String，它包含取 自字符数组一个子数组(num)的字符\r\n                System.out.println(new String(buf,0,num));\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            if(fr != null){\r\n                try {\r\n                    fr.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n#### 3. 将C盘一个文本文件复制到D盘\r\n复制的原理：\r\n其实就是将C盘下的文件数据存储到D盘的一个文件中。\r\n\r\n步骤：\r\n1，在 D 盘创建一个文件。用于存储 C 盘文件中的数据。\r\n2，定义读取流和 C 盘文件关联。\r\n3，通过不断的读写完成数据存储。\r\n4，关闭资源。\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args){\r\n        FileWriter fw = null;\r\n        FileReader fr = null;\r\n        try {\r\n            fr = new FileReader(\"Demo.txt\");\r\n            // 写入 H 盘\r\n            fw = new FileWriter(\"H:\\\\DemoCopy.txt\");\r\n\r\n            char[] buf = new char[1024];\r\n            int len = 0;\r\n            while ((len = fr.read(buf)) != -1){\r\n                fw.write(buf,0,len);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }finally {\r\n            // 需要对每一个流进行处理\r\n            if(fr != null){\r\n                try {\r\n                    fr.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            if(fw != null){\r\n                try {\r\n                    fw.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n#### 控制台输入，文件输出\r\n```\r\npackage io;\r\n\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.Scanner;\r\n\r\npublic class WriterDemo {\r\n    public static void main(String[] args) {\r\n        // 建立一个从键盘接收数据的扫描器\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        try (\r\n                FileWriter fw = new FileWriter(\"H:\\\\WriterDemo.txt\");\r\n                ) {\r\n            System.out.println(\"请输入内容：\");\r\n            String str = scanner.nextLine();\r\n            // 将数据写入文件中\r\n            fw.write(str);\r\n            System.out.println(\"已保存！\");\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n## 5. Buffered 缓冲区\r\n缓冲区的出现是为了提高流的操作效率，所以在创建缓冲区之前，必须要先有流对象\r\n### BufferedWriter\r\n```\r\npackage io;\r\n\r\nimport java.io.BufferedWriter;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\n\r\npublic class BufferedWriterDemo {\r\n    public static void main(String[] args) throws IOException{\r\n        //创建一个字符写入流对象\r\n        FileWriter fw = new FileWriter(\"buf.txt\");\r\n\r\n        //为了提高字符写入流效率，加入了缓冲技术\r\n        //只要将需要被提高效率的流对象作为参数传递给缓冲区的构造函数即可\r\n        BufferedWriter bufw = new BufferedWriter(fw);\r\n\r\n        for (int x=1;x<5;x++){\r\n            bufw.write(\"abc\" + x);\r\n            bufw.newLine(); //换行\r\n            bufw.flush();   //刷新\r\n        }\r\n        bufw.close();   //其实关闭缓冲流就是渣关闭缓冲区中的流对象\r\n    }\r\n}\r\n```\r\n### BufferedReader\r\n```\r\npackage io;\r\n\r\nimport java.io.*;\r\n\r\npublic class BufferedReaderDemo {\r\n    public static void main(String[] args) throws IOException{\r\n        //创建一个读取流对象和文件相关联\r\n        FileReader fr = new FileReader(\"buf.txt\");\r\n\r\n        //为了提高效率，加入了缓冲技术，将字符读取对象作为参数传递给缓冲对象的构造函数\r\n        BufferedReader bufr = new BufferedReader(fr);\r\n\r\n        //readLine 一次读一行\r\n        String line = null;\r\n        while ((line = bufr.readLine()) != null){\r\n            System.out.println(line);\r\n        }\r\n        bufr.close();\r\n    }\r\n}\r\n```\r\n>通过缓冲区复制文件\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.*;\r\n\r\npublic class BufferCopy {\r\n    public static void main(String[] args){\r\n        try (\r\n                BufferedReader bufr = new BufferedReader(new FileReader(\"Demo.txt\"));\r\n                BufferedWriter bufw = new BufferedWriter(new FileWriter(\"H:\\\\BufferCopy.txt\"));\r\n                ){\r\n            String line = null;\r\n            while ((line = bufr.readLine()) != null){\r\n                bufw.write(line);\r\n                bufw.newLine();\r\n                bufw.flush();\r\n            }\r\n        }catch (IOException e){\r\n            System.out.println(\"Error\");\r\n        }\r\n    }\r\n}\r\n```\r\n## 6. 过滤流和转换流\r\n### 过滤流\r\n过滤流对一个已有的流进行连接和封装，以更加便利的方式对数据进行读写操作，过滤流又分为过滤输入流和过滤输出流。\r\n```\r\npackage io;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.FileInputStream;\r\n\r\npublic class BufferedInputStreamDemo {\r\n\r\n    public static void main(String[] args) {\r\n        try (\r\n                // 利用FileInputStream对象创建一个输入缓冲流\r\n                BufferedInputStream bi = new BufferedInputStream(new FileInputStream(\"Demo.txt\"));\r\n                )\r\n        {\r\n            int result = 0;\r\n            //循环读数据\r\n            while ((result = bi.read()) != -1) {\r\n                //输出\r\n                System.out.print((char) result);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n### 转换流\r\nJava 的 IO流 体系中提供了两个转换流：\r\n- InputStreamReader：将字节输入流转换为字符输入流\r\n- OutputStreamWriter：将字符输出流转换为字节输出流\r\n\r\n```\r\npackage io;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\n\r\npublic class InputStreamReaderDemo {\r\n    public static void main(String[] args) {\r\n        try (\r\n                // 将 Sytem.in 标准输入流 InputStream 字节流转换成 Reader 字符流\r\n                InputStreamReader reader = new InputStreamReader(System.in);\r\n                // 将普通 Reader 包装成 BufferedReader，BufferedReader 具有缓冲功能\r\n                BufferedReader br = new BufferedReader(reader)) {\r\n            String line = null;\r\n            // 采用循环方式来一行一行的读取\r\n            while ((line = br.readLine()) != null) {\r\n                // 如果读取的字符串为\"exit\"，程序退出\r\n                if (line.equals(\"exit\")) {\r\n                    System.exit(1);\r\n                }\r\n                // 打印读取的内容\r\n                System.out.println(\"输入内容为:\" + line);\r\n            }\r\n        } catch (IOException ioe) {\r\n            ioe.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n## 7. 对象流\r\n在 Java 中，使用对象流可实现对象的序列化和反序列化。\r\n\r\n对象的序列化是指将对象数据写到一个输出流中的过程；而对象的反序列化是指从一个输入流中读取一个对象。\r\n\r\n在 Java 中，如果需要将某个对象保存到磁盘或通过网络传输，则该对象必须是可以序列化的。\r\n\r\n若一个类的对象是可序列化的，则该类必须实现 java.lang 包下的 Serializable 接口或 Externalizable 接口。\r\n\r\n```\r\n//定义一个可以序列化的 Person 实体类\r\npublic class Person implements Serializable {\r\n	...\r\n}\r\n```\r\n\r\n>序列化\r\n\r\n```\r\nimport java.io.FileOutputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.io.Serializable;\r\n\r\npublic class ObjectOutputStreamDemo {\r\n\r\n	public static void main(String[] args) {\r\n\r\n		// 创建一个ObjectOutputStream对象输出流\r\n		try (ObjectOutputStream obs = new ObjectOutputStream(new FileOutputStream(\"d:\\\\PersonObject.txt\"))) {\r\n			// 创建一个Person类型的对象\r\n			Person person = new Person(\"张三\", 25, \"青岛\");\r\n			// 把对象写入到文件中\r\n			obs.writeObject(person);\r\n			obs.flush();\r\n			System.out.println(\"序列化完毕！\");\r\n		} catch (Exception ex) {\r\n			ex.printStackTrace();\r\n		}\r\n	}\r\n}\r\n```\r\n>反序列化\r\n\r\n```\r\nimport java.io.FileInputStream;\r\nimport java.io.ObjectInputStream;\r\n\r\npublic class ObjectInputStreamDemo {\r\n	public static void main(String[] args) {\r\n		// 创建一个ObjectInputStream对象输入流\r\n		try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"d:\\\\PersonObject.txt\"))) {\r\n			// 从ObjectInputStream对象输入流中读取一个对象，并强制转换成Person对象\r\n			Person person =(Person)ois.readObject();\r\n			System.out.println(\"序列化完毕！读出的对象信息如下：\");\r\n			System.out.println(person);\r\n		} catch (Exception ex) {\r\n			ex.printStackTrace();\r\n		}\r\n	}\r\n}\r\n```\r\n## 8. NIO\r\nNIO 将文件或文件的一段区域映射到内存中，这样可以像访问内存一样来访问文件。\r\n\r\nBuffer 和 Channel 是 NIO 中两个核心对象：\r\n- Buffer 可以理解成一个容器，其本质是一个数组。\r\n- Channel 是对传统 IO 系统的模拟，在 NIO 系统中所有数据都需要经过通道传输；Channel 与传统的 InputStream、OutputStream最大的区别是提供一个 map() 方法，通过该方法可以直接将一块数据映射到内存中。\r\n\r\n### Buffer\r\n\r\n```\r\nimport java.nio.CharBuffer;\r\n\r\npublic class NIOBufferDemo {\r\n	public static void main(String[] args) {\r\n		// 实例化一个容量为 8 的 CharBuffer\r\n		CharBuffer buff = CharBuffer.allocate(8);\r\n		System.out.println(\"capacity: \"	+ buff.capacity());\r\n		System.out.println(\"limit: \" + buff.limit());\r\n		System.out.println(\"position: \" + buff.position());\r\n		\r\n		// 使用 put 方法，放入元素\r\n		buff.put(\'a\');\r\n		buff.put(\'b\');\r\n		buff.put(\'c\');     \r\n		System.out.println(\"加入三个元素后，position = \" + buff.position());\r\n		\r\n		// 调用 flip() 方法，反转缓冲区\r\n		buff.flip();	  // ③\r\n		System.out.println(\"执行flip()后，limit = \" + buff.limit());\r\n		System.out.println(\"position = \" + buff.position());\r\n		\r\n		// get 方法，取出第一个元素\r\n		System.out.println(\"第一个元素(position=0)：\" + buff.get()); \r\n		System.out.println(\"取出一个元素后，position = \" + buff.position());\r\n		\r\n		// 调用 clear 方法，清除缓冲区\r\n		buff.clear(); \r\n		System.out.println(\"执行clear()后，limit = \" + buff.limit());\r\n		System.out.println(\"执行clear()后，position = \" + buff.position());\r\n		System.out.println(\"执行clear()后，缓冲区内容并没有被清除：\" + \"第三个元素为：\" +  buff.get(2));\r\n		System.out.println(\"执行绝对读取后，position = \" + buff.position());\r\n\r\n	}\r\n\r\n}\r\n```\r\n### Channel\r\nChannel 与传统的 IO流 类似，但主要有两点区别：\r\n- Channel 类可以直接将指定文件的部分或全部直接映射成 Buffer\r\n- 程序不能直接访问 Channel 中的数据，Channel 只能与 Buffer 进行交互\r\n>将 FileChannel 的所有数据映射成 ByteBuffer\r\n\r\n```\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.CharBuffer;\r\nimport java.nio.MappedByteBuffer;\r\nimport java.nio.channels.FileChannel;\r\nimport java.nio.charset.Charset;\r\nimport java.nio.charset.CharsetDecoder;\r\n\r\npublic class NIOFileChannelDemo {\r\n    public static void main(String[] args) {\r\n        File f = new File(\"src\\\\com\\\\qst\\\\chapter01\\\\NIOFileChannelDemo.java\");\r\n        try (\r\n                // 创建FileInputStream，以该文件输入流创建FileChannel\r\n                FileChannel inChannel = new FileInputStream(f).getChannel();\r\n                // 以文件输出流创建FileBuffer，用以控制输出\r\n                FileChannel outChannel = new FileOutputStream(\"D:\\\\channel.txt\")\r\n                        .getChannel()) {\r\n            // 将FileChannel里的全部数据映射成ByteBuffer\r\n            MappedByteBuffer buffer = inChannel.map(\r\n                    FileChannel.MapMode.READ_ONLY, 0, f.length()); // ①\r\n            // 使用GBK的字符集来创建解码器\r\n            Charset charset = Charset.forName(\"GBK\");\r\n            // 直接将buffer里的数据全部输出\r\n            outChannel.write(buffer); // ②\r\n            // 再次调用buffer的clear()方法，复原limit、position的位置\r\n            buffer.clear();\r\n            // 创建解码器(CharsetDecoder)对象\r\n            CharsetDecoder decoder = charset.newDecoder();\r\n            // 使用解码器将ByteBuffer转换成CharBuffer\r\n            CharBuffer charBuffer = decoder.decode(buffer);\r\n            // CharBuffer的toString方法可以获取对应的字符串\r\n            System.out.println(charBuffer);\r\n        } catch (IOException ex) {\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## 9. NOI.2\r\n>java.nio.file.Path 下的 Path类\r\n\r\n```\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\n\r\npublic class NIO2PathDemo {\r\n	public static void main(String[] args) {\r\n		// 以当前路径来创建Path对象\r\n		Path path = Paths.get(\".\");\r\n		System.out.println(\"path里包含的路径数量：\" + path.getNameCount());\r\n		System.out.println(\"path的根路径：\" + path.getRoot());\r\n		\r\n		// 获取path对应的绝对路径。\r\n		Path absolutePath = path.toAbsolutePath();\r\n		System.out.println(absolutePath);\r\n		\r\n		// 获取绝对路径的根路径\r\n		System.out.println(\"absolutePath的根路径：\" + absolutePath.getRoot());\r\n		\r\n		// 获取绝对路径所包含的路径数量\r\n		System.out.println(\"absolutePath里包含的路径数量：\" + absolutePath.getNameCount());\r\n		System.out.println(absolutePath.getName(3));\r\n		\r\n		// 以多个String来构建Path对象\r\n		Path path2 = Paths.get(\"g:\", \"publish\", \"codes\");\r\n		System.out.println(path2);\r\n	}\r\n}\r\n```\r\n\r\n>Files类\r\n\r\n```\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.nio.charset.Charset;\r\nimport java.nio.file.FileStore;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class NIO2FilesDemo {\r\n	public static void main(String[] args) {\r\n		try {\r\n			// 复制文件\r\n			Files.copy(\r\n					Paths.get(\"src\\\\com\\\\qst\\\\chapter01\\\\NIO2FilesDemo.java\"),\r\n					new FileOutputStream(\"a.txt\"));\r\n			// 判断NIO2FilesDemo.java文件是否为隐藏文件\r\n			System.out.println(\"NIO2FilesDemo.java是否为隐藏文件：\"\r\n					+ Files.isHidden(Paths\r\n							.get(\"src/com/qst/chapter09/NIO2FilesDemo.java\")));\r\n			// 一次性读取FilesTest.java文件的所有行\r\n			List<String> lines = Files.readAllLines(Paths.get(\"src\", \"com\",\r\n					\"qst\", \"chapter09\", \"NIO2FilesDemo.java\"), Charset\r\n					.forName(\"gbk\"));\r\n			System.out.println(\"行数：\" + lines.size());\r\n			// 判断指定文件的大小\r\n			System.out.println(\"a.txt文件的大小为：\" + Files.size(Paths.get(\"a.txt\")));\r\n			List<String> poem = new ArrayList<>();\r\n			poem.add(\"使用NIO.2技术\");\r\n			poem.add(\"往文件中写内容\");\r\n			// 直接将多个字符串内容写入指定文件中\r\n			Files.write(Paths.get(\"pome.txt\"), poem, Charset.forName(\"gbk\"));\r\n			FileStore cStore = Files.getFileStore(Paths.get(\"C:\"));\r\n			// 判断C盘的总空间，可用空间\r\n			System.out.println(\"C:共有空间：\" + cStore.getTotalSpace());\r\n			System.out.println(\"C:可用空间：\" + cStore.getUsableSpace());\r\n		} catch (FileNotFoundException e) {\r\n			e.printStackTrace();\r\n		} catch (IOException e) {\r\n			e.printStackTrace();\r\n		}\r\n	}\r\n}\r\n```',`groups`='Java',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 214 [ RunTime:0.001151s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000873s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000311s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000744s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000358s ]
---------------------------------------------------------------
[ 2018-11-06T17:54:06+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/214.html
[ info ] qingrang.top/daily/admin/note/shownote/id/214.html [运行时间：0.054852s][吞吐率：18.23req/s] [内存消耗：2,023.62kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/214',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '214',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000505s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001654s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 214 LIMIT 1 [ RunTime:0.000504s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001022s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000291s ]
---------------------------------------------------------------
[ 2018-11-06T17:54:30+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/233.html
[ info ] qingrang.top/daily/admin/note/shownote/id/233.html [运行时间：0.054335s][吞吐率：18.40req/s] [内存消耗：1,992.11kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '233',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000584s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001327s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 233 LIMIT 1 [ RunTime:0.000460s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000910s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000374s ]
---------------------------------------------------------------
[ 2018-11-06T17:54:34+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/233.html
[ info ] qingrang.top/daily/admin/note/editnote/id/233.html [运行时间：0.056111s][吞吐率：17.82req/s] [内存消耗：2,056.44kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '233',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000513s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001273s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 233 LIMIT 1 [ RunTime:0.000447s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000849s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000332s ]
---------------------------------------------------------------
[ 2018-11-06T17:55:55+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/233.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/233.html [运行时间：0.062344s][吞吐率：16.04req/s] [内存消耗：2,176.73kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '48874',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/233.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 中国史纲
[TOC]
## 中国历史的时空坐标
时间和空间加在一块,才是完整的历史。
### 四个时间坐标点
中国历史发生过几次重要的转型,这些转型推动着中国历史向前的发展。

1.第一个转型,是**商周之变**,就是从商朝到周朝的转型。

这次转型之后,我们开始有了“中国”这个概念,中华文明当中最初的普世主义理想开始出现了。

2.第二个转型,**周秦之变**,就是从周朝到秦朝的转型。

这次转型,让中原从分封割据的局面进入到大一统的局面,中国历史也开始超越于中原之上,中原与草原的相互塑造和对抗开始成为中国历史的大脉络。

3.第三个转型,**唐宋之变**,就是从唐朝到宋朝的转型。

这次转型,让中国的社会结构从豪族社会进入到平民社会,此后中国历史再无长期的分裂,大一统开始成为一个不可逆的历史过程。在先秦之后,中国的文化在宋朝迎来了又一次大爆发,有些西方学者甚至称这是中国的文艺复兴。这次文化爆发,不仅决定了此后将近一千年的中国文化气质,也决定了日本、朝鲜、越南等其他儒教国家的文化气质。

4.第四个转型,就是**清朝末期开始的古今之变**,中国开始从古代社会向现代社会进行艰难转型。

这个过程带来了一系列轰轰烈烈的历史过程,转型过程直到今天仍在继续,还未完成。

### 五个空间坐标点
草原、中原、海洋、西域、高原。

这几个大的空间,彼此之间有着极为深刻的相互依赖相互塑造的关系,以至于脱离开一方就完全解释不了另一方,所以它们加在一块构成一个体系。

## 中国的概念和中华文明的普世主义理想【商周】
### 历史上第一次出现「中国」
周朝的第二位君主周成王,兴建了东都洛阳城,当时有个叫做「何」的贵族,这人铸了一件青铜器纪念这个事儿,1963年这个青铜器在陕西宝鸡被发现,今天称其为「何尊」，「何尊」的底部铸了一百多个字,里面提到,周武王说要"宅兹中国”,就是说要“住在中国”,这是"中国"这个词的最早来源。

什么叫中国？**达到了文明最高水准的地方,就是文明意义上的中心,古人就管这种地方叫做「中国」。**
### 中华文明的普世主义理想：究竟天命是降于周人呢,还是天命降于周王
商朝是由“商人"。他们认为天命降于商人。为了让天能够永远地保佑自己,商人会经常地进行大规模的祭祀活动,祭祀当中会大量用到活人做祭品。

这些被献祭的人从哪来呢?

从对外战争掠夺的羌人而来。所谓的羌人就是生活在商王朝西部的、除了商朝人以外的所有人。

商人的这种天命观,肯定会受到羌人的抵抗。其中,周人是最主要的一支抵抗力量,他们逐渐组织了很多苦不堪言的羌人群体来反抗商朝，反抗的时候,在周人中间有过一个观念层面的争论,究竟天命是降于周人呢,还是天命降于周王?争论的结果是,天命降于周王。

这个观念变化太重要了。初看上去,这似乎是把天命的载体变得狭隘了,实际上是把它变得普世了。

为什么这么说呢?如果天命是降于周人,那就和此前降于商人的路数差不多,周人的岁月要想静好,就得时刻压制住所有不是周人的群体。这样的话,周人和商人征战,谁胜谁败就不好说了。因为,对其他羌人群体来说,打完这一仗,十有八九只不过换了个地方拿我们献祭,凭啥要跟你混啊?而**如果天命是降于周王,则周王便是天下的共主,他不仅仅要为周人主持正义,而是要为全天下人主持正义,这是一种真正的普世主义观念**。

### 什么是封建社会
推翻了商朝之后,周朝又是如何具体建立它的统治方式呢?那就是,分封制。周天子向下分封了他的大量亲戚和重臣,意图依靠他们形成的藩属诸侯国,来拱卫周王。这样一种政治统治形式就被称作“封建”,这种社会叫做封建社会。

封建“这个词最初出自《左传》,里面有句话叫做“封建亲戚,以藩屏周”,就是说分封亲信出去建立诸侯国,作为周朝王室领地的屏障。**只有这种封土建邦、分封割据的状态,才叫做封建。**

封建社会的一大特征是,最高统治者是没有权力干涉诸侯国内部事务的,诸侯们确实是最高统治者的封臣,但某种意义上也像是个合伙人,都有比较强的独立性。

周朝的时候,诸侯都承认周天子是最高权威,但周天子并不能管诸侯国内部的事情。周朝在这个过程中建立了封建社会,但周天子又逐渐衰落了。在周天子衰落之后,历史的主角就变成了那些诸侯。诸侯们彼此不断竞争,最终终结了中国的封建社会。

## 封建社会的终结【春秋末期、战国初期】
到了西周后期,周天子的影响力越来越差,最终被迫迁都洛阳,中国历史进入到东周。

东周又分成了舂秋战国两个时期,**春秋末期出现了一些重要的技术发展,它带来了新的经济和人力资源,打破了过去的社会均衡,封建社会当中的贵族秩序崩塌了，封建社会也在春秋战国时代走上末日。**

### 战争的逻辑的变化
春秋之前的的战争十分注重礼仪性(战争都是贵族在参与，这就导致了参与人数并不多，他们认为战争是一件高贵的事，他们的战争可能就是比谁的正步踢得好)。但到了春秋中后期,随着楚国(楚国是个土生政权,并不是周天子分封的诸侯国，它的文化和中原有很大区别,也不大在乎中原的礼仪之类的东西,在当时的中原诸侯看来它就是个蛮夷之邦。)的加入，战争变成以砍死人为目的了。也正是由于这个战争逻辑的变化,才把中国引向了大一统。

### 两个技术变迁
诸侯分封次级诸侯，随着次级诸侯势力的增大，诸侯和次级诸侯的关系同周天子和诸侯的关系一样。在春秋末期、战国初期,出现了两个重要的技术变迁,让诸侯力量的扩大有了可能。正是因为这两次技术变革,打破了君主和封臣之间的力量均衡,周厉王当初搞不定自己下级的事,现在诸侯可以做到了,也就是诸侯能够搞定这些次级诸侯。

这两个技术变迁,一个是铁器和牛耕的农业生产技术,一个是竹简这种知识传播技术。

>铁器和牛耕 - 农业生产技术

铁器与牛耕的出现,提升了平民的劳动效率。过去,他们的耕种效率很低,只能在贵族控制的公田、又叫井田上种地,没有能力再去开垦自己的私田了;但是,铁器和牛耕让生产效率大大提升了,平民有余力去开垦自己的私田,甚至索性就从贵族控制的井田上跑路了。此时君主、贵族、平民三者之间的一种复杂博弈关系就出现了。注意,这儿所说的君主,指的就是周天子封的诸侯,贵族指的就是诸侯所封的次级诸侯,这会儿的历史已经没周天子什么事儿了。

君主向耕种私田的平民提供保护,平民向君主交税。平民从井田上越跑越多,贵族所控制的井田制就逐渐瓦解了,贵族的力量也逐渐削弱了。君主开始获得相对于贵族的优势。

>竹简 - 知识传播技术

 知识传播的成本急剧下降,一般的贵族子弟、甚至运气好的普通百姓,都有机会学习文字获得知识了。由于多年的人口膨胀,这个时候出现了很多有文化、却无法获得一块封地的贵族子弟,他们就变成游士,到处寻找把自己卖个好价钱的机会。

君主们早就想养一群可控的自己人了。什么样的人最好用呢?

第一,他们要在本国没有根基,没资本对抗君主;
第二,他们的地位尊荣都取决于君主的赏赐,就有动力与君主相配合。

从别国跑来的游士完全符合这两点要求。君主与游士拍即合,游士成为依附于君主的私人人事班底。这个人事班底,后来就发展为官僚制。

官僚和贵族的区别在于,本质上来说,官僚没有独立性,他们是职业经理人,其地位取决于君主的意志;贵族有独立性,他们是准合伙人,君主有大事必须和他们商量着来。游士的出现,终于让君主们可以全方位碾压贵族封臣,诸侯国也就从君主与贵族共治的结构,转向君主说了算的官僚制结构。

### 变法

这个过程在历史上被叫作什么呢?

变法! 没错,魏国的李悝变法、秦国的商鞅变法等等,就是这样展开的。

来自其他国家的游士,成了各诸侯国的新贵,他们压制住所在国的大贵族,把君主的意志贯彻下去。随着各种变法的展开,中国历史就进入到了战国时代。

对君主来说,这回有办法把平民也动员起来了。你们虽然不是贵族血统,但你们可以立军功。只要你有办法从战场上拎回更多的人头,你也有机会上升到比贵族还高的地位。这种激励可不得了,战争的规模和频次急剧上升,大规模的灭国之战很容易就爆发了。灭国之战都到什么量级呢?比如很多人推崇的战神白起,一场战役就会坑杀赵国的40万降兵,这都在变法之后成为可能，变法这个事情也有传染性,谁最先变法,谁的战争效率就大幅上升;其他国家如果不跟上,就只能等着挨打。

**随着各国陆续变法,各诸侯国内部的旧贵族阶层被一扫而空**。变法之后,君主能决定军功的标准,也就能决定官僚新贵们的地位高低,**君主对国家的控制力就变得更强**,再没有能够约束君主的力量,**分封割据的封建社会也就逐渐走上了终结之日**,战争逻辑的变化,影响还不止于此,当战争规模扩大到了诸侯国承受不起的时候,中国也就开始走向大一统。

## 诸子百家的三大流派【春秋后期】
春秋后期,天下大乱,礼崩乐坏。人们突然发现赖以理解世界的坐标系没有了,世界的意义丧失了。而这种时候,就是思想大爆发的时候。

诸子百家,根据他们对待传统不同的态度,可以分为三类:一类是力挺传统（**克己复礼**）,代表就是儒家;一类是抛弃传统（**以法代礼**）,代表就是法家;还有一类是不在乎传统（出世，**无为而治**）,代表就是道家。

### 儒家
孔子认为复古的路径是“克己复礼”,就是要克制自己的各种冲动,依照传统留下来的"礼"的要求来做事。这样就能达到儒家的最高理想,“仁”。

>如果你理解孔子是儒家的开创者,莫不如把他理解为此前巫师传统的集大成者。

儒家是从商周两朝的巫师系统发展出来的,巫师就是古代沟通天意与人事的神职人员，这种工作主要通过占卜和祭祀来完成。祭祀这属于最高的“礼”,而巫师们就是“礼”的具体操作者与记录者。

到了礼崩乐坏的时候,如果要想复古,第步肯定得先说清楚这个“古”究竟是什么。巫师系统有这方面的很多记录,当然是最合适的解说人选,他们由此就逐渐发展为儒家。

### 法家

儒家强调恢复“礼”,“礼”来自传统,贵族是“礼"的载体;法家强调创建“法”,“法”出自君主意志,官僚是法的执行者。

>法家常在别国成事

根据君主、贵族、官僚的博弈关系,各诸侯国的君主们肯定不会愿意接受儒家,而更愿意接受法所以孔子孟子都曾周游列国,都没得到过重用,反倒是法家的人占据各种高位。有趣的是,法家的鼓吹者往往在本国是不受欢迎的,无论是商鞅还是李斯,都是在别国建功立业。韩非虽然在别国没有能够建立功业,但在本国也从没获得过机会。原因在于,君主需要官僚在本国没有根基,才能听使唤;倘若是出身本国的法家,他总会有各种根基,这种人又太懂得法术势,很容易成为君主忌惮的对象。脱离了家乡的游士,如漂泊浮萍,孤身人,荣辱富贵都依赖于君主,君主最喜欢了。所以,法家只能在别国成事。

### 道家

顺其自然,让世界、让百姓自由自主地活动,事情自然就好了,这就叫“无为而治”。

道家认为,正是各种入世的念头才把事情搞糟了,倘若不再追求转瞬即逝的现世成就,天地一下子就宽了。

## 周秦之变【周-秦-汉】【中原】

周秦之变对中国的思想史还带来个自然延伸的影响,就是我们在历史上看到的,从秦皇到汉武,帝国的官方思想经历了**从法家到道家再到儒家**的转换过程。

### 周秦之变的“法家逻辑”
百家争鸣的诸多学说,哪一种更注重提升战争效率,它就会获得诸侯们在政治上的更多支持。从中胜出的就是法家。但你用法家就能够征服天下,却不能仅仅用法家来治理天下。

### 汉高祖的“无为而治”
为什么汉高祖会选择道家呢?最根本的原因在于力量均衡。

刘邦起家之前是个平民百姓,征服天下只能靠团结足够多的人。刘邦能够吸引一群重要将领和谋士追随自己,不是因为自己有力量,而是因为有威信。刘邦和这些人近乎是合伙人的关系,并没有压倒性力量来钳制他们,反倒会被这些兄弟给制衡住。这么一来,皇帝想要专制也不可能,**无为而治只是面对强大合伙人时的无奈之举。**

### 汉武帝的“独尊儒术”
“阳儒阴法",又称“**外儒内法**"。什么意思呢?从观念层面来看,是儒家在主导,儒生解读着天意,君主也不敢完全违背儒家的教导而行事。儒家表面上的迂腐,却为君主划出了大致的行动边界;但在具体的制度设计上,却还是法家逻辑。这样一来,**对君主来说,治理的效率有了,安抚民心的口径也有了。**

## 汉人王朝为何无法统治长城以北【汉】【中原】
这个问题,其底层是由儒家文化以及儒家文化的地理依赖性决定的。

### 究竟什么是汉人
**只要是接受儒家文化,并按儒家文化的指导生活的人,在古代就被视作汉人。**

### 儒家文化的地理依赖性
儒家文化光有个体心灵的皈依远远不够,个体还必须生活在一种特定的人际关系结构当中才行。

比如,“三从四德三纲五常"等等这些规矩,都是对某种人际关系的规定,脱离开人际关系根本就没法展开。把你一个人扔荒岛上,还让你三从四德,你肯定做不到。

儒家文化所要求的这种特定的人际关系,首先就要求有比较稳定的家庭组织,而稳定的家庭组织,前提是你得是定居的。

定居的前提是农耕,而农耕有一个最硬性的约束条件,就是年降水量。东亚大陆上,如果一个地方年降水量少于400毫米的话,靠农耕是活不下去的。

那么,东亚大陆的400毫米等降雨线在哪儿呢?

这条400毫米等降雨线,差不多和长城重合。长城再往北,年降水量就不足400毫米了。也就是说,儒家帝国在农耕地区的扩张极限,就是400毫米等降雨线。于是在这里,儒家帝国修建了长城。长城再往北就是游牧地区了。

在古代社会,由于农耕对降雨量的要求,使得你要是越过了长城以北,还想活得下去的话,就必须游牧化,否则是死路一条。而一旦游牧化之后,就意味着中原式的人际关系结构、家庭结构等等都没有基础了,无法再按照儒家的方式来生活了。

**儒家文化有一种地理依赖性。因为自然生态原因,儒家越不过去长城以北、嘉峪关以西。儒家文化只能在中原地区展开。**

### 中原和草原的继承逻辑区别
![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/dFAEllbB47.png)

官僚制帝国有个很重要的特征,就是君主和官僚,在功能上是有分工的。君主的首要功能,是象征正当性。所以,君主的能力只排在第二位,第一重要的是君位继承的稳定性。嫡长子资格是最容易达成这种共识的。所以,中原的继承原则就稳定在嫡长子继承制上了。



',
  'groups' => 'Default',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '233',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000556s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001276s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 233 LIMIT 1 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 233 LIMIT 1 [ RunTime:0.000286s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000873s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000321s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000263s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000314s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=233,`p_id`=1,`title`='中国史纲\r',`content`='# 中国史纲\r\n[TOC]\r\n## 中国历史的时空坐标\r\n时间和空间加在一块,才是完整的历史。\r\n### 四个时间坐标点\r\n中国历史发生过几次重要的转型,这些转型推动着中国历史向前的发展。\r\n\r\n1.第一个转型,是**商周之变**,就是从商朝到周朝的转型。\r\n\r\n这次转型之后,我们开始有了“中国”这个概念,中华文明当中最初的普世主义理想开始出现了。\r\n\r\n2.第二个转型,**周秦之变**,就是从周朝到秦朝的转型。\r\n\r\n这次转型,让中原从分封割据的局面进入到大一统的局面,中国历史也开始超越于中原之上,中原与草原的相互塑造和对抗开始成为中国历史的大脉络。\r\n\r\n3.第三个转型,**唐宋之变**,就是从唐朝到宋朝的转型。\r\n\r\n这次转型,让中国的社会结构从豪族社会进入到平民社会,此后中国历史再无长期的分裂,大一统开始成为一个不可逆的历史过程。在先秦之后,中国的文化在宋朝迎来了又一次大爆发,有些西方学者甚至称这是中国的文艺复兴。这次文化爆发,不仅决定了此后将近一千年的中国文化气质,也决定了日本、朝鲜、越南等其他儒教国家的文化气质。\r\n\r\n4.第四个转型,就是**清朝末期开始的古今之变**,中国开始从古代社会向现代社会进行艰难转型。\r\n\r\n这个过程带来了一系列轰轰烈烈的历史过程,转型过程直到今天仍在继续,还未完成。\r\n\r\n### 五个空间坐标点\r\n草原、中原、海洋、西域、高原。\r\n\r\n这几个大的空间,彼此之间有着极为深刻的相互依赖相互塑造的关系,以至于脱离开一方就完全解释不了另一方,所以它们加在一块构成一个体系。\r\n\r\n## 中国的概念和中华文明的普世主义理想【商周】\r\n### 历史上第一次出现「中国」\r\n周朝的第二位君主周成王,兴建了东都洛阳城,当时有个叫做「何」的贵族,这人铸了一件青铜器纪念这个事儿,1963年这个青铜器在陕西宝鸡被发现,今天称其为「何尊」，「何尊」的底部铸了一百多个字,里面提到,周武王说要\"宅兹中国”,就是说要“住在中国”,这是\"中国\"这个词的最早来源。\r\n\r\n什么叫中国？**达到了文明最高水准的地方,就是文明意义上的中心,古人就管这种地方叫做「中国」。**\r\n### 中华文明的普世主义理想：究竟天命是降于周人呢,还是天命降于周王\r\n商朝是由“商人\"。他们认为天命降于商人。为了让天能够永远地保佑自己,商人会经常地进行大规模的祭祀活动,祭祀当中会大量用到活人做祭品。\r\n\r\n这些被献祭的人从哪来呢?\r\n\r\n从对外战争掠夺的羌人而来。所谓的羌人就是生活在商王朝西部的、除了商朝人以外的所有人。\r\n\r\n商人的这种天命观,肯定会受到羌人的抵抗。其中,周人是最主要的一支抵抗力量,他们逐渐组织了很多苦不堪言的羌人群体来反抗商朝，反抗的时候,在周人中间有过一个观念层面的争论,究竟天命是降于周人呢,还是天命降于周王?争论的结果是,天命降于周王。\r\n\r\n这个观念变化太重要了。初看上去,这似乎是把天命的载体变得狭隘了,实际上是把它变得普世了。\r\n\r\n为什么这么说呢?如果天命是降于周人,那就和此前降于商人的路数差不多,周人的岁月要想静好,就得时刻压制住所有不是周人的群体。这样的话,周人和商人征战,谁胜谁败就不好说了。因为,对其他羌人群体来说,打完这一仗,十有八九只不过换了个地方拿我们献祭,凭啥要跟你混啊?而**如果天命是降于周王,则周王便是天下的共主,他不仅仅要为周人主持正义,而是要为全天下人主持正义,这是一种真正的普世主义观念**。\r\n\r\n### 什么是封建社会\r\n推翻了商朝之后,周朝又是如何具体建立它的统治方式呢?那就是,分封制。周天子向下分封了他的大量亲戚和重臣,意图依靠他们形成的藩属诸侯国,来拱卫周王。这样一种政治统治形式就被称作“封建”,这种社会叫做封建社会。\r\n\r\n封建“这个词最初出自《左传》,里面有句话叫做“封建亲戚,以藩屏周”,就是说分封亲信出去建立诸侯国,作为周朝王室领地的屏障。**只有这种封土建邦、分封割据的状态,才叫做封建。**\r\n\r\n封建社会的一大特征是,最高统治者是没有权力干涉诸侯国内部事务的,诸侯们确实是最高统治者的封臣,但某种意义上也像是个合伙人,都有比较强的独立性。\r\n\r\n周朝的时候,诸侯都承认周天子是最高权威,但周天子并不能管诸侯国内部的事情。周朝在这个过程中建立了封建社会,但周天子又逐渐衰落了。在周天子衰落之后,历史的主角就变成了那些诸侯。诸侯们彼此不断竞争,最终终结了中国的封建社会。\r\n\r\n## 封建社会的终结【春秋末期、战国初期】\r\n到了西周后期,周天子的影响力越来越差,最终被迫迁都洛阳,中国历史进入到东周。\r\n\r\n东周又分成了舂秋战国两个时期,**春秋末期出现了一些重要的技术发展,它带来了新的经济和人力资源,打破了过去的社会均衡,封建社会当中的贵族秩序崩塌了，封建社会也在春秋战国时代走上末日。**\r\n\r\n### 战争的逻辑的变化\r\n春秋之前的的战争十分注重礼仪性(战争都是贵族在参与，这就导致了参与人数并不多，他们认为战争是一件高贵的事，他们的战争可能就是比谁的正步踢得好)。但到了春秋中后期,随着楚国(楚国是个土生政权,并不是周天子分封的诸侯国，它的文化和中原有很大区别,也不大在乎中原的礼仪之类的东西,在当时的中原诸侯看来它就是个蛮夷之邦。)的加入，战争变成以砍死人为目的了。也正是由于这个战争逻辑的变化,才把中国引向了大一统。\r\n\r\n### 两个技术变迁\r\n诸侯分封次级诸侯，随着次级诸侯势力的增大，诸侯和次级诸侯的关系同周天子和诸侯的关系一样。在春秋末期、战国初期,出现了两个重要的技术变迁,让诸侯力量的扩大有了可能。正是因为这两次技术变革,打破了君主和封臣之间的力量均衡,周厉王当初搞不定自己下级的事,现在诸侯可以做到了,也就是诸侯能够搞定这些次级诸侯。\r\n\r\n这两个技术变迁,一个是铁器和牛耕的农业生产技术,一个是竹简这种知识传播技术。\r\n\r\n>铁器和牛耕 - 农业生产技术\r\n\r\n铁器与牛耕的出现,提升了平民的劳动效率。过去,他们的耕种效率很低,只能在贵族控制的公田、又叫井田上种地,没有能力再去开垦自己的私田了;但是,铁器和牛耕让生产效率大大提升了,平民有余力去开垦自己的私田,甚至索性就从贵族控制的井田上跑路了。此时君主、贵族、平民三者之间的一种复杂博弈关系就出现了。注意,这儿所说的君主,指的就是周天子封的诸侯,贵族指的就是诸侯所封的次级诸侯,这会儿的历史已经没周天子什么事儿了。\r\n\r\n君主向耕种私田的平民提供保护,平民向君主交税。平民从井田上越跑越多,贵族所控制的井田制就逐渐瓦解了,贵族的力量也逐渐削弱了。君主开始获得相对于贵族的优势。\r\n\r\n>竹简 - 知识传播技术\r\n\r\n 知识传播的成本急剧下降,一般的贵族子弟、甚至运气好的普通百姓,都有机会学习文字获得知识了。由于多年的人口膨胀,这个时候出现了很多有文化、却无法获得一块封地的贵族子弟,他们就变成游士,到处寻找把自己卖个好价钱的机会。\r\n\r\n君主们早就想养一群可控的自己人了。什么样的人最好用呢?\r\n\r\n第一,他们要在本国没有根基,没资本对抗君主;\r\n第二,他们的地位尊荣都取决于君主的赏赐,就有动力与君主相配合。\r\n\r\n从别国跑来的游士完全符合这两点要求。君主与游士拍即合,游士成为依附于君主的私人人事班底。这个人事班底,后来就发展为官僚制。\r\n\r\n官僚和贵族的区别在于,本质上来说,官僚没有独立性,他们是职业经理人,其地位取决于君主的意志;贵族有独立性,他们是准合伙人,君主有大事必须和他们商量着来。游士的出现,终于让君主们可以全方位碾压贵族封臣,诸侯国也就从君主与贵族共治的结构,转向君主说了算的官僚制结构。\r\n\r\n### 变法\r\n\r\n这个过程在历史上被叫作什么呢?\r\n\r\n变法! 没错,魏国的李悝变法、秦国的商鞅变法等等,就是这样展开的。\r\n\r\n来自其他国家的游士,成了各诸侯国的新贵,他们压制住所在国的大贵族,把君主的意志贯彻下去。随着各种变法的展开,中国历史就进入到了战国时代。\r\n\r\n对君主来说,这回有办法把平民也动员起来了。你们虽然不是贵族血统,但你们可以立军功。只要你有办法从战场上拎回更多的人头,你也有机会上升到比贵族还高的地位。这种激励可不得了,战争的规模和频次急剧上升,大规模的灭国之战很容易就爆发了。灭国之战都到什么量级呢?比如很多人推崇的战神白起,一场战役就会坑杀赵国的40万降兵,这都在变法之后成为可能，变法这个事情也有传染性,谁最先变法,谁的战争效率就大幅上升;其他国家如果不跟上,就只能等着挨打。\r\n\r\n**随着各国陆续变法,各诸侯国内部的旧贵族阶层被一扫而空**。变法之后,君主能决定军功的标准,也就能决定官僚新贵们的地位高低,**君主对国家的控制力就变得更强**,再没有能够约束君主的力量,**分封割据的封建社会也就逐渐走上了终结之日**,战争逻辑的变化,影响还不止于此,当战争规模扩大到了诸侯国承受不起的时候,中国也就开始走向大一统。\r\n\r\n## 诸子百家的三大流派【春秋后期】\r\n春秋后期,天下大乱,礼崩乐坏。人们突然发现赖以理解世界的坐标系没有了,世界的意义丧失了。而这种时候,就是思想大爆发的时候。\r\n\r\n诸子百家,根据他们对待传统不同的态度,可以分为三类:一类是力挺传统（**克己复礼**）,代表就是儒家;一类是抛弃传统（**以法代礼**）,代表就是法家;还有一类是不在乎传统（出世，**无为而治**）,代表就是道家。\r\n\r\n### 儒家\r\n孔子认为复古的路径是“克己复礼”,就是要克制自己的各种冲动,依照传统留下来的\"礼\"的要求来做事。这样就能达到儒家的最高理想,“仁”。\r\n\r\n>如果你理解孔子是儒家的开创者,莫不如把他理解为此前巫师传统的集大成者。\r\n\r\n儒家是从商周两朝的巫师系统发展出来的,巫师就是古代沟通天意与人事的神职人员，这种工作主要通过占卜和祭祀来完成。祭祀这属于最高的“礼”,而巫师们就是“礼”的具体操作者与记录者。\r\n\r\n到了礼崩乐坏的时候,如果要想复古,第步肯定得先说清楚这个“古”究竟是什么。巫师系统有这方面的很多记录,当然是最合适的解说人选,他们由此就逐渐发展为儒家。\r\n\r\n### 法家\r\n\r\n儒家强调恢复“礼”,“礼”来自传统,贵族是“礼\"的载体;法家强调创建“法”,“法”出自君主意志,官僚是法的执行者。\r\n\r\n>法家常在别国成事\r\n\r\n根据君主、贵族、官僚的博弈关系,各诸侯国的君主们肯定不会愿意接受儒家,而更愿意接受法所以孔子孟子都曾周游列国,都没得到过重用,反倒是法家的人占据各种高位。有趣的是,法家的鼓吹者往往在本国是不受欢迎的,无论是商鞅还是李斯,都是在别国建功立业。韩非虽然在别国没有能够建立功业,但在本国也从没获得过机会。原因在于,君主需要官僚在本国没有根基,才能听使唤;倘若是出身本国的法家,他总会有各种根基,这种人又太懂得法术势,很容易成为君主忌惮的对象。脱离了家乡的游士,如漂泊浮萍,孤身人,荣辱富贵都依赖于君主,君主最喜欢了。所以,法家只能在别国成事。\r\n\r\n### 道家\r\n\r\n顺其自然,让世界、让百姓自由自主地活动,事情自然就好了,这就叫“无为而治”。\r\n\r\n道家认为,正是各种入世的念头才把事情搞糟了,倘若不再追求转瞬即逝的现世成就,天地一下子就宽了。\r\n\r\n## 周秦之变【周-秦-汉】【中原】\r\n\r\n周秦之变对中国的思想史还带来个自然延伸的影响,就是我们在历史上看到的,从秦皇到汉武,帝国的官方思想经历了**从法家到道家再到儒家**的转换过程。\r\n\r\n### 周秦之变的“法家逻辑”\r\n百家争鸣的诸多学说,哪一种更注重提升战争效率,它就会获得诸侯们在政治上的更多支持。从中胜出的就是法家。但你用法家就能够征服天下,却不能仅仅用法家来治理天下。\r\n\r\n### 汉高祖的“无为而治”\r\n为什么汉高祖会选择道家呢?最根本的原因在于力量均衡。\r\n\r\n刘邦起家之前是个平民百姓,征服天下只能靠团结足够多的人。刘邦能够吸引一群重要将领和谋士追随自己,不是因为自己有力量,而是因为有威信。刘邦和这些人近乎是合伙人的关系,并没有压倒性力量来钳制他们,反倒会被这些兄弟给制衡住。这么一来,皇帝想要专制也不可能,**无为而治只是面对强大合伙人时的无奈之举。**\r\n\r\n### 汉武帝的“独尊儒术”\r\n“阳儒阴法\",又称“**外儒内法**\"。什么意思呢?从观念层面来看,是儒家在主导,儒生解读着天意,君主也不敢完全违背儒家的教导而行事。儒家表面上的迂腐,却为君主划出了大致的行动边界;但在具体的制度设计上,却还是法家逻辑。这样一来,**对君主来说,治理的效率有了,安抚民心的口径也有了。**\r\n\r\n## 汉人王朝为何无法统治长城以北【汉】【中原】\r\n这个问题,其底层是由儒家文化以及儒家文化的地理依赖性决定的。\r\n\r\n### 究竟什么是汉人\r\n**只要是接受儒家文化,并按儒家文化的指导生活的人,在古代就被视作汉人。**\r\n\r\n### 儒家文化的地理依赖性\r\n儒家文化光有个体心灵的皈依远远不够,个体还必须生活在一种特定的人际关系结构当中才行。\r\n\r\n比如,“三从四德三纲五常\"等等这些规矩,都是对某种人际关系的规定,脱离开人际关系根本就没法展开。把你一个人扔荒岛上,还让你三从四德,你肯定做不到。\r\n\r\n儒家文化所要求的这种特定的人际关系,首先就要求有比较稳定的家庭组织,而稳定的家庭组织,前提是你得是定居的。\r\n\r\n定居的前提是农耕,而农耕有一个最硬性的约束条件,就是年降水量。东亚大陆上,如果一个地方年降水量少于400毫米的话,靠农耕是活不下去的。\r\n\r\n那么,东亚大陆的400毫米等降雨线在哪儿呢?\r\n\r\n这条400毫米等降雨线,差不多和长城重合。长城再往北,年降水量就不足400毫米了。也就是说,儒家帝国在农耕地区的扩张极限,就是400毫米等降雨线。于是在这里,儒家帝国修建了长城。长城再往北就是游牧地区了。\r\n\r\n在古代社会,由于农耕对降雨量的要求,使得你要是越过了长城以北,还想活得下去的话,就必须游牧化,否则是死路一条。而一旦游牧化之后,就意味着中原式的人际关系结构、家庭结构等等都没有基础了,无法再按照儒家的方式来生活了。\r\n\r\n**儒家文化有一种地理依赖性。因为自然生态原因,儒家越不过去长城以北、嘉峪关以西。儒家文化只能在中原地区展开。**\r\n\r\n### 中原和草原的继承逻辑区别\r\n![mark](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/dFAEllbB47.png)\r\n\r\n官僚制帝国有个很重要的特征,就是君主和官僚,在功能上是有分工的。君主的首要功能,是象征正当性。所以,君主的能力只排在第二位,第一重要的是君位继承的稳定性。嫡长子资格是最容易达成这种共识的。所以,中原的继承原则就稳定在嫡长子继承制上了。\r\n\r\n\r\n\r\n',`groups`='Default',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 233 [ RunTime:0.000855s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001010s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Default' [ RunTime:0.000313s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000856s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=13  WHERE  `groups` = 'Default' [ RunTime:0.000311s ]
---------------------------------------------------------------
[ 2018-11-06T17:55:56+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/233.html
[ info ] qingrang.top/daily/admin/note/shownote/id/233.html [运行时间：0.055483s][吞吐率：18.02req/s] [内存消耗：2,011.82kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/233.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '233',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000455s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001418s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 233 LIMIT 1 [ RunTime:0.000448s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000816s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000286s ]
---------------------------------------------------------------
[ 2018-11-06T17:56:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/1.html
[ info ] qingrang.top/daily/admin/note/editnote/id/1.html [运行时间：0.055170s][吞吐率：18.13req/s] [内存消耗：2,059.87kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001033s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001227s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000447s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000887s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000280s ]
---------------------------------------------------------------
[ 2018-11-06T17:56:31+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.059671s][吞吐率：16.76req/s] [内存消耗：2,197.08kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '9',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => 'MYSQL',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000546s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002084s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%MYSQL%' OR `content` LIKE '%MYSQL%' ) ORDER BY date desc [ RunTime:0.009639s ]
---------------------------------------------------------------
[ 2018-11-06T17:56:34+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/39
[ info ] qingrang.top/daily/admin/note/editNote/id/39 [运行时间：0.058637s][吞吐率：17.05req/s] [内存消耗：2,028.26kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '39',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000488s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001522s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 39 LIMIT 1 [ RunTime:0.000402s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000959s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000272s ]
---------------------------------------------------------------
[ 2018-11-06T17:57:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/39.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/39.html [运行时间：0.067772s][吞吐率：14.76req/s] [内存消耗：2,051.33kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '1113',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/39',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# MySql 常用操作

1. 修改 自增ID 起始值
```
alter table users AUTO_INCREMENT=0;
```

1. 随机取一条或多条数据
```
SELECT * FROM note AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM note)-(SELECT MIN(id) FROM note))+(SELECT MIN(id) FROM note)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1;
```

## 更新记录
1. 更改指定字段
```
UPDATE note set date = \'2016-00-00\'
UPDATE note SET date = \'2017-00-00\' WHERE date = \'2016-00-00\'
```
1. 更新指定字段中的部分内容
`update table set content=REPLACE(content,\'old\',\'new\')`',
  'groups' => 'DataBase',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '39',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000660s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001305s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 39 LIMIT 1 [ RunTime:0.000426s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 39 LIMIT 1 [ RunTime:0.000335s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000990s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'DataBase' LIMIT 1 [ RunTime:0.000358s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=39,`p_id`=2,`title`='MySql 常用操作\r',`content`='# MySql 常用操作\r\n\r\n1. 修改 自增ID 起始值\r\n```\r\nalter table users AUTO_INCREMENT=0;\r\n```\r\n\r\n1. 随机取一条或多条数据\r\n```\r\nSELECT * FROM note AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM note)-(SELECT MIN(id) FROM note))+(SELECT MIN(id) FROM note)) AS id) AS t2 WHERE t1.id >= t2.id ORDER BY t1.id LIMIT 1;\r\n```\r\n\r\n## 更新记录\r\n1. 更改指定字段\r\n```\r\nUPDATE note set date = \'2016-00-00\'\r\nUPDATE note SET date = \'2017-00-00\' WHERE date = \'2016-00-00\'\r\n```\r\n1. 更新指定字段中的部分内容\r\n`update table set content=REPLACE(content,\'old\',\'new\')`',`groups`='DataBase',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 39 [ RunTime:0.000735s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'DataBase' LIMIT 1 [ RunTime:0.001059s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'DataBase' [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'DataBase' LIMIT 1 [ RunTime:0.000873s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=4  WHERE  `groups` = 'DataBase' [ RunTime:0.000377s ]
---------------------------------------------------------------
[ 2018-11-06T17:57:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/39.html
[ info ] qingrang.top/daily/admin/note/shownote/id/39.html [运行时间：0.061760s][吞吐率：16.19req/s] [内存消耗：1,980.54kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/39',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '39',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000512s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001461s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 39 LIMIT 1 [ RunTime:0.000427s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000972s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000312s ]
---------------------------------------------------------------
[ 2018-11-06T17:57:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.068997s][吞吐率：14.49req/s] [内存消耗：2,233.14kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000510s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001257s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001472s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000421s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000869s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000427s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000823s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000311s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000410s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000276s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000372s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000850s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000249s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000912s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000642s ]
---------------------------------------------------------------
[ 2018-11-06T17:57:31+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/239.html
[ info ] qingrang.top/daily/admin/note/shownote/id/239.html [运行时间：0.056391s][吞吐率：17.73req/s] [内存消耗：1,984.88kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '239',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000464s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002095s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 239 LIMIT 1 [ RunTime:0.000415s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000939s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000288s ]
---------------------------------------------------------------
[ 2018-11-06T17:57:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/233.html
[ info ] qingrang.top/daily/admin/note/shownote/id/233.html [运行时间：0.056050s][吞吐率：17.84req/s] [内存消耗：2,011.57kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '233',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000531s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001466s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 233 LIMIT 1 [ RunTime:0.000503s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000975s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000362s ]
---------------------------------------------------------------
[ 2018-11-06T17:58:32+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.087403s][吞吐率：11.44req/s] [内存消耗：2,233.40kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=7lfjrh6t6onvtappt4b13gl047',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000544s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001241s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001452s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000531s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000894s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000336s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000504s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000858s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000287s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000379s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000307s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000387s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000953s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000253s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001093s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000742s ]
---------------------------------------------------------------
[ 2018-11-06T17:59:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.036502s][吞吐率：27.40req/s] [内存消耗：1,339.90kb] [文件加载：47]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/login/index.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-11-06T17:59:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.062078s][吞吐率：16.11req/s] [内存消耗：1,922.46kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'pwd' => 'shao',
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000477s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001188s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000384s ]
---------------------------------------------------------------
[ 2018-11-06T17:59:37+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.096248s][吞吐率：10.39req/s] [内存消耗：2,233.99kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000452s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001283s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001526s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000452s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001004s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000306s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000595s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000926s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000272s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000432s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000395s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001068s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000252s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001053s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000857s ]
---------------------------------------------------------------
[ 2018-11-06T17:59:39+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.055195s][吞吐率：18.12req/s] [内存消耗：2,147.90kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '0',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000463s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001187s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 0  AND `id` > 2 ORDER BY date desc [ RunTime:0.001090s ]
---------------------------------------------------------------
[ 2018-11-06T17:59:41+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/passdaily.html
[ info ] qingrang.top/daily/admin/login/passdaily.html [运行时间：0.053073s][吞吐率：18.84req/s] [内存消耗：1,903.64kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'passdaily',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '13',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'password' => 'shao',
)
[ info ] [ RUN ] app\admin\controller\Login->passDaily[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000501s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.002193s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000372s ]
---------------------------------------------------------------
[ 2018-11-06T17:59:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/dailylist/dailylist.html
[ info ] qingrang.top/daily/admin/dailylist/dailylist.html [运行时间：0.071487s][吞吐率：13.99req/s] [内存消耗：2,211.27kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'dailylist',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->dailylist[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/dailylist/dailylist.html [ array (
  0 => 'list',
  1 => 'count',
  2 => 'hide',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000678s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001330s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000501s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.000951s ]
[ sql ] [ SQL ] SELECT * FROM `dailylist` ORDER BY id desc [ RunTime:0.001802s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `dailylist` LIMIT 1 [ RunTime:0.000293s ]
---------------------------------------------------------------
[ 2018-11-06T17:59:45+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/dailylist/newdaily.html
[ info ] qingrang.top/daily/admin/dailylist/newdaily.html [运行时间：0.038191s][吞吐率：26.18req/s] [内存消耗：1,405.27kb] [文件加载：49]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'newdaily',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/dailylist.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->newDaily[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/dailylist/newdailylist.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-11-06T18:00:00+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/dailylist/adddaily.html
[ info ] qingrang.top/daily/admin/dailylist/adddaily.html [运行时间：0.085829s][吞吐率：11.65req/s] [内存消耗：2,005.53kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'adddaily',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '7213',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/newdaily.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 要重头再来吗？
这么长时间以来，尽管卷面成绩还过得去，老师对我的评价也算不错，同学也觉得我是大神，也算是做了几个项目。但只有自己才知道我到底有多水，感觉大多数时候都是在百度，在复制粘贴，若要自己真真切切的手写代码，估计很难。

究其原因，自己的基本功太不扎实了，地基不稳，尽管楼建的起来，但一碰就倒。

我有想过重头再来，但一看，又有很多都是已经会的了，若再学一遍就很浪费时间，感觉很蠢。

唉......一看懂完了，一做两眼一抹黑。

算了，蠢就蠢吧，勤能补拙，就算重头再来又有啥子怕的，总比第一次学的时候要好的多吧，正好这次机会好好夯实下自己的地基。
![压抑的图书馆](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_151735.jpg)*压抑的图书馆*

再说了，花了那么多钱呢，知识付费，学的肚子里的才是知识，要把这个钱挣回来才行！！！
![压抑的图书馆](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/Screenshot_2018-11-06-15-18-40-100.png)

试一试，就算重头再来又要多久？又能得到多少？',
  'test-editormd-html-code' => '<h1 id="h1--"><a name="要重头再来吗？" class="reference-link"></a><span class="header-link octicon octicon-link"></span>要重头再来吗？</h1><p>这么长时间以来，尽管卷面成绩还过得去，老师对我的评价也算不错，同学也觉得我是大神，也算是做了几个项目。但只有自己才知道我到底有多水，感觉大多数时候都是在百度，在复制粘贴，若要自己真真切切的手写代码，估计很难。</p>
<p>究其原因，自己的基本功太不扎实了，地基不稳，尽管楼建的起来，但一碰就倒。</p>
<p>我有想过重头再来，但一看，又有很多都是已经会的了，若再学一遍就很浪费时间，感觉很蠢。</p>
<p>唉……一看懂完了，一做两眼一抹黑。</p>
<p>算了，蠢就蠢吧，勤能补拙，就算重头再来又有啥子怕的，总比第一次学的时候要好的多吧，正好这次机会好好夯实下自己的地基。<br><img src="https://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_151735.jpg" alt="压抑的图书馆"><em>压抑的图书馆</em></p>
<p>再说了，花了那么多钱呢，知识付费，学的肚子里的才是知识，要把这个钱挣回来才行！！！<br><img src="https://daily-1252869435.cos.ap-chengdu.myqcloud.com/Screenshot_2018-11-06-15-18-40-100.png" alt="压抑的图书馆"></p>
<p>试一试，就算重头再来又要多久？又能得到多少？</p>
',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->addDaily[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000665s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.001273s ]
[ sql ] [ SQL ] INSERT INTO `dailylist` (`title` , `content` , `date` , `modified`) VALUES ('要重头再来吗？\r' , '# 要重头再来吗？\r\n这么长时间以来，尽管卷面成绩还过得去，老师对我的评价也算不错，同学也觉得我是大神，也算是做了几个项目。但只有自己才知道我到底有多水，感觉大多数时候都是在百度，在复制粘贴，若要自己真真切切的手写代码，估计很难。\r\n\r\n究其原因，自己的基本功太不扎实了，地基不稳，尽管楼建的起来，但一碰就倒。\r\n\r\n我有想过重头再来，但一看，又有很多都是已经会的了，若再学一遍就很浪费时间，感觉很蠢。\r\n\r\n唉......一看懂完了，一做两眼一抹黑。\r\n\r\n算了，蠢就蠢吧，勤能补拙，就算重头再来又有啥子怕的，总比第一次学的时候要好的多吧，正好这次机会好好夯实下自己的地基。\r\n![压抑的图书馆](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_151735.jpg)*压抑的图书馆*\r\n\r\n再说了，花了那么多钱呢，知识付费，学的肚子里的才是知识，要把这个钱挣回来才行！！！\r\n![压抑的图书馆](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/Screenshot_2018-11-06-15-18-40-100.png)\r\n\r\n试一试，就算重头再来又要多久？又能得到多少？' , '要重头再来吗？\r' , '1541498400') [ RunTime:0.000591s ]
---------------------------------------------------------------
[ 2018-11-06T18:00:01+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/dailylist/dailylist.html
[ info ] qingrang.top/daily/admin/dailylist/dailylist.html [运行时间：0.071551s][吞吐率：13.98req/s] [内存消耗：2,213.36kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'dailylist',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/newdaily.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->dailylist[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/dailylist/dailylist.html [ array (
  0 => 'list',
  1 => 'count',
  2 => 'hide',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000463s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001206s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000349s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT * FROM `dailylist` ORDER BY id desc [ RunTime:0.001044s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `dailylist` LIMIT 1 [ RunTime:0.000280s ]
---------------------------------------------------------------
[ 2018-11-06T18:00:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/dailylist/newdaily.html
[ info ] qingrang.top/daily/admin/dailylist/newdaily.html [运行时间：0.092127s][吞吐率：10.85req/s] [内存消耗：1,405.27kb] [文件加载：49]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'newdaily',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/dailylist.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->newDaily[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/dailylist/newdailylist.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-11-06T18:00:12+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/dailylist/adddaily.html
[ info ] qingrang.top/daily/admin/dailylist/adddaily.html [运行时间：0.052970s][吞吐率：18.88req/s] [内存消耗：1,992.67kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'adddaily',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '2443',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/newdaily.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 哈哈哈，宝藏女孩
哈哈哈，原来世界如此之小，谁能想到她 vip 班上的同学和寝室的同学都认识，大家知根知底她还当面说瞎话。今天寝室 4 个人可是把肖义娟翻了个底朝天，果然是宝藏女孩。满口胡话，一个人一个说辞，自以为把所有人都骗了，结果，哈哈哈，翻车了吧。',
  'test-editormd-html-code' => '<h1 id="h1--"><a name="哈哈哈，宝藏女孩" class="reference-link"></a><span class="header-link octicon octicon-link"></span>哈哈哈，宝藏女孩</h1><p>哈哈哈，原来世界如此之小，谁能想到她 vip 班上的同学和寝室的同学都认识，大家知根知底她还当面说瞎话。今天寝室 4 个人可是把肖义娟翻了个底朝天，果然是宝藏女孩。满口胡话，一个人一个说辞，自以为把所有人都骗了，结果，哈哈哈，翻车了吧。</p>
',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->addDaily[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000554s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.001395s ]
[ sql ] [ SQL ] INSERT INTO `dailylist` (`title` , `content` , `date` , `modified`) VALUES ('哈哈哈，宝藏女孩\r' , '# 哈哈哈，宝藏女孩\r\n哈哈哈，原来世界如此之小，谁能想到她 vip 班上的同学和寝室的同学都认识，大家知根知底她还当面说瞎话。今天寝室 4 个人可是把肖义娟翻了个底朝天，果然是宝藏女孩。满口胡话，一个人一个说辞，自以为把所有人都骗了，结果，哈哈哈，翻车了吧。' , '哈哈哈，宝藏女孩\r' , '1541498412') [ RunTime:0.000482s ]
---------------------------------------------------------------
[ 2018-11-06T18:00:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/dailylist/dailylist.html
[ info ] qingrang.top/daily/admin/dailylist/dailylist.html [运行时间：0.069310s][吞吐率：14.43req/s] [内存消耗：2,214.51kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'dailylist',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/newdaily.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->dailylist[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/dailylist/dailylist.html [ array (
  0 => 'list',
  1 => 'count',
  2 => 'hide',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000559s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001297s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000404s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.000925s ]
[ sql ] [ SQL ] SELECT * FROM `dailylist` ORDER BY id desc [ RunTime:0.001110s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `dailylist` LIMIT 1 [ RunTime:0.000256s ]
---------------------------------------------------------------
[ 2018-11-06T18:02:12+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/dailylist/dailylist.html
[ info ] qingrang.top/daily/admin/dailylist/dailylist.html [运行时间：0.071366s][吞吐率：14.01req/s] [内存消耗：2,214.50kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'dailylist',
    2 => 'dailylist',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/newdaily.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Dailylist->dailylist[ /var/www/html/daily/application/admin/controller/Dailylist.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/dailylist/dailylist.html [ array (
  0 => 'list',
  1 => 'count',
  2 => 'hide',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000531s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001225s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000380s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.000994s ]
[ sql ] [ SQL ] SELECT * FROM `dailylist` ORDER BY id desc [ RunTime:0.001035s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `dailylist` LIMIT 1 [ RunTime:0.000321s ]
---------------------------------------------------------------
[ 2018-11-06T18:02:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/notelst.html
[ info ] qingrang.top/daily/admin/note/notelst.html [运行时间：0.062828s][吞吐率：15.92req/s] [内存消耗：2,233.60kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'notelst',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/dailylist/dailylist.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=d2e98po9dnlfvaam1ckahe1sk5',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000463s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001148s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001328s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000404s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000924s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000450s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000837s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000283s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000824s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000244s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001021s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000606s ]
---------------------------------------------------------------
[ 2018-11-06T18:03:33+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/api/synAndroid
[ info ] qingrang.top/daily/admin/api/synAndroid [运行时间：0.081077s][吞吐率：12.33req/s] [内存消耗：2,266.48kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'api',
    2 => 'synAndroid',
  ),
)
[ info ] [ HEADER ] array (
  'accept' => 'application/json,application/xml,application/xhtml+xml,text/html;q=0.9,image/webp,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh',
  'connection' => 'keep-alive',
  'content-type' => 'application/x-www-form-urlencoded; charset=utf-8',
  'user-agent' => 'Mozilla/5.0 (Linux; U; Android 8.1.0; zh-cn; OE106 Build/OPM1.171019.026) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
  'host' => 'qingrang.top',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Api->synAndroid[ /var/www/html/daily/application/admin/controller/Api.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000645s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `dailylist` [ RunTime:0.001870s ]
[ sql ] [ SQL ] SELECT * FROM `dailylist` ORDER BY `id` [ RunTime:0.001818s ]
---------------------------------------------------------------
[ 2018-11-06T18:03:41+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/api/synTemp?content=%E4%B8%B4%E6%97%B6%E7%AC%94%E8%AE%B0
[ info ] qingrang.top/daily/admin/api/synTemp?content=%E4%B8%B4%E6%97%B6%E7%AC%94%E8%AE%B0 [运行时间：0.052244s][吞吐率：19.14req/s] [内存消耗：1,982.89kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'api',
    2 => 'synTemp',
  ),
)
[ info ] [ HEADER ] array (
  'accept' => 'application/json,application/xml,application/xhtml+xml,text/html;q=0.9,image/webp,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh',
  'connection' => 'keep-alive',
  'content-type' => 'application/json; charset=utf-8',
  'user-agent' => 'Mozilla/5.0 (Linux; U; Android 8.1.0; zh-cn; OE106 Build/OPM1.171019.026) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30',
  'content-length' => '17',
  'host' => 'qingrang.top',
)
[ info ] [ PARAM ] array (
  'content' => '临时笔记',
  'type' => 'json',
)
[ info ] [ RUN ] app\admin\controller\Api->synTemp[ /var/www/html/daily/application/admin/controller/Api.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000480s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001334s ]
[ sql ] [ SQL ] UPDATE `note`  SET `content`='临时笔记'  WHERE  `id` = 2 [ RunTime:0.000497s ]
---------------------------------------------------------------
[ 2018-11-06T18:04:10+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.034560s][吞吐率：28.94req/s] [内存消耗：1,339.90kb] [文件加载：47]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/login/index.html [ array (
) ]
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-11-06T18:04:21+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/login/index.html
[ info ] qingrang.top/daily/admin/login/index.html [运行时间：0.054433s][吞吐率：18.37req/s] [内存消耗：1,922.46kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'login',
    2 => 'index',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'pwd' => 'shao',
)
[ info ] [ RUN ] app\admin\controller\Login->index[ /var/www/html/daily/application/admin/controller/Login.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000531s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `admin` [ RunTime:0.001529s ]
[ sql ] [ SQL ] SELECT * FROM `admin` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000425s ]
---------------------------------------------------------------
[ 2018-11-06T18:04:22+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.071421s][吞吐率：14.00req/s] [内存消耗：2,233.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000500s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001278s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001508s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000415s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001155s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000384s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000476s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000870s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000289s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000432s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000318s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000451s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000848s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000235s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001021s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000758s ]
---------------------------------------------------------------
[ 2018-11-06T18:04:26+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.055839s][吞吐率：17.91req/s] [内存消耗：2,427.93kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000454s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001459s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 21  AND `id` > 2 ORDER BY date desc [ RunTime:0.001754s ]
---------------------------------------------------------------
[ 2018-11-06T18:04:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/shownote/id/226
[ info ] qingrang.top/daily/admin/shownote/id/226 [运行时间：0.058886s][吞吐率：16.98req/s] [内存消耗：1,357.84kb] [文件加载：48]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'shownote',
    2 => 'id',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-11-06T18:04:40+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/226
[ info ] qingrang.top/daily/admin/note/shownote/id/226 [运行时间：0.055822s][吞吐率：17.91req/s] [内存消耗：2,012.71kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '226',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000550s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001315s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 226 LIMIT 1 [ RunTime:0.000465s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001011s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000430s ]
---------------------------------------------------------------
[ 2018-11-06T18:06:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/shownote/id/68
[ info ] qingrang.top/daily/admin/shownote/id/68 [运行时间：0.038550s][吞吐率：25.94req/s] [内存消耗：1,357.60kb] [文件加载：48]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'shownote',
    2 => 'id',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ LOG ] INIT File
---------------------------------------------------------------
[ 2018-11-06T18:06:19+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.076856s][吞吐率：13.01req/s] [内存消耗：2,408.39kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000612s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001221s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001418s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000429s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000890s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000417s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000477s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001039s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000266s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000365s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000276s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000467s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000904s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000221s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000969s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000622s ]
---------------------------------------------------------------
[ 2018-11-06T18:06:21+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.061141s][吞吐率：16.36req/s] [内存消耗：2,427.93kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000535s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002195s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 21  AND `id` > 2 ORDER BY date desc [ RunTime:0.001963s ]
---------------------------------------------------------------
[ 2018-11-06T18:06:24+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/202
[ info ] qingrang.top/daily/admin/note/shownote/id/202 [运行时间：0.057045s][吞吐率：17.53req/s] [内存消耗：1,986.25kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '202',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000419s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001724s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 202 LIMIT 1 [ RunTime:0.000510s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000949s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000345s ]
---------------------------------------------------------------
[ 2018-11-06T18:06:28+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.054232s][吞吐率：18.44req/s] [内存消耗：2,172.42kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '23',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'DesignPattern',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001679s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'DesignPattern' ORDER BY date desc [ RunTime:0.001087s ]
---------------------------------------------------------------
[ 2018-11-06T18:06:29+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/237
[ info ] qingrang.top/daily/admin/note/shownote/id/237 [运行时间：0.059485s][吞吐率：16.81req/s] [内存消耗：1,989.50kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '237',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000758s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001286s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 237 LIMIT 1 [ RunTime:0.000490s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001092s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000434s ]
---------------------------------------------------------------
[ 2018-11-06T18:06:38+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.071511s][吞吐率：13.98req/s] [内存消耗：2,233.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001199s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001852s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000549s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001021s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000346s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000515s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001019s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000323s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000441s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000369s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000857s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000238s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000997s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000601s ]
---------------------------------------------------------------
[ 2018-11-06T18:19:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.079268s][吞吐率：12.62req/s] [内存消耗：2,233.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/login/index.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000723s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001443s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001387s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000531s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000962s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000320s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000454s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000912s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000295s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000346s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001244s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000266s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001317s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000710s ]
---------------------------------------------------------------
[ 2018-11-06T22:08:23+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.069819s][吞吐率：14.32req/s] [内存消耗：2,203.38kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '7',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => 'pom',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000939s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001757s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%pom%' OR `content` LIKE '%pom%' ) ORDER BY date desc [ RunTime:0.010080s ]
---------------------------------------------------------------
[ 2018-11-06T22:08:27+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.057464s][吞吐率：17.40req/s] [内存消耗：2,129.25kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '234',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000659s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001745s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 234 LIMIT 1 [ RunTime:0.000568s ]
---------------------------------------------------------------
[ 2018-11-06T22:08:31+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.054737s][吞吐率：18.27req/s] [内存消耗：2,133.66kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '236',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000616s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001376s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 236 LIMIT 1 [ RunTime:0.000502s ]
---------------------------------------------------------------
[ 2018-11-06T22:08:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/236
[ info ] qingrang.top/daily/admin/note/shownote/id/236 [运行时间：0.057579s][吞吐率：17.37req/s] [内存消耗：1,986.40kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '236',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000609s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001550s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 236 LIMIT 1 [ RunTime:0.000451s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000884s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000332s ]
---------------------------------------------------------------
[ 2018-11-06T22:28:53+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote1.html
[ info ] qingrang.top/daily/admin/note/ashownote1.html [运行时间：0.072411s][吞吐率：13.81req/s] [内存消耗：2,427.93kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote1',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupsID' => '21',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote1[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001154s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.003229s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `p_id` = 21  AND `id` > 2 ORDER BY date desc [ RunTime:0.002587s ]
---------------------------------------------------------------
[ 2018-11-06T22:28:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.062657s][吞吐率：15.96req/s] [内存消耗：2,011.54kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000629s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001966s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000697s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001097s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000389s ]
---------------------------------------------------------------
[ 2018-11-06T22:28:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/1.html
[ info ] qingrang.top/daily/admin/note/editnote/id/1.html [运行时间：0.064012s][吞吐率：15.62req/s] [内存消耗：2,059.87kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000651s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002001s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000508s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000928s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000349s ]
---------------------------------------------------------------
[ 2018-11-06T22:39:48+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.076611s][吞吐率：13.05req/s] [内存消耗：2,233.14kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000684s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001444s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001715s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000462s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000926s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000344s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000506s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000997s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000271s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000478s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000430s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000395s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001075s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000244s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001340s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000662s ]
---------------------------------------------------------------
[ 2018-11-06T22:39:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.056066s][吞吐率：17.84req/s] [内存消耗：2,020.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000544s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001204s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000382s ]
---------------------------------------------------------------
[ 2018-11-06T22:39:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.071194s][吞吐率：14.05req/s] [内存消耗：2,233.14kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000479s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001224s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001761s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000461s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000950s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000319s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000506s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000929s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000290s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000470s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000391s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001047s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000225s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001058s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000669s ]
---------------------------------------------------------------
[ 2018-11-06T22:39:57+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.053443s][吞吐率：18.71req/s] [内存消耗：2,319.09kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '14',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Java',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000573s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001221s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Java' ORDER BY date desc [ RunTime:0.001532s ]
---------------------------------------------------------------
[ 2018-11-06T22:40:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/232
[ info ] qingrang.top/daily/admin/note/editNote/id/232 [运行时间：0.074275s][吞吐率：13.46req/s] [内存消耗：2,027.91kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '232',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000898s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001927s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000584s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001507s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.001239s ]
---------------------------------------------------------------
[ 2018-11-06T22:41:12+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/232.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/232.html [运行时间：0.063406s][吞吐率：15.77req/s] [内存消耗：2,048.60kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '482',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/232',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Mybatis
## Mybatis 体系结构和工作原理
![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)

![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '232',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000490s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001344s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000374s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000930s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000315s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000312s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=232,`p_id`=2,`title`='Mybatis\r',`content`='# Mybatis\r\n## Mybatis 体系结构和工作原理\r\n![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)\r\n\r\n![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 232 [ RunTime:0.000635s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000975s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000351s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000804s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000324s ]
---------------------------------------------------------------
[ 2018-11-06T22:41:12+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/232.html
[ info ] qingrang.top/daily/admin/note/shownote/id/232.html [运行时间：0.067195s][吞吐率：14.88req/s] [内存消耗：1,980.11kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/232',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '232',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000577s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001457s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000455s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000901s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000280s ]
---------------------------------------------------------------
[ 2018-11-06T22:41:30+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/232.html
[ info ] qingrang.top/daily/admin/note/editnote/id/232.html [运行时间：0.086772s][吞吐率：11.52req/s] [内存消耗：2,027.64kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '232',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000861s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001960s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000427s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001047s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000342s ]
---------------------------------------------------------------
[ 2018-11-06T22:41:38+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/delnote/id/232
[ info ] qingrang.top/daily/admin/note/delnote/id/232 [运行时间：0.073121s][吞吐率：13.68req/s] [内存消耗：2,048.04kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'delnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '232',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->delNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000546s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001682s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000386s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 232 LIMIT 1 [ RunTime:0.000295s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note_del` [ RunTime:0.001405s ]
[ sql ] [ SQL ] INSERT INTO `note_del` (`id` , `title` , `summary` , `content` , `date` , `groups` , `p_id` , `is_show` , `publish`) VALUES (232 , 'Mybatis\r' , '' , '# Mybatis\r\n## Mybatis 体系结构和工作原理\r\n![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)\r\n\r\n![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)' , '2018-10-26' , 'Java' , 2 , 1 , 1) [ RunTime:0.000577s ]
[ sql ] [ SQL ] DELETE FROM `note`    WHERE  `id` = 232 [ RunTime:0.000476s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000890s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001044s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=14  WHERE  `groups` = 'Java' [ RunTime:0.000514s ]
---------------------------------------------------------------
[ 2018-11-06T22:41:40+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.074344s][吞吐率：13.45req/s] [内存消耗：2,233.59kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000499s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001220s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001778s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000450s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000958s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000444s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000863s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000268s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000415s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000382s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001090s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000328s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001032s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000738s ]
---------------------------------------------------------------
[ 2018-11-06T22:41:43+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.052609s][吞吐率：19.01req/s] [内存消耗：2,020.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000494s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001933s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000311s ]
---------------------------------------------------------------
[ 2018-11-06T22:42:08+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.055196s][吞吐率：18.12req/s] [内存消耗：1,979.99kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '1675',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Java',
  'content' => '# Mybatis
## Mybatis 体系结构和工作原理
![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*

![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)*Mybatis 体系结构和工作原理*',
  'test-editormd-html-code' => '<h1 id="h1-mybatis"><a name="Mybatis" class="reference-link"></a><span class="header-link octicon octicon-link"></span>Mybatis</h1><h2 id="h2-mybatis-"><a name="Mybatis 体系结构和工作原理" class="reference-link"></a><span class="header-link octicon octicon-link"></span>Mybatis 体系结构和工作原理</h2><p><img src="https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png" alt="原理图"><em>原理图</em></p>
<p><img src="http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg" alt="Mybatis 体系结构和工作原理"><em>Mybatis 体系结构和工作原理</em></p>
',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000533s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001203s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000364s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000325s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000979s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('Mybatis\r' , '# Mybatis\r\n## Mybatis 体系结构和工作原理\r\n![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*\r\n\r\n![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)*Mybatis 体系结构和工作原理*' , 'Java' , 2 , '2018-11-06') [ RunTime:0.000375s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000916s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000374s ]
---------------------------------------------------------------
[ 2018-11-06T22:42:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.075990s][吞吐率：13.16req/s] [内存消耗：2,224.08kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000532s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001346s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001471s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000430s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001386s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000363s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000442s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000904s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000275s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000423s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000280s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000354s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000821s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000241s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001409s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.001655s ]
---------------------------------------------------------------
[ 2018-11-06T22:42:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/243.html
[ info ] qingrang.top/daily/admin/note/editnote/id/243.html [运行时间：0.051353s][吞吐率：19.47req/s] [内存消耗：2,028.10kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000438s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001357s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000385s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001372s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000579s ]
---------------------------------------------------------------
[ 2018-11-06T22:42:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/243.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/243.html [运行时间：0.062308s][吞吐率：16.05req/s] [内存消耗：2,049.22kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '602',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/243.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Mybatis
## Mybatis 体系结构和工作原理
![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*

![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)*Mybatis 体系结构和工作原理*',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000567s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001283s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000522s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000315s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001034s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000322s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000303s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=243,`p_id`=2,`title`='Mybatis\r',`content`='# Mybatis\r\n## Mybatis 体系结构和工作原理\r\n![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*\r\n\r\n![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)*Mybatis 体系结构和工作原理*',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 243 [ RunTime:0.000651s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001045s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000316s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001005s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000311s ]
---------------------------------------------------------------
[ 2018-11-06T22:42:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/243.html
[ info ] qingrang.top/daily/admin/note/shownote/id/243.html [运行时间：0.059629s][吞吐率：16.77req/s] [内存消耗：1,980.07kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/243.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000435s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001382s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000500s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000947s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000478s ]
---------------------------------------------------------------
[ 2018-11-06T22:47:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/243.html
[ info ] qingrang.top/daily/admin/note/editnote/id/243.html [运行时间：0.061972s][吞吐率：16.14req/s] [内存消耗：2,027.72kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000652s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.002089s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000774s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001440s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000585s ]
---------------------------------------------------------------
[ 2018-11-06T22:50:45+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/243.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/243.html [运行时间：0.068369s][吞吐率：14.63req/s] [内存消耗：2,050.27kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '907',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/243.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Mybatis
## Mybatis 体系结构和工作原理
![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*

![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-2.png)*Mybatis 体系结构*

![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)*Mybatis 体系结构和工作原理*

![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-3.png)*Mybatis工作原理*',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000500s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001669s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000479s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000318s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000846s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000405s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000554s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=243,`p_id`=2,`title`='Mybatis\r',`content`='# Mybatis\r\n## Mybatis 体系结构和工作原理\r\n![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*\r\n\r\n![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-2.png)*Mybatis 体系结构*\r\n\r\n![Mybatis 体系结构和工作原理](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06_200028.jpg)*Mybatis 体系结构和工作原理*\r\n\r\n![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-3.png)*Mybatis工作原理*',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 243 [ RunTime:0.000612s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001041s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000874s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000312s ]
---------------------------------------------------------------
[ 2018-11-06T22:50:46+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/243.html
[ info ] qingrang.top/daily/admin/note/shownote/id/243.html [运行时间：0.053360s][吞吐率：18.74req/s] [内存消耗：1,980.29kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/243.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000440s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001300s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000402s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000851s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000335s ]
---------------------------------------------------------------
[ 2018-11-06T22:51:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/243.html
[ info ] qingrang.top/daily/admin/note/editnote/id/243.html [运行时间：0.055100s][吞吐率：18.15req/s] [内存消耗：2,027.91kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000513s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001384s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000399s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000873s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000272s ]
---------------------------------------------------------------
[ 2018-11-06T22:52:44+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/243.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/243.html [运行时间：0.062663s][吞吐率：15.96req/s] [内存消耗：2,049.23kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '619',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/243.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Mybatis
## Mybatis 体系结构和工作原理
![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*

![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-2.png)*Mybatis 体系结构*

![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-3.png)*Mybatis工作原理*',
  'groups' => 'Java',
  'showsel' => '1',
  'showse2' => '1',
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000559s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001357s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000422s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000385s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000323s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000302s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=243,`p_id`=2,`title`='Mybatis\r',`content`='# Mybatis\r\n## Mybatis 体系结构和工作原理\r\n![原理图](https://daily-1252869435.cos.ap-chengdu.myqcloud.com/B5G3lA8d1A.png)*原理图*\r\n\r\n![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-2.png)*Mybatis 体系结构*\r\n\r\n![mark](http://daily-1252869435.cos.ap-chengdu.myqcloud.com/2018-11-06-3.png)*Mybatis工作原理*',`groups`='Java',`is_show`=1,`publish`=1,`summary`=''  WHERE  `id` = 243 [ RunTime:0.000577s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000917s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000897s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=15  WHERE  `groups` = 'Java' [ RunTime:0.000302s ]
---------------------------------------------------------------
[ 2018-11-06T22:52:45+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/243.html
[ info ] qingrang.top/daily/admin/note/shownote/id/243.html [运行时间：0.052449s][吞吐率：19.07req/s] [内存消耗：1,980.13kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/243.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '243',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000433s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001235s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 243 LIMIT 1 [ RunTime:0.000385s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001032s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000404s ]
---------------------------------------------------------------
[ 2018-11-06T22:56:45+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.049190s][吞吐率：20.33req/s] [内存消耗：2,020.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000641s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001292s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000305s ]
---------------------------------------------------------------
[ 2018-11-06T23:02:22+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.061346s][吞吐率：16.30req/s] [内存消耗：2,035.24kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '20205',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Java',
  'content' => '# 腾讯 COS 的文件操作 - Java 实现
## 添加 Maven 依赖
```
<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.11</version>
	<scope>test</scope>
</dependency>

<dependency>
	<groupId>com.qcloud</groupId>
	<artifactId>cos_api</artifactId>
	<version>5.2.4</version>
</dependency>
```
## 文件操作类
```
package top.qingrang;

import com.qcloud.cos.COSClient;
import com.qcloud.cos.ClientConfig;
import com.qcloud.cos.auth.BasicCOSCredentials;
import com.qcloud.cos.auth.COSCredentials;
import com.qcloud.cos.model.GetObjectRequest;
import com.qcloud.cos.model.PutObjectRequest;
import com.qcloud.cos.region.Region;
import com.qcloud.cos.transfer.Download;
import com.qcloud.cos.transfer.TransferManager;
import com.qcloud.cos.transfer.Upload;
import java.io.File;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * 腾讯 COS
 * 文件的上传，下载，删除
 */
public class App {
	static String bucketName = "daily"; //桶的名称
//	static String key = "/2018-11-06_200028.jpg";         //上传到云上路径
	static String region = "ap-chengdu";//区域成都
	static String appId = "1252869435"; //APPID
	static COSCredentials cred = null;
	static TransferManager transferManager = null;
	static COSClient cosClient = null;
	static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm ss");

	static {
		// 1 初始化用户身份信息(secretId, secretKey)
		String SecretId = "XXXXXXX"; //SecretId 是用于标识 API 调用者的身份
		String SecretKey = "XXXXXXX"; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥
		cred = new BasicCOSCredentials(SecretId, SecretKey);

		// 2 设置bucket的区域,
		ClientConfig clientConfig = new ClientConfig(new Region(region));
		// 3 生成cos客户端
		cosClient = new COSClient(cred, clientConfig);
		// 指定要上传到 COS 上的路径
		ExecutorService threadPool = Executors.newFixedThreadPool(32);
		// 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。
		transferManager = new TransferManager(cosClient, threadPool);
	}

	public static void main(String[] args) {
		String name = "2018-11-06-2.png";
		String ikey = "/" + name;
		String path = "C:\\\\Users\\\\123\\\\Desktop\\\\" + name;

		//上传
		upload(key,path);

		cosClient.shutdown();
	}

	/**
	 * 上传，重复则覆盖
	 */
	public static void upload(final String key, final String path) {
		new Thread(new Runnable() {
			public void run() {
				try {
					System.out.println("上传开始时间:" + sdf.format(new Date()));
					// .....(提交上传下载请求, 如下文所属)
					// bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式
					String bucket = bucketName + "-" + appId;
					//本地文件路径
					File localFile = new File(path);
					PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);
					// 本地文件上传
					Upload upload = transferManager.upload(putObjectRequest);
					// 异步（如果想等待传输结束，则调用 waitForUploadResult）
					//UploadResult uploadResult = upload.waitForUploadResult();
					//同步的等待上传结束waitForCompletion
					upload.waitForCompletion();
					System.out.println("上传结束时间:" + sdf.format(new Date()));
					System.out.println("上传成功");
					//获取上传成功之后文件的下载地址
					URL url = cosClient.generatePresignedUrl(bucketName + "-" + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));
					System.out.println(url);
				} catch (Throwable tb) {
					System.out.println("上传失败");
					tb.printStackTrace();
				} finally {
					// 关闭 TransferManger
					transferManager.shutdownNow();
				}
			}
		}).start();
	}

	/**
	 * 下载
	 */
	public static void download(String key) {
		try {
			//下载到本地指定路径
			File localDownFile = new File("src/test/resources/download.pdf");
			GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + "-" + appId, key);
			// 下载文件
			Download download = transferManager.download(getObjectRequest, localDownFile);
			// 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）
			download.waitForCompletion();
			System.out.println("下载成功");
		} catch (Throwable tb) {
			System.out.println("下载失败");
			tb.printStackTrace();
		} finally {
			// 关闭 TransferManger
			transferManager.shutdownNow();
		}
	}

	/**
	 * 删除
	 */
	public static void delete(final String key) {
		new Thread(new Runnable() {
			public void run() {
				// 指定要删除的 bucket 和路径
				try {
					cosClient.deleteObject(bucketName + "-" + appId, key);
					System.out.println("删除成功");
				} catch (Throwable tb) {
					System.out.println("删除文件失败");
					tb.printStackTrace();
				}
			}
		}).start();
	}
}
```',
  'test-editormd-html-code' => '<h1 id="h1--cos-java-"><a name="腾讯 COS 的文件操作 - Java 实现" class="reference-link"></a><span class="header-link octicon octicon-link"></span>腾讯 COS 的文件操作 - Java 实现</h1><h2 id="h2--maven-"><a name="添加 Maven 依赖" class="reference-link"></a><span class="header-link octicon octicon-link"></span>添加 Maven 依赖</h2><pre><code>&lt;dependency&gt;
    &lt;groupId&gt;junit&lt;/groupId&gt;
    &lt;artifactId&gt;junit&lt;/artifactId&gt;
    &lt;version&gt;4.11&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;com.qcloud&lt;/groupId&gt;
    &lt;artifactId&gt;cos_api&lt;/artifactId&gt;
    &lt;version&gt;5.2.4&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><h2 id="h2-u6587u4EF6u64CDu4F5Cu7C7B"><a name="文件操作类" class="reference-link"></a><span class="header-link octicon octicon-link"></span>文件操作类</h2><pre><code>package top.qingrang;

import com.qcloud.cos.COSClient;
import com.qcloud.cos.ClientConfig;
import com.qcloud.cos.auth.BasicCOSCredentials;
import com.qcloud.cos.auth.COSCredentials;
import com.qcloud.cos.model.GetObjectRequest;
import com.qcloud.cos.model.PutObjectRequest;
import com.qcloud.cos.region.Region;
import com.qcloud.cos.transfer.Download;
import com.qcloud.cos.transfer.TransferManager;
import com.qcloud.cos.transfer.Upload;
import java.io.File;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * 腾讯 COS
 * 文件的上传，下载，删除
 */
public class App {
    static String bucketName = &quot;daily&quot;; //桶的名称
//    static String key = &quot;/2018-11-06_200028.jpg&quot;;         //上传到云上路径
    static String region = &quot;ap-chengdu&quot;;//区域成都
    static String appId = &quot;1252869435&quot;; //APPID
    static COSCredentials cred = null;
    static TransferManager transferManager = null;
    static COSClient cosClient = null;
    static SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm ss&quot;);

    static {
        // 1 初始化用户身份信息(secretId, secretKey)
        String SecretId = &quot;XXXXXXX&quot;; //SecretId 是用于标识 API 调用者的身份
        String SecretKey = &quot;XXXXXXX&quot;; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥
        cred = new BasicCOSCredentials(SecretId, SecretKey);

        // 2 设置bucket的区域,
        ClientConfig clientConfig = new ClientConfig(new Region(region));
        // 3 生成cos客户端
        cosClient = new COSClient(cred, clientConfig);
        // 指定要上传到 COS 上的路径
        ExecutorService threadPool = Executors.newFixedThreadPool(32);
        // 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。
        transferManager = new TransferManager(cosClient, threadPool);
    }

    public static void main(String[] args) {
        String name = &quot;2018-11-06-2.png&quot;;
        String ikey = &quot;/&quot; + name;
        String path = &quot;C:\\\\Users\\\\123\\\\Desktop\\\\&quot; + name;

        //上传
        upload(key,path);

        cosClient.shutdown();
    }

    /**
     * 上传，重复则覆盖
     */
    public static void upload(final String key, final String path) {
        new Thread(new Runnable() {
            public void run() {
                try {
                    System.out.println(&quot;上传开始时间:&quot; + sdf.format(new Date()));
                    // .....(提交上传下载请求, 如下文所属)
                    // bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式
                    String bucket = bucketName + &quot;-&quot; + appId;
                    //本地文件路径
                    File localFile = new File(path);
                    PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);
                    // 本地文件上传
                    Upload upload = transferManager.upload(putObjectRequest);
                    // 异步（如果想等待传输结束，则调用 waitForUploadResult）
                    //UploadResult uploadResult = upload.waitForUploadResult();
                    //同步的等待上传结束waitForCompletion
                    upload.waitForCompletion();
                    System.out.println(&quot;上传结束时间:&quot; + sdf.format(new Date()));
                    System.out.println(&quot;上传成功&quot;);
                    //获取上传成功之后文件的下载地址
                    URL url = cosClient.generatePresignedUrl(bucketName + &quot;-&quot; + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));
                    System.out.println(url);
                } catch (Throwable tb) {
                    System.out.println(&quot;上传失败&quot;);
                    tb.printStackTrace();
                } finally {
                    // 关闭 TransferManger
                    transferManager.shutdownNow();
                }
            }
        }).start();
    }

    /**
     * 下载
     */
    public static void download(String key) {
        try {
            //下载到本地指定路径
            File localDownFile = new File(&quot;src/test/resources/download.pdf&quot;);
            GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + &quot;-&quot; + appId, key);
            // 下载文件
            Download download = transferManager.download(getObjectRequest, localDownFile);
            // 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）
            download.waitForCompletion();
            System.out.println(&quot;下载成功&quot;);
        } catch (Throwable tb) {
            System.out.println(&quot;下载失败&quot;);
            tb.printStackTrace();
        } finally {
            // 关闭 TransferManger
            transferManager.shutdownNow();
        }
    }

    /**
     * 删除
     */
    public static void delete(final String key) {
        new Thread(new Runnable() {
            public void run() {
                // 指定要删除的 bucket 和路径
                try {
                    cosClient.deleteObject(bucketName + &quot;-&quot; + appId, key);
                    System.out.println(&quot;删除成功&quot;);
                } catch (Throwable tb) {
                    System.out.println(&quot;删除文件失败&quot;);
                    tb.printStackTrace();
                }
            }
        }).start();
    }
}
</code></pre>',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000481s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001324s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000409s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000336s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001068s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('腾讯 COS 的文件操作 - Java 实现\r' , '# 腾讯 COS 的文件操作 - Java 实现\r\n## 添加 Maven 依赖\r\n```\r\n<dependency>\r\n	<groupId>junit</groupId>\r\n	<artifactId>junit</artifactId>\r\n	<version>4.11</version>\r\n	<scope>test</scope>\r\n</dependency>\r\n\r\n<dependency>\r\n	<groupId>com.qcloud</groupId>\r\n	<artifactId>cos_api</artifactId>\r\n	<version>5.2.4</version>\r\n</dependency>\r\n```\r\n## 文件操作类\r\n```\r\npackage top.qingrang;\r\n\r\nimport com.qcloud.cos.COSClient;\r\nimport com.qcloud.cos.ClientConfig;\r\nimport com.qcloud.cos.auth.BasicCOSCredentials;\r\nimport com.qcloud.cos.auth.COSCredentials;\r\nimport com.qcloud.cos.model.GetObjectRequest;\r\nimport com.qcloud.cos.model.PutObjectRequest;\r\nimport com.qcloud.cos.region.Region;\r\nimport com.qcloud.cos.transfer.Download;\r\nimport com.qcloud.cos.transfer.TransferManager;\r\nimport com.qcloud.cos.transfer.Upload;\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\n/**\r\n * 腾讯 COS\r\n * 文件的上传，下载，删除\r\n */\r\npublic class App {\r\n	static String bucketName = \"daily\"; //桶的名称\r\n//	static String key = \"/2018-11-06_200028.jpg\";         //上传到云上路径\r\n	static String region = \"ap-chengdu\";//区域成都\r\n	static String appId = \"1252869435\"; //APPID\r\n	static COSCredentials cred = null;\r\n	static TransferManager transferManager = null;\r\n	static COSClient cosClient = null;\r\n	static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm ss\");\r\n\r\n	static {\r\n		// 1 初始化用户身份信息(secretId, secretKey)\r\n		String SecretId = \"XXXXXXX\"; //SecretId 是用于标识 API 调用者的身份\r\n		String SecretKey = \"XXXXXXX\"; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥\r\n		cred = new BasicCOSCredentials(SecretId, SecretKey);\r\n\r\n		// 2 设置bucket的区域,\r\n		ClientConfig clientConfig = new ClientConfig(new Region(region));\r\n		// 3 生成cos客户端\r\n		cosClient = new COSClient(cred, clientConfig);\r\n		// 指定要上传到 COS 上的路径\r\n		ExecutorService threadPool = Executors.newFixedThreadPool(32);\r\n		// 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。\r\n		transferManager = new TransferManager(cosClient, threadPool);\r\n	}\r\n\r\n	public static void main(String[] args) {\r\n		String name = \"2018-11-06-2.png\";\r\n		String ikey = \"/\" + name;\r\n		String path = \"C:\\\\Users\\\\123\\\\Desktop\\\\\" + name;\r\n\r\n		//上传\r\n		upload(key,path);\r\n\r\n		cosClient.shutdown();\r\n	}\r\n\r\n	/**\r\n	 * 上传，重复则覆盖\r\n	 */\r\n	public static void upload(final String key, final String path) {\r\n		new Thread(new Runnable() {\r\n			public void run() {\r\n				try {\r\n					System.out.println(\"上传开始时间:\" + sdf.format(new Date()));\r\n					// .....(提交上传下载请求, 如下文所属)\r\n					// bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式\r\n					String bucket = bucketName + \"-\" + appId;\r\n					//本地文件路径\r\n					File localFile = new File(path);\r\n					PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);\r\n					// 本地文件上传\r\n					Upload upload = transferManager.upload(putObjectRequest);\r\n					// 异步（如果想等待传输结束，则调用 waitForUploadResult）\r\n					//UploadResult uploadResult = upload.waitForUploadResult();\r\n					//同步的等待上传结束waitForCompletion\r\n					upload.waitForCompletion();\r\n					System.out.println(\"上传结束时间:\" + sdf.format(new Date()));\r\n					System.out.println(\"上传成功\");\r\n					//获取上传成功之后文件的下载地址\r\n					URL url = cosClient.generatePresignedUrl(bucketName + \"-\" + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));\r\n					System.out.println(url);\r\n				} catch (Throwable tb) {\r\n					System.out.println(\"上传失败\");\r\n					tb.printStackTrace();\r\n				} finally {\r\n					// 关闭 TransferManger\r\n					transferManager.shutdownNow();\r\n				}\r\n			}\r\n		}).start();\r\n	}\r\n\r\n	/**\r\n	 * 下载\r\n	 */\r\n	public static void download(String key) {\r\n		try {\r\n			//下载到本地指定路径\r\n			File localDownFile = new File(\"src/test/resources/download.pdf\");\r\n			GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + \"-\" + appId, key);\r\n			// 下载文件\r\n			Download download = transferManager.download(getObjectRequest, localDownFile);\r\n			// 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）\r\n			download.waitForCompletion();\r\n			System.out.println(\"下载成功\");\r\n		} catch (Throwable tb) {\r\n			System.out.println(\"下载失败\");\r\n			tb.printStackTrace();\r\n		} finally {\r\n			// 关闭 TransferManger\r\n			transferManager.shutdownNow();\r\n		}\r\n	}\r\n\r\n	/**\r\n	 * 删除\r\n	 */\r\n	public static void delete(final String key) {\r\n		new Thread(new Runnable() {\r\n			public void run() {\r\n				// 指定要删除的 bucket 和路径\r\n				try {\r\n					cosClient.deleteObject(bucketName + \"-\" + appId, key);\r\n					System.out.println(\"删除成功\");\r\n				} catch (Throwable tb) {\r\n					System.out.println(\"删除文件失败\");\r\n					tb.printStackTrace();\r\n				}\r\n			}\r\n		}).start();\r\n	}\r\n}\r\n```' , 'Java' , 2 , '2018-11-06') [ RunTime:0.000550s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000962s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Java' [ RunTime:0.000413s ]
---------------------------------------------------------------
[ 2018-11-06T23:02:23+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.077852s][吞吐率：12.84req/s] [内存消耗：2,229.26kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000521s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001350s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.001517s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000719s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001654s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000370s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000475s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000903s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000327s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000520s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000321s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000355s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.000842s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000223s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001057s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000589s ]
---------------------------------------------------------------
[ 2018-11-06T23:02:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/244.html
[ info ] qingrang.top/daily/admin/note/editnote/id/244.html [运行时间：0.079768s][吞吐率：12.54req/s] [内存消耗：2,032.95kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '244',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000588s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001696s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000582s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001279s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000373s ]
---------------------------------------------------------------
[ 2018-11-06T23:02:43+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/244.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/244.html [运行时间：0.069103s][吞吐率：14.47req/s] [内存消耗：2,082.69kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '9376',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/244.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# 腾讯 COS 的文件操作(Java 实现)
## 添加 Maven 依赖
```
<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.11</version>
	<scope>test</scope>
</dependency>

<dependency>
	<groupId>com.qcloud</groupId>
	<artifactId>cos_api</artifactId>
	<version>5.2.4</version>
</dependency>
```
## 文件操作类
```
package top.qingrang;

import com.qcloud.cos.COSClient;
import com.qcloud.cos.ClientConfig;
import com.qcloud.cos.auth.BasicCOSCredentials;
import com.qcloud.cos.auth.COSCredentials;
import com.qcloud.cos.model.GetObjectRequest;
import com.qcloud.cos.model.PutObjectRequest;
import com.qcloud.cos.region.Region;
import com.qcloud.cos.transfer.Download;
import com.qcloud.cos.transfer.TransferManager;
import com.qcloud.cos.transfer.Upload;
import java.io.File;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * 腾讯 COS
 * 文件的上传，下载，删除
 */
public class App {
	static String bucketName = "daily"; //桶的名称
//	static String key = "/2018-11-06_200028.jpg";         //上传到云上路径
	static String region = "ap-chengdu";//区域成都
	static String appId = "1252869435"; //APPID
	static COSCredentials cred = null;
	static TransferManager transferManager = null;
	static COSClient cosClient = null;
	static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm ss");

	static {
		// 1 初始化用户身份信息(secretId, secretKey)
		String SecretId = "XXXXXXX"; //SecretId 是用于标识 API 调用者的身份
		String SecretKey = "XXXXXXX"; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥
		cred = new BasicCOSCredentials(SecretId, SecretKey);

		// 2 设置bucket的区域,
		ClientConfig clientConfig = new ClientConfig(new Region(region));
		// 3 生成cos客户端
		cosClient = new COSClient(cred, clientConfig);
		// 指定要上传到 COS 上的路径
		ExecutorService threadPool = Executors.newFixedThreadPool(32);
		// 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。
		transferManager = new TransferManager(cosClient, threadPool);
	}

	public static void main(String[] args) {
		String name = "2018-11-06-2.png";
		String ikey = "/" + name;
		String path = "C:\\\\Users\\\\123\\\\Desktop\\\\" + name;

		//上传
		upload(key,path);

		cosClient.shutdown();
	}

	/**
	 * 上传，重复则覆盖
	 */
	public static void upload(final String key, final String path) {
		new Thread(new Runnable() {
			public void run() {
				try {
					System.out.println("上传开始时间:" + sdf.format(new Date()));
					// .....(提交上传下载请求, 如下文所属)
					// bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式
					String bucket = bucketName + "-" + appId;
					//本地文件路径
					File localFile = new File(path);
					PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);
					// 本地文件上传
					Upload upload = transferManager.upload(putObjectRequest);
					// 异步（如果想等待传输结束，则调用 waitForUploadResult）
					//UploadResult uploadResult = upload.waitForUploadResult();
					//同步的等待上传结束waitForCompletion
					upload.waitForCompletion();
					System.out.println("上传结束时间:" + sdf.format(new Date()));
					System.out.println("上传成功");
					//获取上传成功之后文件的下载地址
					URL url = cosClient.generatePresignedUrl(bucketName + "-" + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));
					System.out.println(url);
				} catch (Throwable tb) {
					System.out.println("上传失败");
					tb.printStackTrace();
				} finally {
					// 关闭 TransferManger
					transferManager.shutdownNow();
				}
			}
		}).start();
	}

	/**
	 * 下载
	 */
	public static void download(String key) {
		try {
			//下载到本地指定路径
			File localDownFile = new File("src/test/resources/download.pdf");
			GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + "-" + appId, key);
			// 下载文件
			Download download = transferManager.download(getObjectRequest, localDownFile);
			// 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）
			download.waitForCompletion();
			System.out.println("下载成功");
		} catch (Throwable tb) {
			System.out.println("下载失败");
			tb.printStackTrace();
		} finally {
			// 关闭 TransferManger
			transferManager.shutdownNow();
		}
	}

	/**
	 * 删除
	 */
	public static void delete(final String key) {
		new Thread(new Runnable() {
			public void run() {
				// 指定要删除的 bucket 和路径
				try {
					cosClient.deleteObject(bucketName + "-" + appId, key);
					System.out.println("删除成功");
				} catch (Throwable tb) {
					System.out.println("删除文件失败");
					tb.printStackTrace();
				}
			}
		}).start();
	}
}
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '244',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000526s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001417s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000435s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000356s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001008s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000287s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=244,`p_id`=2,`title`='腾讯 COS 的文件操作(Java 实现)\r',`content`='# 腾讯 COS 的文件操作(Java 实现)\r\n## 添加 Maven 依赖\r\n```\r\n<dependency>\r\n	<groupId>junit</groupId>\r\n	<artifactId>junit</artifactId>\r\n	<version>4.11</version>\r\n	<scope>test</scope>\r\n</dependency>\r\n\r\n<dependency>\r\n	<groupId>com.qcloud</groupId>\r\n	<artifactId>cos_api</artifactId>\r\n	<version>5.2.4</version>\r\n</dependency>\r\n```\r\n## 文件操作类\r\n```\r\npackage top.qingrang;\r\n\r\nimport com.qcloud.cos.COSClient;\r\nimport com.qcloud.cos.ClientConfig;\r\nimport com.qcloud.cos.auth.BasicCOSCredentials;\r\nimport com.qcloud.cos.auth.COSCredentials;\r\nimport com.qcloud.cos.model.GetObjectRequest;\r\nimport com.qcloud.cos.model.PutObjectRequest;\r\nimport com.qcloud.cos.region.Region;\r\nimport com.qcloud.cos.transfer.Download;\r\nimport com.qcloud.cos.transfer.TransferManager;\r\nimport com.qcloud.cos.transfer.Upload;\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\n/**\r\n * 腾讯 COS\r\n * 文件的上传，下载，删除\r\n */\r\npublic class App {\r\n	static String bucketName = \"daily\"; //桶的名称\r\n//	static String key = \"/2018-11-06_200028.jpg\";         //上传到云上路径\r\n	static String region = \"ap-chengdu\";//区域成都\r\n	static String appId = \"1252869435\"; //APPID\r\n	static COSCredentials cred = null;\r\n	static TransferManager transferManager = null;\r\n	static COSClient cosClient = null;\r\n	static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm ss\");\r\n\r\n	static {\r\n		// 1 初始化用户身份信息(secretId, secretKey)\r\n		String SecretId = \"XXXXXXX\"; //SecretId 是用于标识 API 调用者的身份\r\n		String SecretKey = \"XXXXXXX\"; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥\r\n		cred = new BasicCOSCredentials(SecretId, SecretKey);\r\n\r\n		// 2 设置bucket的区域,\r\n		ClientConfig clientConfig = new ClientConfig(new Region(region));\r\n		// 3 生成cos客户端\r\n		cosClient = new COSClient(cred, clientConfig);\r\n		// 指定要上传到 COS 上的路径\r\n		ExecutorService threadPool = Executors.newFixedThreadPool(32);\r\n		// 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。\r\n		transferManager = new TransferManager(cosClient, threadPool);\r\n	}\r\n\r\n	public static void main(String[] args) {\r\n		String name = \"2018-11-06-2.png\";\r\n		String ikey = \"/\" + name;\r\n		String path = \"C:\\\\Users\\\\123\\\\Desktop\\\\\" + name;\r\n\r\n		//上传\r\n		upload(key,path);\r\n\r\n		cosClient.shutdown();\r\n	}\r\n\r\n	/**\r\n	 * 上传，重复则覆盖\r\n	 */\r\n	public static void upload(final String key, final String path) {\r\n		new Thread(new Runnable() {\r\n			public void run() {\r\n				try {\r\n					System.out.println(\"上传开始时间:\" + sdf.format(new Date()));\r\n					// .....(提交上传下载请求, 如下文所属)\r\n					// bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式\r\n					String bucket = bucketName + \"-\" + appId;\r\n					//本地文件路径\r\n					File localFile = new File(path);\r\n					PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);\r\n					// 本地文件上传\r\n					Upload upload = transferManager.upload(putObjectRequest);\r\n					// 异步（如果想等待传输结束，则调用 waitForUploadResult）\r\n					//UploadResult uploadResult = upload.waitForUploadResult();\r\n					//同步的等待上传结束waitForCompletion\r\n					upload.waitForCompletion();\r\n					System.out.println(\"上传结束时间:\" + sdf.format(new Date()));\r\n					System.out.println(\"上传成功\");\r\n					//获取上传成功之后文件的下载地址\r\n					URL url = cosClient.generatePresignedUrl(bucketName + \"-\" + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));\r\n					System.out.println(url);\r\n				} catch (Throwable tb) {\r\n					System.out.println(\"上传失败\");\r\n					tb.printStackTrace();\r\n				} finally {\r\n					// 关闭 TransferManger\r\n					transferManager.shutdownNow();\r\n				}\r\n			}\r\n		}).start();\r\n	}\r\n\r\n	/**\r\n	 * 下载\r\n	 */\r\n	public static void download(String key) {\r\n		try {\r\n			//下载到本地指定路径\r\n			File localDownFile = new File(\"src/test/resources/download.pdf\");\r\n			GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + \"-\" + appId, key);\r\n			// 下载文件\r\n			Download download = transferManager.download(getObjectRequest, localDownFile);\r\n			// 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）\r\n			download.waitForCompletion();\r\n			System.out.println(\"下载成功\");\r\n		} catch (Throwable tb) {\r\n			System.out.println(\"下载失败\");\r\n			tb.printStackTrace();\r\n		} finally {\r\n			// 关闭 TransferManger\r\n			transferManager.shutdownNow();\r\n		}\r\n	}\r\n\r\n	/**\r\n	 * 删除\r\n	 */\r\n	public static void delete(final String key) {\r\n		new Thread(new Runnable() {\r\n			public void run() {\r\n				// 指定要删除的 bucket 和路径\r\n				try {\r\n					cosClient.deleteObject(bucketName + \"-\" + appId, key);\r\n					System.out.println(\"删除成功\");\r\n				} catch (Throwable tb) {\r\n					System.out.println(\"删除文件失败\");\r\n					tb.printStackTrace();\r\n				}\r\n			}\r\n		}).start();\r\n	}\r\n}\r\n```',`groups`='Java',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 244 [ RunTime:0.000761s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000929s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Java' [ RunTime:0.000308s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001204s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Java' [ RunTime:0.000377s ]
---------------------------------------------------------------
[ 2018-11-06T23:02:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/244.html
[ info ] qingrang.top/daily/admin/note/shownote/id/244.html [运行时间：0.057909s][吞吐率：17.27req/s] [内存消耗：1,984.90kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/244.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '244',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000483s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001347s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000544s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000965s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000282s ]
---------------------------------------------------------------
[ 2018-11-06T23:02:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/244.html
[ info ] qingrang.top/daily/admin/note/editnote/id/244.html [运行时间：0.052799s][吞吐率：18.94req/s] [内存消耗：2,032.96kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '244',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000561s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001379s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000471s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000896s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000287s ]
---------------------------------------------------------------
[ 2018-11-06T23:04:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/244.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/244.html [运行时间：0.063206s][吞吐率：15.82req/s] [内存消耗：2,083.25kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '9549',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/244.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '利用 Java 实现腾讯 COS ，文件的上传，下载，删除',
  'content' => '# 腾讯 COS 的文件操作(Java 实现)
## 添加 Maven 依赖
```
<dependency>
	<groupId>junit</groupId>
	<artifactId>junit</artifactId>
	<version>4.11</version>
	<scope>test</scope>
</dependency>

<dependency>
	<groupId>com.qcloud</groupId>
	<artifactId>cos_api</artifactId>
	<version>5.2.4</version>
</dependency>
```
## 文件操作类
```
package top.qingrang;

import com.qcloud.cos.COSClient;
import com.qcloud.cos.ClientConfig;
import com.qcloud.cos.auth.BasicCOSCredentials;
import com.qcloud.cos.auth.COSCredentials;
import com.qcloud.cos.model.GetObjectRequest;
import com.qcloud.cos.model.PutObjectRequest;
import com.qcloud.cos.region.Region;
import com.qcloud.cos.transfer.Download;
import com.qcloud.cos.transfer.TransferManager;
import com.qcloud.cos.transfer.Upload;
import java.io.File;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

/**
 * 腾讯 COS
 * 文件的上传，下载，删除
 */
public class App {
	static String bucketName = "daily"; //桶的名称
//	static String key = "/2018-11-06_200028.jpg";         //上传到云上路径
	static String region = "ap-chengdu";//区域成都
	static String appId = "1252869435"; //APPID
	static COSCredentials cred = null;
	static TransferManager transferManager = null;
	static COSClient cosClient = null;
	static SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm ss");

	static {
		// 1 初始化用户身份信息(secretId, secretKey)
		String SecretId = "XXXXXXX"; //SecretId 是用于标识 API 调用者的身份
		String SecretKey = "XXXXXXX"; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥
		cred = new BasicCOSCredentials(SecretId, SecretKey);

		// 2 设置bucket的区域,
		ClientConfig clientConfig = new ClientConfig(new Region(region));
		// 3 生成cos客户端
		cosClient = new COSClient(cred, clientConfig);
		// 指定要上传到 COS 上的路径
		ExecutorService threadPool = Executors.newFixedThreadPool(32);
		// 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。
		transferManager = new TransferManager(cosClient, threadPool);
	}

	public static void main(String[] args) {
		String name = "2018-11-06-2.png";
		String ikey = "/" + name;
		String path = "C:\\\\Users\\\\123\\\\Desktop\\\\" + name;

		//上传
		upload(key,path);

		cosClient.shutdown();
	}

	/**
	 * 上传，重复则覆盖
	 */
	public static void upload(final String key, final String path) {
		new Thread(new Runnable() {
			public void run() {
				try {
					System.out.println("上传开始时间:" + sdf.format(new Date()));
					// .....(提交上传下载请求, 如下文所属)
					// bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式
					String bucket = bucketName + "-" + appId;
					//本地文件路径
					File localFile = new File(path);
					PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);
					// 本地文件上传
					Upload upload = transferManager.upload(putObjectRequest);
					// 异步（如果想等待传输结束，则调用 waitForUploadResult）
					//UploadResult uploadResult = upload.waitForUploadResult();
					//同步的等待上传结束waitForCompletion
					upload.waitForCompletion();
					System.out.println("上传结束时间:" + sdf.format(new Date()));
					System.out.println("上传成功");
					//获取上传成功之后文件的下载地址
					URL url = cosClient.generatePresignedUrl(bucketName + "-" + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));
					System.out.println(url);
				} catch (Throwable tb) {
					System.out.println("上传失败");
					tb.printStackTrace();
				} finally {
					// 关闭 TransferManger
					transferManager.shutdownNow();
				}
			}
		}).start();
	}

	/**
	 * 下载
	 */
	public static void download(String key) {
		try {
			//下载到本地指定路径
			File localDownFile = new File("src/test/resources/download.pdf");
			GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + "-" + appId, key);
			// 下载文件
			Download download = transferManager.download(getObjectRequest, localDownFile);
			// 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）
			download.waitForCompletion();
			System.out.println("下载成功");
		} catch (Throwable tb) {
			System.out.println("下载失败");
			tb.printStackTrace();
		} finally {
			// 关闭 TransferManger
			transferManager.shutdownNow();
		}
	}

	/**
	 * 删除
	 */
	public static void delete(final String key) {
		new Thread(new Runnable() {
			public void run() {
				// 指定要删除的 bucket 和路径
				try {
					cosClient.deleteObject(bucketName + "-" + appId, key);
					System.out.println("删除成功");
				} catch (Throwable tb) {
					System.out.println("删除文件失败");
					tb.printStackTrace();
				}
			}
		}).start();
	}
}
```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '244',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000611s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001969s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000645s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000414s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001145s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000415s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000351s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=244,`p_id`=2,`title`='腾讯 COS 的文件操作(Java 实现)\r',`content`='# 腾讯 COS 的文件操作(Java 实现)\r\n## 添加 Maven 依赖\r\n```\r\n<dependency>\r\n	<groupId>junit</groupId>\r\n	<artifactId>junit</artifactId>\r\n	<version>4.11</version>\r\n	<scope>test</scope>\r\n</dependency>\r\n\r\n<dependency>\r\n	<groupId>com.qcloud</groupId>\r\n	<artifactId>cos_api</artifactId>\r\n	<version>5.2.4</version>\r\n</dependency>\r\n```\r\n## 文件操作类\r\n```\r\npackage top.qingrang;\r\n\r\nimport com.qcloud.cos.COSClient;\r\nimport com.qcloud.cos.ClientConfig;\r\nimport com.qcloud.cos.auth.BasicCOSCredentials;\r\nimport com.qcloud.cos.auth.COSCredentials;\r\nimport com.qcloud.cos.model.GetObjectRequest;\r\nimport com.qcloud.cos.model.PutObjectRequest;\r\nimport com.qcloud.cos.region.Region;\r\nimport com.qcloud.cos.transfer.Download;\r\nimport com.qcloud.cos.transfer.TransferManager;\r\nimport com.qcloud.cos.transfer.Upload;\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\n/**\r\n * 腾讯 COS\r\n * 文件的上传，下载，删除\r\n */\r\npublic class App {\r\n	static String bucketName = \"daily\"; //桶的名称\r\n//	static String key = \"/2018-11-06_200028.jpg\";         //上传到云上路径\r\n	static String region = \"ap-chengdu\";//区域成都\r\n	static String appId = \"1252869435\"; //APPID\r\n	static COSCredentials cred = null;\r\n	static TransferManager transferManager = null;\r\n	static COSClient cosClient = null;\r\n	static SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm ss\");\r\n\r\n	static {\r\n		// 1 初始化用户身份信息(secretId, secretKey)\r\n		String SecretId = \"XXXXXXX\"; //SecretId 是用于标识 API 调用者的身份\r\n		String SecretKey = \"XXXXXXX\"; //SecretKey是用于加密签名字符串和服务器端验证签名字符串的密钥\r\n		cred = new BasicCOSCredentials(SecretId, SecretKey);\r\n\r\n		// 2 设置bucket的区域,\r\n		ClientConfig clientConfig = new ClientConfig(new Region(region));\r\n		// 3 生成cos客户端\r\n		cosClient = new COSClient(cred, clientConfig);\r\n		// 指定要上传到 COS 上的路径\r\n		ExecutorService threadPool = Executors.newFixedThreadPool(32);\r\n		// 传入一个 threadpool, 若不传入线程池, 默认 TransferManager 中会生成一个单线程的线程池。\r\n		transferManager = new TransferManager(cosClient, threadPool);\r\n	}\r\n\r\n	public static void main(String[] args) {\r\n		String name = \"2018-11-06-2.png\";\r\n		String ikey = \"/\" + name;\r\n		String path = \"C:\\\\Users\\\\123\\\\Desktop\\\\\" + name;\r\n\r\n		//上传\r\n		upload(key,path);\r\n\r\n		cosClient.shutdown();\r\n	}\r\n\r\n	/**\r\n	 * 上传，重复则覆盖\r\n	 */\r\n	public static void upload(final String key, final String path) {\r\n		new Thread(new Runnable() {\r\n			public void run() {\r\n				try {\r\n					System.out.println(\"上传开始时间:\" + sdf.format(new Date()));\r\n					// .....(提交上传下载请求, 如下文所属)\r\n					// bucket 的命名规则为{name}-{appid} ，此处填写的存储桶名称必须为此格式\r\n					String bucket = bucketName + \"-\" + appId;\r\n					//本地文件路径\r\n					File localFile = new File(path);\r\n					PutObjectRequest putObjectRequest = new PutObjectRequest(bucket, key, localFile);\r\n					// 本地文件上传\r\n					Upload upload = transferManager.upload(putObjectRequest);\r\n					// 异步（如果想等待传输结束，则调用 waitForUploadResult）\r\n					//UploadResult uploadResult = upload.waitForUploadResult();\r\n					//同步的等待上传结束waitForCompletion\r\n					upload.waitForCompletion();\r\n					System.out.println(\"上传结束时间:\" + sdf.format(new Date()));\r\n					System.out.println(\"上传成功\");\r\n					//获取上传成功之后文件的下载地址\r\n					URL url = cosClient.generatePresignedUrl(bucketName + \"-\" + appId, key, new Date(new Date().getTime() + 5 * 60 * 10000));\r\n					System.out.println(url);\r\n				} catch (Throwable tb) {\r\n					System.out.println(\"上传失败\");\r\n					tb.printStackTrace();\r\n				} finally {\r\n					// 关闭 TransferManger\r\n					transferManager.shutdownNow();\r\n				}\r\n			}\r\n		}).start();\r\n	}\r\n\r\n	/**\r\n	 * 下载\r\n	 */\r\n	public static void download(String key) {\r\n		try {\r\n			//下载到本地指定路径\r\n			File localDownFile = new File(\"src/test/resources/download.pdf\");\r\n			GetObjectRequest getObjectRequest = new GetObjectRequest(bucketName + \"-\" + appId, key);\r\n			// 下载文件\r\n			Download download = transferManager.download(getObjectRequest, localDownFile);\r\n			// 等待传输结束（如果想同步的等待上传结束，则调用 waitForCompletion）\r\n			download.waitForCompletion();\r\n			System.out.println(\"下载成功\");\r\n		} catch (Throwable tb) {\r\n			System.out.println(\"下载失败\");\r\n			tb.printStackTrace();\r\n		} finally {\r\n			// 关闭 TransferManger\r\n			transferManager.shutdownNow();\r\n		}\r\n	}\r\n\r\n	/**\r\n	 * 删除\r\n	 */\r\n	public static void delete(final String key) {\r\n		new Thread(new Runnable() {\r\n			public void run() {\r\n				// 指定要删除的 bucket 和路径\r\n				try {\r\n					cosClient.deleteObject(bucketName + \"-\" + appId, key);\r\n					System.out.println(\"删除成功\");\r\n				} catch (Throwable tb) {\r\n					System.out.println(\"删除文件失败\");\r\n					tb.printStackTrace();\r\n				}\r\n			}\r\n		}).start();\r\n	}\r\n}\r\n```',`groups`='Java',`is_show`=0,`publish`=1,`summary`='利用 Java 实现腾讯 COS ，文件的上传，下载，删除'  WHERE  `id` = 244 [ RunTime:0.000733s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000943s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Java' [ RunTime:0.000350s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000779s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=16  WHERE  `groups` = 'Java' [ RunTime:0.000399s ]
---------------------------------------------------------------
[ 2018-11-06T23:04:02+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/244.html
[ info ] qingrang.top/daily/admin/note/shownote/id/244.html [运行时间：0.056924s][吞吐率：17.57req/s] [内存消耗：1,984.96kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/244.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '244',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000498s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001617s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 244 LIMIT 1 [ RunTime:0.000434s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000846s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000303s ]
---------------------------------------------------------------
[ 2018-11-06T23:04:22+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.064245s][吞吐率：15.57req/s] [内存消耗：2,020.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000621s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001443s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000340s ]
---------------------------------------------------------------
[ 2018-11-06T23:04:54+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.067607s][吞吐率：14.79req/s] [内存消耗：1,994.85kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '6611',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Java',
  'content' => '# Java 剪贴板
```
package top.qingrang;

import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;

/**
 * 剪贴板
 */
public class MyClipboard {
//	public static void main(String[] args) throws InterruptedException {
		// 把文本设置到剪贴板（复制）
//		setClipboardString("Hello System Clipboard!");

		// 从剪贴板中获取文本（粘贴）
//		String text = getClipboardString();
//		System.out.println("text: " + text);
//	}

	/**
	 * 把文本设置到剪贴板（复制）
	 */
	public static void setClipboardString(String text) {
		// 获取系统剪贴板
		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
		// 封装文本内容
		Transferable trans = new StringSelection(text);
		// 把文本内容设置到系统剪贴板
		clipboard.setContents(trans, null);
	}

	/**
	 * 从剪贴板中获取文本（粘贴）
	 */
	public static String getClipboardString() {
		// 获取系统剪贴板
		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

		// 获取剪贴板中的内容
		Transferable trans = clipboard.getContents(null);

		if (trans != null) {
			// 判断剪贴板中的内容是否支持文本
			if (trans.isDataFlavorSupported(DataFlavor.stringFlavor)) {
				try {
					// 获取剪贴板中的文本内容
					String text = (String) trans.getTransferData(DataFlavor.stringFlavor);
					return text;
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
		return null;
	}
}

```',
  'test-editormd-html-code' => '<h1 id="h1-java-"><a name="Java 剪贴板" class="reference-link"></a><span class="header-link octicon octicon-link"></span>Java 剪贴板</h1><pre><code>package top.qingrang;

import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;

/**
 * 剪贴板
 */
public class MyClipboard {
//    public static void main(String[] args) throws InterruptedException {
        // 把文本设置到剪贴板（复制）
//        setClipboardString(&quot;Hello System Clipboard!&quot;);

        // 从剪贴板中获取文本（粘贴）
//        String text = getClipboardString();
//        System.out.println(&quot;text: &quot; + text);
//    }

    /**
     * 把文本设置到剪贴板（复制）
     */
    public static void setClipboardString(String text) {
        // 获取系统剪贴板
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        // 封装文本内容
        Transferable trans = new StringSelection(text);
        // 把文本内容设置到系统剪贴板
        clipboard.setContents(trans, null);
    }

    /**
     * 从剪贴板中获取文本（粘贴）
     */
    public static String getClipboardString() {
        // 获取系统剪贴板
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

        // 获取剪贴板中的内容
        Transferable trans = clipboard.getContents(null);

        if (trans != null) {
            // 判断剪贴板中的内容是否支持文本
            if (trans.isDataFlavorSupported(DataFlavor.stringFlavor)) {
                try {
                    // 获取剪贴板中的文本内容
                    String text = (String) trans.getTransferData(DataFlavor.stringFlavor);
                    return text;
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
        return null;
    }
}
</code></pre>',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000633s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.002012s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000375s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000330s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001228s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('Java 剪贴板\r' , '# Java 剪贴板\r\n```\r\npackage top.qingrang;\r\n\r\nimport java.awt.*;\r\nimport java.awt.datatransfer.Clipboard;\r\nimport java.awt.datatransfer.DataFlavor;\r\nimport java.awt.datatransfer.StringSelection;\r\nimport java.awt.datatransfer.Transferable;\r\n\r\n/**\r\n * 剪贴板\r\n */\r\npublic class MyClipboard {\r\n//	public static void main(String[] args) throws InterruptedException {\r\n		// 把文本设置到剪贴板（复制）\r\n//		setClipboardString(\"Hello System Clipboard!\");\r\n\r\n		// 从剪贴板中获取文本（粘贴）\r\n//		String text = getClipboardString();\r\n//		System.out.println(\"text: \" + text);\r\n//	}\r\n\r\n	/**\r\n	 * 把文本设置到剪贴板（复制）\r\n	 */\r\n	public static void setClipboardString(String text) {\r\n		// 获取系统剪贴板\r\n		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n		// 封装文本内容\r\n		Transferable trans = new StringSelection(text);\r\n		// 把文本内容设置到系统剪贴板\r\n		clipboard.setContents(trans, null);\r\n	}\r\n\r\n	/**\r\n	 * 从剪贴板中获取文本（粘贴）\r\n	 */\r\n	public static String getClipboardString() {\r\n		// 获取系统剪贴板\r\n		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n\r\n		// 获取剪贴板中的内容\r\n		Transferable trans = clipboard.getContents(null);\r\n\r\n		if (trans != null) {\r\n			// 判断剪贴板中的内容是否支持文本\r\n			if (trans.isDataFlavorSupported(DataFlavor.stringFlavor)) {\r\n				try {\r\n					// 获取剪贴板中的文本内容\r\n					String text = (String) trans.getTransferData(DataFlavor.stringFlavor);\r\n					return text;\r\n				} catch (Exception e) {\r\n					e.printStackTrace();\r\n				}\r\n			}\r\n		}\r\n		return null;\r\n	}\r\n}\r\n\r\n```' , 'Java' , 2 , '2018-11-06') [ RunTime:0.000467s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000948s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Java' [ RunTime:0.000407s ]
---------------------------------------------------------------
[ 2018-11-06T23:04:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note
[ info ] qingrang.top/daily/admin/note [运行时间：0.089858s][吞吐率：11.13req/s] [内存消耗：2,230.20kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'stickList',
  1 => 'hide',
  2 => 'list',
  3 => 'list_new',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
  10 => 'default_num',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000589s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001882s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal'  AND `is_show` = 1 ORDER BY date desc,id desc [ RunTime:0.002178s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Personal' ORDER BY id desc LIMIT 5 [ RunTime:0.000702s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001544s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000503s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` < 5 [ RunTime:0.000706s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001468s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000448s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0  AND `id` <> 2 ORDER BY `groups` [ RunTime:0.000495s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `groups` [ RunTime:0.000369s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Default' LIMIT 1 [ RunTime:0.001401s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000333s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001252s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000585s ]
---------------------------------------------------------------
[ 2018-11-06T23:04:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/245.html
[ info ] qingrang.top/daily/admin/note/editnote/id/245.html [运行时间：0.059522s][吞吐率：16.80req/s] [内存消耗：2,029.46kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '245',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000507s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001267s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 245 LIMIT 1 [ RunTime:0.000389s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001243s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000351s ]
---------------------------------------------------------------
[ 2018-11-06T23:05:03+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/245.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/245.html [运行时间：0.068341s][吞吐率：14.63req/s] [内存消耗：2,058.67kb] [文件加载：58]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '3171',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/245.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'summary' => '',
  'content' => '# Java 剪贴板
```
package top.qingrang;

import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;

/**
 * 剪贴板
 */
public class MyClipboard {
//	public static void main(String[] args) throws InterruptedException {
		// 把文本设置到剪贴板（复制）
//		setClipboardString("Hello System Clipboard!");

		// 从剪贴板中获取文本（粘贴）
//		String text = getClipboardString();
//		System.out.println("text: " + text);
//	}

	/**
	 * 把文本设置到剪贴板（复制）
	 */
	public static void setClipboardString(String text) {
		// 获取系统剪贴板
		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
		// 封装文本内容
		Transferable trans = new StringSelection(text);
		// 把文本内容设置到系统剪贴板
		clipboard.setContents(trans, null);
	}

	/**
	 * 从剪贴板中获取文本（粘贴）
	 */
	public static String getClipboardString() {
		// 获取系统剪贴板
		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();

		// 获取剪贴板中的内容
		Transferable trans = clipboard.getContents(null);

		if (trans != null) {
			// 判断剪贴板中的内容是否支持文本
			if (trans.isDataFlavorSupported(DataFlavor.stringFlavor)) {
				try {
					// 获取剪贴板中的文本内容
					String text = (String) trans.getTransferData(DataFlavor.stringFlavor);
					return text;
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
		return null;
	}
}

```',
  'groups' => 'Java',
  'showsel' => '0',
  'showse2' => '1',
  'id' => '245',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000472s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001805s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 245 LIMIT 1 [ RunTime:0.000528s ]
[ sql ] [ SQL ] SELECT `groups` FROM `note` WHERE  `id` = 245 LIMIT 1 [ RunTime:0.000321s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000983s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.000319s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000322s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=245,`p_id`=2,`title`='Java 剪贴板\r',`content`='# Java 剪贴板\r\n```\r\npackage top.qingrang;\r\n\r\nimport java.awt.*;\r\nimport java.awt.datatransfer.Clipboard;\r\nimport java.awt.datatransfer.DataFlavor;\r\nimport java.awt.datatransfer.StringSelection;\r\nimport java.awt.datatransfer.Transferable;\r\n\r\n/**\r\n * 剪贴板\r\n */\r\npublic class MyClipboard {\r\n//	public static void main(String[] args) throws InterruptedException {\r\n		// 把文本设置到剪贴板（复制）\r\n//		setClipboardString(\"Hello System Clipboard!\");\r\n\r\n		// 从剪贴板中获取文本（粘贴）\r\n//		String text = getClipboardString();\r\n//		System.out.println(\"text: \" + text);\r\n//	}\r\n\r\n	/**\r\n	 * 把文本设置到剪贴板（复制）\r\n	 */\r\n	public static void setClipboardString(String text) {\r\n		// 获取系统剪贴板\r\n		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n		// 封装文本内容\r\n		Transferable trans = new StringSelection(text);\r\n		// 把文本内容设置到系统剪贴板\r\n		clipboard.setContents(trans, null);\r\n	}\r\n\r\n	/**\r\n	 * 从剪贴板中获取文本（粘贴）\r\n	 */\r\n	public static String getClipboardString() {\r\n		// 获取系统剪贴板\r\n		Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\r\n\r\n		// 获取剪贴板中的内容\r\n		Transferable trans = clipboard.getContents(null);\r\n\r\n		if (trans != null) {\r\n			// 判断剪贴板中的内容是否支持文本\r\n			if (trans.isDataFlavorSupported(DataFlavor.stringFlavor)) {\r\n				try {\r\n					// 获取剪贴板中的文本内容\r\n					String text = (String) trans.getTransferData(DataFlavor.stringFlavor);\r\n					return text;\r\n				} catch (Exception e) {\r\n					e.printStackTrace();\r\n				}\r\n			}\r\n		}\r\n		return null;\r\n	}\r\n}\r\n\r\n```',`groups`='Java',`is_show`=0,`publish`=1,`summary`=''  WHERE  `id` = 245 [ RunTime:0.000646s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001125s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Java' [ RunTime:0.000319s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` WHERE  `groups` = 'Java' LIMIT 1 [ RunTime:0.001365s ]
[ sql ] [ SQL ] UPDATE `groups`  SET `g_count`=17  WHERE  `groups` = 'Java' [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-11-06T23:05:06+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/245.html
[ info ] qingrang.top/daily/admin/note/shownote/id/245.html [运行时间：0.052028s][吞吐率：19.22req/s] [内存消耗：1,981.41kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/245.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9,la;q=0.8,en;q=0.7,lb;q=0.6',
  'cookie' => 'Hm_lvt_1769181352e9adc950166aada465644e=1540982738,1541082864,1541122974,1541171416; PHPSESSID=ufp4b5s3ap66ap38b5clk877h6',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '245',
)
[ info ] [ SESSION ] INIT array (
  'id' => '',
  'var_session_id' => '',
  'prefix' => 'think',
  'type' => '',
  'auto_start' => true,
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000512s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001230s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 245 LIMIT 1 [ RunTime:0.000397s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000949s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000302s ]
