---------------------------------------------------------------
[ 2018-07-10T10:38:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.101648s][吞吐率：9.84req/s] [内存消耗：3,234.14kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000507s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001075s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.003400s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000951s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000325s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000260s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000244s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000753s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000224s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000305s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000245s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000182s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001008s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000632s ]
---------------------------------------------------------------
[ 2018-07-10T11:47:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.105587s][吞吐率：9.47req/s] [内存消耗：3,234.15kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000511s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000929s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002389s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000846s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000255s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000228s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000686s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000273s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000405s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000218s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000266s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000174s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000761s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000577s ]
---------------------------------------------------------------
[ 2018-07-10T16:26:44+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.052200s][吞吐率：19.16req/s] [内存消耗：1,976.62kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001730s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001041s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000342s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000688s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000246s ]
---------------------------------------------------------------
[ 2018-07-10T16:27:02+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.047730s][吞吐率：20.95req/s] [内存消耗：1,976.73kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000547s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001022s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000338s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000664s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000256s ]
---------------------------------------------------------------
[ 2018-07-10T16:27:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.043298s][吞吐率：23.10req/s] [内存消耗：1,976.72kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000424s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000900s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000328s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000634s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000263s ]
---------------------------------------------------------------
[ 2018-07-10T16:27:22+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/177.html
[ info ] qingrang.top/daily/admin/note/editnote/id/177.html [运行时间：0.046230s][吞吐率：21.63req/s] [内存消耗：2,024.54kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000429s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001079s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000407s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000794s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000282s ]
---------------------------------------------------------------
[ 2018-07-10T16:27:56+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.046626s][吞吐率：21.45req/s] [内存消耗：2,036.93kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10436',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
[TOC]

## 专业名词介绍

>vps

VPS 就是一台拥有公网IP的服务器。

>KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局
',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000453s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001034s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000350s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000670s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000242s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000240s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n[TOC]\r\n\r\n## 专业名词介绍\r\n\r\n>vps\r\n\r\nVPS 就是一台拥有公网IP的服务器。\r\n\r\n>KVM 与 OpenVZ 架构的区别\r\n\r\n1.OpenVZ 架构普及知识\r\n\r\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\r\n\r\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\r\n\r\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\r\n\r\n2.KVM 架构普及知识\r\n\r\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\r\n\r\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\r\n\r\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\r\n\r\n3.OpenVZ 与 KVM 缺点比较\r\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\r\n\r\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\r\n\r\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\r\n## 搭建教程\r\n### 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n### 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n### 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000386s ]
---------------------------------------------------------------
[ 2018-07-10T16:27:57+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.046927s][吞吐率：21.31req/s] [内存消耗：1,977.03kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000440s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000961s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000361s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000702s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000259s ]
---------------------------------------------------------------
[ 2018-07-10T16:29:45+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.047989s][吞吐率：20.84req/s] [内存消耗：2,082.77kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '22',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => '翻墙',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000473s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000987s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%翻墙%' OR `content` LIKE '%翻墙%' ) ORDER BY id desc [ RunTime:0.005058s ]
---------------------------------------------------------------
[ 2018-07-10T16:29:51+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.045535s][吞吐率：21.96req/s] [内存消耗：2,151.58kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '15',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Linux',
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000397s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000911s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Linux' ORDER BY id desc [ RunTime:0.000925s ]
---------------------------------------------------------------
[ 2018-07-10T16:29:58+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/177
[ info ] qingrang.top/daily/admin/note/editNote/id/177 [运行时间：0.058863s][吞吐率：16.99req/s] [内存消耗：2,024.96kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001816s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001060s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000344s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000772s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000255s ]
---------------------------------------------------------------
[ 2018-07-10T16:36:32+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.060871s][吞吐率：16.43req/s] [内存消耗：2,047.50kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10252',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 搬瓦工搭建 SSR

[TOC]

## 专业名词介绍

>vps

VPS 就是一台拥有公网IP的服务器。

>KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局
',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000491s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001610s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='搬瓦工搭建 SSR',`content`='# 搬瓦工搭建 SSR\n\n[TOC]\n\n## 专业名词介绍\n\n>vps\n\nVPS 就是一台拥有公网IP的服务器。\n\n>KVM 与 OpenVZ 架构的区别\n\n1.OpenVZ 架构普及知识\n\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\n\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\n\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\n\n2.KVM 架构普及知识\n\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\n\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\n\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\n\n3.OpenVZ 与 KVM 缺点比较\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\n\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\n\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\n## 搭建教程\n### 1. 购买搬瓦工服务器\nhttps://www.bawagon.com/kvmvps/\n### 2. 搬瓦工 vps 搭建 ssr\n>参考教程\nhttps://www.jiongjun.cc/banwagong/35.html\n>一键搭建脚本\nhttps://teddysun.com/486.html\n\n1. xshell 连接服务器\n2. 按顺序执行以下命令\n\n```\ncd /usr/local/\n\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\n\nchmod +x shadowsocks-all.sh\n\n//进入安装界面，此处安装 2)ShadowsocksR\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\n```\n### 3. 客户端连接\n>客户端文件\nhttps://github.com/SSGamble/VpsClient.git\n\nWindows：代理模式 - 全局\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000597s ]
---------------------------------------------------------------
[ 2018-07-10T16:40:33+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.047709s][吞吐率：20.96req/s] [内存消耗：2,036.98kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10469',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
>翻墙

[TOC]

## 专业名词介绍

>vps

VPS 就是一台拥有公网IP的服务器。

>KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局
',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000384s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001041s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000341s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000681s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000241s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000242s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n>翻墙\r\n\r\n[TOC]\r\n\r\n## 专业名词介绍\r\n\r\n>vps\r\n\r\nVPS 就是一台拥有公网IP的服务器。\r\n\r\n>KVM 与 OpenVZ 架构的区别\r\n\r\n1.OpenVZ 架构普及知识\r\n\r\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\r\n\r\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\r\n\r\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\r\n\r\n2.KVM 架构普及知识\r\n\r\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\r\n\r\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\r\n\r\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\r\n\r\n3.OpenVZ 与 KVM 缺点比较\r\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\r\n\r\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\r\n\r\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\r\n## 搭建教程\r\n### 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n### 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n### 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000421s ]
---------------------------------------------------------------
[ 2018-07-10T16:40:34+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.040459s][吞吐率：24.72req/s] [内存消耗：1,976.94kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000338s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000890s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000334s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000596s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000233s ]
---------------------------------------------------------------
[ 2018-07-10T16:41:39+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/177.html
[ info ] qingrang.top/daily/admin/note/editnote/id/177.html [运行时间：0.044047s][吞吐率：22.70req/s] [内存消耗：2,024.57kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000414s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001831s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000330s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000757s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000257s ]
---------------------------------------------------------------
[ 2018-07-10T16:42:08+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.042501s][吞吐率：23.53req/s] [内存消耗：2,036.96kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10492',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
`翻墙` `VPN` `SSR`

[TOC]

## 专业名词介绍

>vps

VPS 就是一台拥有公网IP的服务器。

>KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局
',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000386s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000899s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000310s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000612s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000245s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000231s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n`翻墙` `VPN` `SSR`\r\n\r\n[TOC]\r\n\r\n## 专业名词介绍\r\n\r\n>vps\r\n\r\nVPS 就是一台拥有公网IP的服务器。\r\n\r\n>KVM 与 OpenVZ 架构的区别\r\n\r\n1.OpenVZ 架构普及知识\r\n\r\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\r\n\r\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\r\n\r\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\r\n\r\n2.KVM 架构普及知识\r\n\r\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\r\n\r\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\r\n\r\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\r\n\r\n3.OpenVZ 与 KVM 缺点比较\r\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\r\n\r\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\r\n\r\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\r\n## 搭建教程\r\n### 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n### 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n### 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000416s ]
---------------------------------------------------------------
[ 2018-07-10T16:42:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.041350s][吞吐率：24.18req/s] [内存消耗：1,977.05kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000353s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000895s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000369s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000599s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000260s ]
---------------------------------------------------------------
[ 2018-07-10T16:42:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/177
[ info ] qingrang.top/daily/admin/note/editNote/id/177 [运行时间：0.042760s][吞吐率：23.39req/s] [内存消耗：2,025.11kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531211579484; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000399s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000944s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000323s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000624s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000238s ]
---------------------------------------------------------------
[ 2018-07-10T16:49:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.049490s][吞吐率：20.21req/s] [内存消耗：2,052.32kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '14749',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
`翻墙` `VPN` `SSR`

[TOC]

## 专业名词介绍

>vps

VPS 就是一台拥有公网IP的服务器。

>KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局

### 4. SSR 功能详细介绍 & 使用教程
>参考教程
https://lolico.moe/tutorial/shadowsocksr.html/comment-page-1

#### 1. 推荐使用的加密/协议/混淆

加密推荐使用 none
协议推荐使用 chain_a
混淆推荐使用 plain 或者 http_simple
能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple

#### 2. 代理规则
代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。

实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：

- 绕过 xxx
顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。

- 绕过非大陆
带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。

- 用户自定义
萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet

- 全局
顾名思义，所有被发送至 SSR 的流量都会走代理。

日常使用我推荐使用“绕过局域网和大陆”的选项.

',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000403s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000973s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000311s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000631s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000229s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000308s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n`翻墙` `VPN` `SSR`\r\n\r\n[TOC]\r\n\r\n## 专业名词介绍\r\n\r\n>vps\r\n\r\nVPS 就是一台拥有公网IP的服务器。\r\n\r\n>KVM 与 OpenVZ 架构的区别\r\n\r\n1.OpenVZ 架构普及知识\r\n\r\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\r\n\r\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\r\n\r\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\r\n\r\n2.KVM 架构普及知识\r\n\r\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\r\n\r\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\r\n\r\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\r\n\r\n3.OpenVZ 与 KVM 缺点比较\r\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\r\n\r\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\r\n\r\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\r\n## 搭建教程\r\n### 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n### 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n### 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n\r\n### 4. SSR 功能详细介绍 & 使用教程\r\n>参考教程\r\nhttps://lolico.moe/tutorial/shadowsocksr.html/comment-page-1\r\n\r\n#### 1. 推荐使用的加密/协议/混淆\r\n\r\n加密推荐使用 none\r\n协议推荐使用 chain_a\r\n混淆推荐使用 plain 或者 http_simple\r\n能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple\r\n\r\n#### 2. 代理规则\r\n代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。\r\n\r\n实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：\r\n\r\n- 绕过 xxx\r\n顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。\r\n\r\n- 绕过非大陆\r\n带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。\r\n\r\n- 用户自定义\r\n萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet\r\n\r\n- 全局\r\n顾名思义，所有被发送至 SSR 的流量都会走代理。\r\n\r\n日常使用我推荐使用“绕过局域网和大陆”的选项.\r\n\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000490s ]
---------------------------------------------------------------
[ 2018-07-10T16:49:41+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.043406s][吞吐率：23.04req/s] [内存消耗：1,978.51kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000344s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000871s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000313s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000621s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000208s ]
---------------------------------------------------------------
[ 2018-07-10T16:50:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.094344s][吞吐率：10.60req/s] [内存消耗：3,242.64kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000375s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000890s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002858s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000820s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000268s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000257s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000698s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000214s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000292s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000238s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000278s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000184s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000855s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000456s ]
---------------------------------------------------------------
[ 2018-07-10T17:04:53+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.045603s][吞吐率：21.93req/s] [内存消耗：2,087.87kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '22',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => '翻墙',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000381s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000969s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%翻墙%' OR `content` LIKE '%翻墙%' ) ORDER BY id desc [ RunTime:0.004570s ]
---------------------------------------------------------------
[ 2018-07-10T17:04:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/177
[ info ] qingrang.top/daily/admin/note/editNote/id/177 [运行时间：0.045005s][吞吐率：22.22req/s] [内存消耗：2,026.60kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531212427793; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000357s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000949s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000377s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000650s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000238s ]
---------------------------------------------------------------
[ 2018-07-10T17:15:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.042874s][吞吐率：23.32req/s] [内存消耗：2,067.79kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16599',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 搬瓦工搭建 SSR
`翻墙` `VPN` `VPS` `SSR`

[TOC]

## 专业名词介绍

- vps (Virtual private server - 虚拟专用服务器)

是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。

- vpn (Virtual Private Network - 虚拟私人网络)

是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。

- 翻墙基本原理

正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)

- KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局

### 4. SSR 功能详细介绍 & 使用教程
>参考教程
https://lolico.moe/tutorial/shadowsocksr.html/comment-page-1

#### 1. 推荐使用的加密/协议/混淆

加密推荐使用 none
协议推荐使用 chain_a
混淆推荐使用 plain 或者 http_simple
能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple

#### 2. 代理规则
代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。

实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：

- 绕过 xxx
顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。

- 绕过非大陆
带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。

- 用户自定义
萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet

- 全局
顾名思义，所有被发送至 SSR 的流量都会走代理。

日常使用我推荐使用“绕过局域网和大陆”的选项.

',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000374s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000969s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='搬瓦工搭建 SSR',`content`='# 搬瓦工搭建 SSR\n`翻墙` `VPN` `VPS` `SSR`\n\n[TOC]\n\n## 专业名词介绍\n\n- vps (Virtual private server - 虚拟专用服务器)\n\n是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。\n\n- vpn (Virtual Private Network - 虚拟私人网络)\n\n是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。\n\n- 翻墙基本原理\n\n正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)\n\n- KVM 与 OpenVZ 架构的区别\n\n1.OpenVZ 架构普及知识\n\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\n\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\n\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\n\n2.KVM 架构普及知识\n\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\n\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\n\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\n\n3.OpenVZ 与 KVM 缺点比较\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\n\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\n\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\n## 搭建教程\n### 1. 购买搬瓦工服务器\nhttps://www.bawagon.com/kvmvps/\n### 2. 搬瓦工 vps 搭建 ssr\n>参考教程\nhttps://www.jiongjun.cc/banwagong/35.html\n>一键搭建脚本\nhttps://teddysun.com/486.html\n\n1. xshell 连接服务器\n2. 按顺序执行以下命令\n\n```\ncd /usr/local/\n\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\n\nchmod +x shadowsocks-all.sh\n\n//进入安装界面，此处安装 2)ShadowsocksR\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\n```\n### 3. 客户端连接\n>客户端文件\nhttps://github.com/SSGamble/VpsClient.git\n\nWindows：代理模式 - 全局\n\n### 4. SSR 功能详细介绍 & 使用教程\n>参考教程\nhttps://lolico.moe/tutorial/shadowsocksr.html/comment-page-1\n\n#### 1. 推荐使用的加密/协议/混淆\n\n加密推荐使用 none\n协议推荐使用 chain_a\n混淆推荐使用 plain 或者 http_simple\n能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple\n\n#### 2. 代理规则\n代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。\n\n实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：\n\n- 绕过 xxx\n顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。\n\n- 绕过非大陆\n带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。\n\n- 用户自定义\n萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet\n\n- 全局\n顾名思义，所有被发送至 SSR 的流量都会走代理。\n\n日常使用我推荐使用“绕过局域网和大陆”的选项.\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000420s ]
---------------------------------------------------------------
[ 2018-07-10T17:15:05+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.041511s][吞吐率：24.09req/s] [内存消耗：2,067.76kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '16599',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 搬瓦工搭建 SSR
`翻墙` `VPN` `VPS` `SSR`

[TOC]

## 专业名词介绍

- vps (Virtual private server - 虚拟专用服务器)

是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。

- vpn (Virtual Private Network - 虚拟私人网络)

是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。

- 翻墙基本原理

正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)

- KVM 与 OpenVZ 架构的区别

1.OpenVZ 架构普及知识

OpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。

OpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。

OpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。

2.KVM 架构普及知识

KVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。

KVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。

kvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。

3.OpenVZ 与 KVM 缺点比较
OPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。

KVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。

总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。
## 搭建教程
### 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
### 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
### 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局

### 4. SSR 功能详细介绍 & 使用教程
>参考教程
https://lolico.moe/tutorial/shadowsocksr.html/comment-page-1

#### 1. 推荐使用的加密/协议/混淆

加密推荐使用 none
协议推荐使用 chain_a
混淆推荐使用 plain 或者 http_simple
能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple

#### 2. 代理规则
代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。

实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：

- 绕过 xxx
顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。

- 绕过非大陆
带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。

- 用户自定义
萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet

- 全局
顾名思义，所有被发送至 SSR 的流量都会走代理。

日常使用我推荐使用“绕过局域网和大陆”的选项.

',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000355s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000950s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='搬瓦工搭建 SSR',`content`='# 搬瓦工搭建 SSR\n`翻墙` `VPN` `VPS` `SSR`\n\n[TOC]\n\n## 专业名词介绍\n\n- vps (Virtual private server - 虚拟专用服务器)\n\n是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。\n\n- vpn (Virtual Private Network - 虚拟私人网络)\n\n是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。\n\n- 翻墙基本原理\n\n正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)\n\n- KVM 与 OpenVZ 架构的区别\n\n1.OpenVZ 架构普及知识\n\nOpenVZ 是基于 Linux 内核和作业系统的操作系统级虚拟化技术。OpenVZ 允许物理服务器运行多个操作系统，被称虚拟专用服务器（VPS，Virtual Private Server）或虚拟环境（VE, Virtual Environment）。\n\nOpenVZ 软件同时为用户提供工具，协助自动化管理虚拟服务器。基于模板的应用程序部署可以在几分钟内用简单的方法创建新的虚拟服务器并投入使用，而且与其他的虚拟化技术相比，OpenVZ 可以在每CPU上运行几倍于其他虚拟化服务器技术的虚拟化服务器。\n\nOpenVZ 可以在单个物理服务器上创建多个隔离的虚拟专用服务器(VPS)并以最大效率共享硬件和管理资源。每个 VPS 的运行和独立服务器完全一致，因其自身的用户、应用程序都可以独立重启，它拥有根访问权限、用户、IP地址、内存、处理器、文件、应用服务、系统库文件和配置文件等。拥有轻量级处理损耗和高效设计的 OpenVZ 是运行应用服务和实时数据生产型服务器虚拟化的最佳选择。\n\n2.KVM 架构普及知识\n\nKVM作为内核的一个模块，来提供虚拟化功能。如果系统需要虚拟化功能，则KVM模块可以被Linux内核按需动态加载到内存运行。如果不需要的KVM功能，可以动态卸载该模块。\n\nKVM是嵌入在Linux操作系统标准内核中的一个虚拟化模块，它能够将一个Linux标准内核转换成为一个VMM，嵌有KVM模块的Linux标准内核可以支持通过kvm tools来进行加载的GuestOS。所以在这样的操作系统平台下，计算机物理硬件层上直接就是VMM虚拟化层，而没有独立出来的HostOS操作系统层。\n\nkvm 是完全虚拟的，所以不分 pv 和 hvm 的区别，所有的 kvm 类型的虚拟技术都可以装各种 linux 的发行版和各种 win 的发行版，不管供应商在主页有没有写明是否支持 win，只要你配置够 win 运行，那就肯定可以装的上去，只是方法的问题而已。\n\n3.OpenVZ 与 KVM 缺点比较\nOPENVZ - 超卖，没有不超卖的，导致各种石头盘，钻石盘。连带的 cpu 也被过度分割导致性能升值不如其标明的 1/10。再有就是内存，基本上 OpenVZ 技术没有独占的，都是共享，别人多了你就少了，而且这种技术最大的劣势就是内存下来后直接就是当机。\n\nKVM - KVM 资源占用也看周边邻居的资源使用情况，如果折腾的用户太多，也会导致自己的不稳定。简单一点，比如搬瓦工商家才开始销售KVM机器，我们可以看到稳定性还是不错的，就看以后是否有大量的折腾用户进来，如果是，那会给我们有不小的影响。\n\n总结，无论是 OPENVZ 还是 KVM 架构，我们还需要看商家的技术，以及管理，如果控制的好，还是不错的机器，如果乱折腾不管理，那再好的机器、配置都是白搭。\n## 搭建教程\n### 1. 购买搬瓦工服务器\nhttps://www.bawagon.com/kvmvps/\n### 2. 搬瓦工 vps 搭建 ssr\n>参考教程\nhttps://www.jiongjun.cc/banwagong/35.html\n>一键搭建脚本\nhttps://teddysun.com/486.html\n\n1. xshell 连接服务器\n2. 按顺序执行以下命令\n\n```\ncd /usr/local/\n\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\n\nchmod +x shadowsocks-all.sh\n\n//进入安装界面，此处安装 2)ShadowsocksR\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\n```\n### 3. 客户端连接\n>客户端文件\nhttps://github.com/SSGamble/VpsClient.git\n\nWindows：代理模式 - 全局\n\n### 4. SSR 功能详细介绍 & 使用教程\n>参考教程\nhttps://lolico.moe/tutorial/shadowsocksr.html/comment-page-1\n\n#### 1. 推荐使用的加密/协议/混淆\n\n加密推荐使用 none\n协议推荐使用 chain_a\n混淆推荐使用 plain 或者 http_simple\n能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple\n\n#### 2. 代理规则\n代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。\n\n实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：\n\n- 绕过 xxx\n顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。\n\n- 绕过非大陆\n带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。\n\n- 用户自定义\n萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet\n\n- 全局\n顾名思义，所有被发送至 SSR 的流量都会走代理。\n\n日常使用我推荐使用“绕过局域网和大陆”的选项.\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000396s ]
---------------------------------------------------------------
[ 2018-07-10T17:18:35+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.045062s][吞吐率：22.19req/s] [内存消耗：2,015.25kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000496s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000936s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000289s ]
---------------------------------------------------------------
[ 2018-07-10T17:21:51+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.043389s][吞吐率：23.05req/s] [内存消耗：2,022.18kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5983',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
`翻墙` `VPN` `VPS` `SSR`

[TOC]

## 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
## 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
## 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局

## 4. SSR 功能详细介绍 & 使用教程
>参考教程
https://lolico.moe/tutorial/shadowsocksr.html/comment-page-1

### 1. 推荐使用的加密/协议/混淆

加密推荐使用 none
协议推荐使用 chain_a
混淆推荐使用 plain 或者 http_simple
能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple

### 2. 代理规则
代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。

实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：

- 绕过 xxx
顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。

- 绕过非大陆
带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。

- 用户自定义
萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet

- 全局
顾名思义，所有被发送至 SSR 的流量都会走代理。

日常使用我推荐使用“绕过局域网和大陆”的选项.

',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000401s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000884s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000352s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000620s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000226s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000234s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n`翻墙` `VPN` `VPS` `SSR`\r\n\r\n[TOC]\r\n\r\n## 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n## 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n## 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n\r\n## 4. SSR 功能详细介绍 & 使用教程\r\n>参考教程\r\nhttps://lolico.moe/tutorial/shadowsocksr.html/comment-page-1\r\n\r\n### 1. 推荐使用的加密/协议/混淆\r\n\r\n加密推荐使用 none\r\n协议推荐使用 chain_a\r\n混淆推荐使用 plain 或者 http_simple\r\n能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple\r\n\r\n### 2. 代理规则\r\n代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。\r\n\r\n实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：\r\n\r\n- 绕过 xxx\r\n顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。\r\n\r\n- 绕过非大陆\r\n带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。\r\n\r\n- 用户自定义\r\n萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet\r\n\r\n- 全局\r\n顾名思义，所有被发送至 SSR 的流量都会走代理。\r\n\r\n日常使用我推荐使用“绕过局域网和大陆”的选项.\r\n\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000414s ]
---------------------------------------------------------------
[ 2018-07-10T17:21:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.044440s][吞吐率：22.50req/s] [内存消耗：1,975.48kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/177',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000401s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000979s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000305s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000722s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000261s ]
---------------------------------------------------------------
[ 2018-07-10T17:22:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/177.html
[ info ] qingrang.top/daily/admin/note/editnote/id/177.html [运行时间：0.043356s][吞吐率：23.06req/s] [内存消耗：2,023.14kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000404s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000878s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000342s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000650s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000237s ]
---------------------------------------------------------------
[ 2018-07-10T17:22:28+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.046388s][吞吐率：21.56req/s] [内存消耗：2,022.14kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5973',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
`翻墙` `VPS` `SSR`

[TOC]

## 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
## 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
## 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局

## 4. SSR 功能详细介绍 & 使用教程
>参考教程
https://lolico.moe/tutorial/shadowsocksr.html/comment-page-1

### 1. 推荐使用的加密/协议/混淆

加密推荐使用 none
协议推荐使用 chain_a
混淆推荐使用 plain 或者 http_simple
能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple

### 2. 代理规则
代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。

实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：

- 绕过 xxx
顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。

- 绕过非大陆
带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。

- 用户自定义
萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet

- 全局
顾名思义，所有被发送至 SSR 的流量都会走代理。

日常使用我推荐使用“绕过局域网和大陆”的选项.

',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000390s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000890s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000298s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000653s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000239s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000232s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n`翻墙` `VPS` `SSR`\r\n\r\n[TOC]\r\n\r\n## 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n## 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n## 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n\r\n## 4. SSR 功能详细介绍 & 使用教程\r\n>参考教程\r\nhttps://lolico.moe/tutorial/shadowsocksr.html/comment-page-1\r\n\r\n### 1. 推荐使用的加密/协议/混淆\r\n\r\n加密推荐使用 none\r\n协议推荐使用 chain_a\r\n混淆推荐使用 plain 或者 http_simple\r\n能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple\r\n\r\n### 2. 代理规则\r\n代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。\r\n\r\n实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：\r\n\r\n- 绕过 xxx\r\n顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。\r\n\r\n- 绕过非大陆\r\n带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。\r\n\r\n- 用户自定义\r\n萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet\r\n\r\n- 全局\r\n顾名思义，所有被发送至 SSR 的流量都会走代理。\r\n\r\n日常使用我推荐使用“绕过局域网和大陆”的选项.\r\n\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000448s ]
---------------------------------------------------------------
[ 2018-07-10T17:22:28+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.041815s][吞吐率：23.91req/s] [内存消耗：1,975.53kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000397s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000887s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000461s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000646s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000212s ]
---------------------------------------------------------------
[ 2018-07-10T17:23:46+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.044094s][吞吐率：22.68req/s] [内存消耗：2,023.86kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '3040',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 翻墙相关知识
[TOC]

## 专业名词介绍

### vps
>Virtual private server - 虚拟专用服务器

是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。

### vpn
>Virtual Private Network - 虚拟私人网络

是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。

由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。

## 翻墙基本原理

正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000473s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001002s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='翻墙相关知识',`content`='# 翻墙相关知识\n[TOC]\n\n## 专业名词介绍\n\n### vps\n>Virtual private server - 虚拟专用服务器\n\n是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。\n\n### vpn\n>Virtual Private Network - 虚拟私人网络\n\n是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。\n\n由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。\n\n## 翻墙基本原理\n\n正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000404s ]
---------------------------------------------------------------
[ 2018-07-10T17:26:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/177.html
[ info ] qingrang.top/daily/admin/note/editnote/id/177.html [运行时间：0.044140s][吞吐率：22.66req/s] [内存消耗：2,023.13kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000387s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000904s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000312s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000610s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000232s ]
---------------------------------------------------------------
[ 2018-07-10T17:26:18+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/177.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/177.html [运行时间：0.044315s][吞吐率：22.57req/s] [内存消耗：2,023.88kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '6548',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 搬瓦工搭建 SSR
`翻墙` `VPS` `SSR`

[TOC]

## 1. 购买搬瓦工服务器
https://www.bawagon.com/kvmvps/
## 2. 搬瓦工 vps 搭建 ssr
>参考教程
https://www.jiongjun.cc/banwagong/35.html
>一键搭建脚本
https://teddysun.com/486.html

1. xshell 连接服务器
2. 按顺序执行以下命令

```
cd /usr/local/

wget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh
// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget

chmod +x shadowsocks-all.sh

//进入安装界面，此处安装 2)ShadowsocksR
./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log
```
## 3. 客户端连接
>客户端文件
https://github.com/SSGamble/VpsClient.git

Windows：代理模式 - 全局

## 4. SSR 功能详细介绍 & 使用教程
>参考教程
https://lolico.moe/tutorial/shadowsocksr.html/comment-page-1

### 1. 推荐使用的加密/协议/混淆

加密推荐使用 none
协议推荐使用 chain_a
混淆推荐使用 plain 或者 http_simple
能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple

### 2. 代理规则
代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。

直连模式就是流量不走代理 ，PAC 模式简单说就是国内地址不走代理，国外走代理，全局模式就是不管国内国外，所有流量通过代理服务器访问。

实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：

- 绕过 xxx
顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。

- 绕过非大陆
带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。

- 用户自定义
萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet

- 全局
顾名思义，所有被发送至 SSR 的流量都会走代理。

日常使用我推荐使用“绕过局域网和大陆”的选项.

',
  'groups' => 'Linux',
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000392s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001030s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000326s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000677s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000236s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000232s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=177,`p_id`=2,`title`='搬瓦工搭建 SSR\r',`content`='# 搬瓦工搭建 SSR\r\n`翻墙` `VPS` `SSR`\r\n\r\n[TOC]\r\n\r\n## 1. 购买搬瓦工服务器\r\nhttps://www.bawagon.com/kvmvps/\r\n## 2. 搬瓦工 vps 搭建 ssr\r\n>参考教程\r\nhttps://www.jiongjun.cc/banwagong/35.html\r\n>一键搭建脚本\r\nhttps://teddysun.com/486.html\r\n\r\n1. xshell 连接服务器\r\n2. 按顺序执行以下命令\r\n\r\n```\r\ncd /usr/local/\r\n\r\nwget –no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh\r\n// 如果提示找不到 wget 命令，那么先安装 wget 命令，执行命令语句：  yum install wget\r\n\r\nchmod +x shadowsocks-all.sh\r\n\r\n//进入安装界面，此处安装 2)ShadowsocksR\r\n./shadowsocks-all.sh 2>&1 | tee shadowsocks-all.log\r\n```\r\n## 3. 客户端连接\r\n>客户端文件\r\nhttps://github.com/SSGamble/VpsClient.git\r\n\r\nWindows：代理模式 - 全局\r\n\r\n## 4. SSR 功能详细介绍 & 使用教程\r\n>参考教程\r\nhttps://lolico.moe/tutorial/shadowsocksr.html/comment-page-1\r\n\r\n### 1. 推荐使用的加密/协议/混淆\r\n\r\n加密推荐使用 none\r\n协议推荐使用 chain_a\r\n混淆推荐使用 plain 或者 http_simple\r\n能用 plain 没问题就用 plain，当在 plain 情况下你察觉到网络有异样*，且你了解http_simple 混淆参数的用途，再酌情使用 http_simple\r\n\r\n### 2. 代理规则\r\n代理规则指的是，对于所有通过系统HTTP代理或者SOCKS5代理被发送至 SSR 的流量，按照你设置的规则进行代理，即智能代理。\r\n\r\n直连模式就是流量不走代理 ，PAC 模式简单说就是国内地址不走代理，国外走代理，全局模式就是不管国内国外，所有流量通过代理服务器访问。\r\n\r\n实际上这个设置项也没有什么可以说明的内容，每个选项也写的很清楚。这里稍微解释下某些名词及选项：\r\n\r\n- 绕过 xxx\r\n顾名思义，绕过就是不走代理，例如选择项中的“绕过局域网“就是当你浏览局域网网页的时候不会走 SSR 代理（最常见的例如学校、公司的内部网网页），”绕过大陆“就是所有国内大陆的流量都不会通过 SSR 代理。\r\n\r\n- 绕过非大陆\r\n带有这个的一项实际上是给从国外翻回来的人用的，我们这些翻出去的并用不到。\r\n\r\n- 用户自定义\r\n萌新可以直接无视这一项。自定义文件为 SSR 根目录下的user-rule.txt，你可以在这一文件中自己定义代理规则，格式详见：https://adblockplus.org/en/filter-cheatsheet\r\n\r\n- 全局\r\n顾名思义，所有被发送至 SSR 的流量都会走代理。\r\n\r\n日常使用我推荐使用“绕过局域网和大陆”的选项.\r\n\r\n',`groups`='Linux'  WHERE  `id` = 177 [ RunTime:0.000420s ]
---------------------------------------------------------------
[ 2018-07-10T17:26:18+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/177.html
[ info ] qingrang.top/daily/admin/note/shownote/id/177.html [运行时间：0.044734s][吞吐率：22.35req/s] [内存消耗：1,975.74kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/177.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000381s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000890s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000326s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000715s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000214s ]
---------------------------------------------------------------
[ 2018-07-10T17:32:57+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.043504s][吞吐率：22.99req/s] [内存消耗：1,985.85kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '21995',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Basics',
  'content' => '# 翻墙相关知识
[TOC]

## 翻墙基本原理

正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)

## 专业名词介绍

### vps
>Virtual private server - 虚拟专用服务器

是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。

### vpn
>Virtual Private Network - 虚拟私人网络

是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。

由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。

### ss/ssr

ss 和 ssr 它的原理都是一样的，就是 socks5 代理。socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 socks 代理比其他应用层代理要快的多。socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。

通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 google，你的电脑发出请求，流量通过 socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 google，再把访问结果传回你的电脑，这样就实现了翻墙。


------------
ss：ss 作者是 clowwindy，大约两年前，他自己为了翻墙写了shadowsocks，简称 ss 或者叫影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了 github 上，然后就火了，但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个好像是一个国外的大兄弟在维护。

ssr：在 ss 作者被喝茶之后，github 上出现了一个叫 breakwa11 的帐号，声称 ss 容易被防火墙检测到，所以**在混淆和协议方面做了改进**，更加不容易被检测到，而且兼容 ss，改进后的项目叫 shadowsocks-R，简称 ssr。

------------

### vpn 和 ss/ssr 的区别和优缺点

ss/ssr 的目的就是用来翻墙的，而 vpn 的目的是用来加密企业数据的，因为 vpn 是走的专用通道，它是用来给企业传输加密数据用的，所以 vpn 的流量特征很明显，防火墙直接分析你的流量，如果特征匹配，直接封掉。对于 vpn 来说安全是第一位的，而对于 ss/ssr 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所有流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是检测不到你在翻墙的。两者的出发点和着重点就不同，ss/ssr 更注重流量的混淆加密。如果要安全匿名上网，可以用 vpn + tor 或者 ss/ssr + tor。

而安全性方面还要补充的一点就是，国内 vpn 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。',
  'test-editormd-html-code' => '<h1 id="h1-u7FFBu5899u76F8u5173u77E5u8BC6"><a name="翻墙相关知识" class="reference-link"></a><span class="header-link octicon octicon-link"></span>翻墙相关知识</h1><div class="markdown-toc editormd-markdown-toc">[TOC]</div><h2 id="h2-u7FFBu5899u57FAu672Cu539Fu7406"><a name="翻墙基本原理" class="reference-link"></a><span class="header-link octicon octicon-link"></span>翻墙基本原理</h2><p>正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。<br><img src="http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png" alt="mark"></p>
<h2 id="h2-u4E13u4E1Au540Du8BCDu4ECBu7ECD"><a name="专业名词介绍" class="reference-link"></a><span class="header-link octicon octicon-link"></span>专业名词介绍</h2><h3 id="h3-vps"><a name="vps" class="reference-link"></a><span class="header-link octicon octicon-link"></span>vps</h3><blockquote>
<p>Virtual private server - 虚拟专用服务器</p>
</blockquote>
<p>是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。</p>
<h3 id="h3-vpn"><a name="vpn" class="reference-link"></a><span class="header-link octicon octicon-link"></span>vpn</h3><blockquote>
<p>Virtual Private Network - 虚拟私人网络</p>
</blockquote>
<p>是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。</p>
<p>由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。</p>
<h3 id="h3-ss-ssr"><a name="ss/ssr" class="reference-link"></a><span class="header-link octicon octicon-link"></span>ss/ssr</h3><p>ss 和 ssr 它的原理都是一样的，就是 socks5 代理。socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 socks 代理比其他应用层代理要快的多。socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。</p>
<p>通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 google，你的电脑发出请求，流量通过 socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 google，再把访问结果传回你的电脑，这样就实现了翻墙。</p>
<hr>
<p>ss：ss 作者是 clowwindy，大约两年前，他自己为了翻墙写了shadowsocks，简称 ss 或者叫影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了 github 上，然后就火了，但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个好像是一个国外的大兄弟在维护。</p>
<p>ssr：在 ss 作者被喝茶之后，github 上出现了一个叫 breakwa11 的帐号，声称 ss 容易被防火墙检测到，所以<strong>在混淆和协议方面做了改进</strong>，更加不容易被检测到，而且兼容 ss，改进后的项目叫 shadowsocks-R，简称 ssr。</p>
<hr>
<h3 id="h3-vpn-ss-ssr-"><a name="vpn 和 ss/ssr 的区别和优缺点" class="reference-link"></a><span class="header-link octicon octicon-link"></span>vpn 和 ss/ssr 的区别和优缺点</h3><p>ss/ssr 的目的就是用来翻墙的，而 vpn 的目的是用来加密企业数据的，因为 vpn 是走的专用通道，它是用来给企业传输加密数据用的，所以 vpn 的流量特征很明显，防火墙直接分析你的流量，如果特征匹配，直接封掉。对于 vpn 来说安全是第一位的，而对于 ss/ssr 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所有流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是检测不到你在翻墙的。两者的出发点和着重点就不同，ss/ssr 更注重流量的混淆加密。如果要安全匿名上网，可以用 vpn + tor 或者 ss/ssr + tor。</p>
<p>而安全性方面还要补充的一点就是，国内 vpn 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。</p>
',
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000408s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000863s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000272s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000262s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000705s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('翻墙相关知识\r' , '# 翻墙相关知识\r\n[TOC]\r\n\r\n## 翻墙基本原理\r\n\r\n正常网络通信时，所有网络请求都是通过我们的物理网卡直接发送出去。而 VPN 是客户端使用相应的 VPN 协议先与 VPN 服务器进行通信，成功连接后就在操作系统内建立一个虚拟网卡，一般来说默认 PC 上所有网络通信都从这虚拟网卡上进出，经过 VPN 服务器中转之后再到达目的地。\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/0HdBh8IGGj.png)\r\n\r\n## 专业名词介绍\r\n\r\n### vps\r\n>Virtual private server - 虚拟专用服务器\r\n\r\n是将一台服务器分区成多个虚拟专享服务器的服务，VPS 就是一台拥有公网 IP 的服务器。\r\n\r\n### vpn\r\n>Virtual Private Network - 虚拟私人网络\r\n\r\n是一种常用于连接团体与团体间的私人网络的通讯方法。它利用已加密的通道协议来达到保密、消息准确性等私人消息安全效果。\r\n\r\n由于中国大陆境内对于海外网络的限制及封锁，所以中国大陆兴盛起以采用免费或付费的虚拟专用网（VPN）进行海外网络连接服务的方法进行翻墙。\r\n\r\n### ss/ssr\r\n\r\nss 和 ssr 它的原理都是一样的，就是 socks5 代理。socks 代理只是简单的传递数据包，而不必关心是何种协议，所以 socks 代理比其他应用层代理要快的多。socks5 代理是把你的网络数据请求通过一条连接你和代理服务器之间的通道，由服务器转发到目的地，这个过程中你是没有通过一条专用通道的，只是数据包的发出，然后被代理服务器收到，整个过程并没有额外的处理。\r\n\r\n通俗的说，现在你有一个代理服务器在香港，比如你现在想要访问 google，你的电脑发出请求，流量通过 socks5 连接发到你在香港的服务器上，然后再由你在香港的服务器去访问 google，再把访问结果传回你的电脑，这样就实现了翻墙。\r\n\r\n\r\n------------\r\nss：ss 作者是 clowwindy，大约两年前，他自己为了翻墙写了shadowsocks，简称 ss 或者叫影梭，后来他觉得这个东西非常好用，速度快，而且不会被封锁，他就把源码共享在了 github 上，然后就火了，但是后来作者被请去喝茶，删了代码，并且保证不再参与维护更新。现在这个好像是一个国外的大兄弟在维护。\r\n\r\nssr：在 ss 作者被喝茶之后，github 上出现了一个叫 breakwa11 的帐号，声称 ss 容易被防火墙检测到，所以**在混淆和协议方面做了改进**，更加不容易被检测到，而且兼容 ss，改进后的项目叫 shadowsocks-R，简称 ssr。\r\n\r\n------------\r\n\r\n### vpn 和 ss/ssr 的区别和优缺点\r\n\r\nss/ssr 的目的就是用来翻墙的，而 vpn 的目的是用来加密企业数据的，因为 vpn 是走的专用通道，它是用来给企业传输加密数据用的，所以 vpn 的流量特征很明显，防火墙直接分析你的流量，如果特征匹配，直接封掉。对于 vpn 来说安全是第一位的，而对于 ss/ssr 来说穿透防火墙是第一位，抗干扰性强，而且对流量做了混淆，所有流量在通过防火墙的时候，基本上都被识别为普通流量，也就是说你翻墙了，但是政府是检测不到你在翻墙的。两者的出发点和着重点就不同，ss/ssr 更注重流量的混淆加密。如果要安全匿名上网，可以用 vpn + tor 或者 ss/ssr + tor。\r\n\r\n而安全性方面还要补充的一点就是，国内 vpn 服务商，政府是很容易拿到他们的服务器日志的，如果他们真的这样做了，你翻墙做了什么，一览无余。' , 'Basics' , 2 , '2018-07-10') [ RunTime:0.000337s ]
---------------------------------------------------------------
[ 2018-07-10T17:33:01+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.087936s][吞吐率：11.37req/s] [内存消耗：3,239.01kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000393s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000889s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002508s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000825s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000284s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000254s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000701s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000231s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000274s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000217s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000174s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000711s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000487s ]
---------------------------------------------------------------
[ 2018-07-10T17:41:14+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.041809s][吞吐率：23.92req/s] [内存消耗：2,082.65kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000416s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000978s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000302s ]
---------------------------------------------------------------
[ 2018-07-10T17:41:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/190.html
[ info ] qingrang.top/daily/admin/note/shownote/id/190.html [运行时间：0.041103s][吞吐率：24.33req/s] [内存消耗：1,976.45kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000357s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000924s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000303s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000608s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000240s ]
---------------------------------------------------------------
[ 2018-07-10T17:46:48+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/190.html
[ info ] qingrang.top/daily/admin/note/shownote/id/190.html [运行时间：0.041214s][吞吐率：24.26req/s] [内存消耗：1,976.86kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'pragma' => 'no-cache',
  'cache-control' => 'no-cache',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000415s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000875s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000360s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000667s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000212s ]
---------------------------------------------------------------
[ 2018-07-10T17:47:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/190.html
[ info ] qingrang.top/daily/admin/note/shownote/id/190.html [运行时间：0.052657s][吞吐率：18.99req/s] [内存消耗：1,976.70kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.001765s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000995s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000324s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000671s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000212s ]
---------------------------------------------------------------
[ 2018-07-10T17:47:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.096364s][吞吐率：10.38req/s] [内存消耗：3,239.01kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000401s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001012s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002949s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000755s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000262s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000283s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000228s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000660s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000264s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000259s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000240s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000276s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000255s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000859s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000430s ]
---------------------------------------------------------------
[ 2018-07-10T17:47:20+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.040027s][吞吐率：24.98req/s] [内存消耗：2,082.65kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000460s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000940s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000315s ]
---------------------------------------------------------------
[ 2018-07-10T17:47:21+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/190.html
[ info ] qingrang.top/daily/admin/note/shownote/id/190.html [运行时间：0.041788s][吞吐率：23.93req/s] [内存消耗：1,976.37kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000350s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000877s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000605s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000249s ]
---------------------------------------------------------------
[ 2018-07-10T17:48:15+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.041284s][吞吐率：24.22req/s] [内存消耗：2,015.25kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000432s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000904s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000232s ]
---------------------------------------------------------------
[ 2018-07-10T17:48:33+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.042725s][吞吐率：23.41req/s] [内存消耗：2,014.49kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '75',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# 我不是药神
',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000517s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000881s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='我不是药神',`content`='# 我不是药神\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-07-10T19:05:10+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.042199s][吞吐率：23.70req/s] [内存消耗：1,996.34kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '26615',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'FilmReview',
  'content' => '# 我不是药神
经过查询影片的原型陆勇本身就是一个慢性粒细胞性白血病患者，「格列卫」有 4000 到 23500 的差价，《我不是药神》中，为了渲染人物形象，传达观点，程勇没有患病，并拉大了的差价，为了制造戏剧冲突，一开始程勇在替人买药的同时还赚取暴利，直到后来才明悟。但在现实中，陆勇并没有这样做。现实更有逻辑性，陆勇也比电影更具传奇性。

很多人拿这部影片和韩国的一些现实题材电影作对比，但在我看来这部影片太过于刻意煽情，且独独站在了弱者的立场，有失偏颇，有些许《海豚湾》的感觉。无论是在警察局患病的阿婆对警察说的一番话，还是程勇走出吕受益病房时走廊里一众病人无力的眼神，亦或是影片结尾程勇被抓时道路两旁的病友齐刷刷的取下口罩，这一系列的镜头都明显经过了导演刻意的布置，极具煽情效果，试图一次又一次的将情绪烘托至顶点，坐在我旁边的朋友也是不停的抽泣，这些镜头最好的达到了他想要的煽情效果。至此，影片也烘托出了韩影的克制与隐忍，没有刻意的煽情却完美的把控着观众的情绪。

基于国情，国产电影要上映那么他必须要「含蓄」，限制一多，便很难出好片子，这是电影不是纪录片，煽情，渲染气氛，全力表现想传达的观点，这都没错，尽管是这样的电影在当下可在院线上映的影片中已然是寥寥无几，应该庆幸至少我们也有了这种为民生发声的电影。

假药贩子张长林说：“这个世界上只有一种病，穷病。”在如今这个物质极其充裕的时代，穷能限制想象力，穷能扼杀你选择的权利，“穷”不再是形容词，而是变成了一个名词和一个标签。穷，就是原罪。

牧师，总是把“愿主保佑你”挂在嘴边，主呢？主救不了你，甚至于当下你也救不了你自己。

领班跳舞的时候，思慧起哄的声音最大，喊脱裤子的时候，甚至有了恶狠狠的发泄报复意味，当程勇看向她的时候，思慧的眼睛里含着满满的眼泪。可以想象思慧曾经受到过怎样的侮辱，委屈与轻慢。思慧拼了命和病魔抢女儿，可是照她这种养育方式，这孩子就算活了下来，将来又能过得好么？

>站在制药公司的角度看问题：药为什么这么贵？

剧中的患者们，包括现在看了这个片子的观众们，都在抱怨特效药为什么要卖那么贵，为什么要研发那么久，为什么我们没有自主研发的国产靶向药。但你去高考报志愿的版面看看，全都在生物劝退，制药劝退，化工劝退，天灭理化生，退坑保平安，计算机大法好，金融饭碗宝。生物化学圈子里，读博读不下去转行的，因为待遇差养不起家买不起房不敢生孩子被迫转行的，在实验室待太久已经和社会脱节的，甚至三四十岁项目做不出成果没结婚没存款最后压力太大跳楼的，多的很。

至于投资圈，很少有资本愿意给生物行业砸钱，毕竟坑太大，风险太高，回报率太低，回报周期又太长。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/LEb4c4j227.png)

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/aB179eH2mJ.png)

一个制药公司的研发投入成本都赶得上一个国家一年的全国生产总值了，就问普通资本谁敢轻易碰这个无底洞。如果真的是像大家说的一样为了牟取暴利，为什么不选来钱快来钱多成本小的项目，反而要填医药这个坑？项目成功了还好，项目一旦失败，几十亿几百亿就等于打了水漂。

这也是印度药这么便宜的原因，因为它是盗版，他只要照抄配方就可以了，不需要自己长年累月的研发，它的科研成本为零。

所以问题就回来了，穷人不想死，那辛辛苦苦搞研发的科学家和投资人，就应该死么？

药界流传着一种说法：**靶向药之所以昂贵到要卖几万元，那是因为你买到的已经是第二颗药，第一颗药的价格是数十亿美金**，从中可见研发成本巨大。靶向药费用高的另一个原因是它并非“常用药“，患者人群的减少势必造成平摊成本提升。
',
  'test-editormd-html-code' => '<h1 id="h1-u6211u4E0Du662Fu836Fu795E"><a name="我不是药神" class="reference-link"></a><span class="header-link octicon octicon-link"></span>我不是药神</h1><p>经过查询影片的原型陆勇本身就是一个慢性粒细胞性白血病患者，「格列卫」有 4000 到 23500 的差价，《我不是药神》中，为了渲染人物形象，传达观点，程勇没有患病，并拉大了的差价，为了制造戏剧冲突，一开始程勇在替人买药的同时还赚取暴利，直到后来才明悟。但在现实中，陆勇并没有这样做。现实更有逻辑性，陆勇也比电影更具传奇性。</p>
<p>很多人拿这部影片和韩国的一些现实题材电影作对比，但在我看来这部影片太过于刻意煽情，且独独站在了弱者的立场，有失偏颇，有些许《海豚湾》的感觉。无论是在警察局患病的阿婆对警察说的一番话，还是程勇走出吕受益病房时走廊里一众病人无力的眼神，亦或是影片结尾程勇被抓时道路两旁的病友齐刷刷的取下口罩，这一系列的镜头都明显经过了导演刻意的布置，极具煽情效果，试图一次又一次的将情绪烘托至顶点，坐在我旁边的朋友也是不停的抽泣，这些镜头最好的达到了他想要的煽情效果。至此，影片也烘托出了韩影的克制与隐忍，没有刻意的煽情却完美的把控着观众的情绪。</p>
<p>基于国情，国产电影要上映那么他必须要「含蓄」，限制一多，便很难出好片子，这是电影不是纪录片，煽情，渲染气氛，全力表现想传达的观点，这都没错，尽管是这样的电影在当下可在院线上映的影片中已然是寥寥无几，应该庆幸至少我们也有了这种为民生发声的电影。</p>
<p>假药贩子张长林说：“这个世界上只有一种病，穷病。”在如今这个物质极其充裕的时代，穷能限制想象力，穷能扼杀你选择的权利，“穷”不再是形容词，而是变成了一个名词和一个标签。穷，就是原罪。</p>
<p>牧师，总是把“愿主保佑你”挂在嘴边，主呢？主救不了你，甚至于当下你也救不了你自己。</p>
<p>领班跳舞的时候，思慧起哄的声音最大，喊脱裤子的时候，甚至有了恶狠狠的发泄报复意味，当程勇看向她的时候，思慧的眼睛里含着满满的眼泪。可以想象思慧曾经受到过怎样的侮辱，委屈与轻慢。思慧拼了命和病魔抢女儿，可是照她这种养育方式，这孩子就算活了下来，将来又能过得好么？</p>
<blockquote>
<p>站在制药公司的角度看问题：药为什么这么贵？</p>
</blockquote>
<p>剧中的患者们，包括现在看了这个片子的观众们，都在抱怨特效药为什么要卖那么贵，为什么要研发那么久，为什么我们没有自主研发的国产靶向药。但你去高考报志愿的版面看看，全都在生物劝退，制药劝退，化工劝退，天灭理化生，退坑保平安，计算机大法好，金融饭碗宝。生物化学圈子里，读博读不下去转行的，因为待遇差养不起家买不起房不敢生孩子被迫转行的，在实验室待太久已经和社会脱节的，甚至三四十岁项目做不出成果没结婚没存款最后压力太大跳楼的，多的很。</p>
<p>至于投资圈，很少有资本愿意给生物行业砸钱，毕竟坑太大，风险太高，回报率太低，回报周期又太长。</p>
<p><img src="http://p0tymq1rr.bkt.clouddn.com/daily/180710/LEb4c4j227.png" alt="mark"></p>
<p><img src="http://p0tymq1rr.bkt.clouddn.com/daily/180710/aB179eH2mJ.png" alt="mark"></p>
<p>一个制药公司的研发投入成本都赶得上一个国家一年的全国生产总值了，就问普通资本谁敢轻易碰这个无底洞。如果真的是像大家说的一样为了牟取暴利，为什么不选来钱快来钱多成本小的项目，反而要填医药这个坑？项目成功了还好，项目一旦失败，几十亿几百亿就等于打了水漂。</p>
<p>这也是印度药这么便宜的原因，因为它是盗版，他只要照抄配方就可以了，不需要自己长年累月的研发，它的科研成本为零。</p>
<p>所以问题就回来了，穷人不想死，那辛辛苦苦搞研发的科学家和投资人，就应该死么？</p>
<p>药界流传着一种说法：<strong>靶向药之所以昂贵到要卖几万元，那是因为你买到的已经是第二颗药，第一颗药的价格是数十亿美金</strong>，从中可见研发成本巨大。靶向药费用高的另一个原因是它并非“常用药“，患者人群的减少势必造成平摊成本提升。</p>
',
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000389s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000873s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000275s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 0 LIMIT 1 [ RunTime:0.000257s ]
[ sql ] [ SQL ] SELECT `id` FROM `groups` WHERE  `groups` = 'FilmReview' LIMIT 1 [ RunTime:0.000219s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000681s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('我不是药神\r' , '# 我不是药神\r\n经过查询影片的原型陆勇本身就是一个慢性粒细胞性白血病患者，「格列卫」有 4000 到 23500 的差价，《我不是药神》中，为了渲染人物形象，传达观点，程勇没有患病，并拉大了的差价，为了制造戏剧冲突，一开始程勇在替人买药的同时还赚取暴利，直到后来才明悟。但在现实中，陆勇并没有这样做。现实更有逻辑性，陆勇也比电影更具传奇性。\r\n\r\n很多人拿这部影片和韩国的一些现实题材电影作对比，但在我看来这部影片太过于刻意煽情，且独独站在了弱者的立场，有失偏颇，有些许《海豚湾》的感觉。无论是在警察局患病的阿婆对警察说的一番话，还是程勇走出吕受益病房时走廊里一众病人无力的眼神，亦或是影片结尾程勇被抓时道路两旁的病友齐刷刷的取下口罩，这一系列的镜头都明显经过了导演刻意的布置，极具煽情效果，试图一次又一次的将情绪烘托至顶点，坐在我旁边的朋友也是不停的抽泣，这些镜头最好的达到了他想要的煽情效果。至此，影片也烘托出了韩影的克制与隐忍，没有刻意的煽情却完美的把控着观众的情绪。\r\n\r\n基于国情，国产电影要上映那么他必须要「含蓄」，限制一多，便很难出好片子，这是电影不是纪录片，煽情，渲染气氛，全力表现想传达的观点，这都没错，尽管是这样的电影在当下可在院线上映的影片中已然是寥寥无几，应该庆幸至少我们也有了这种为民生发声的电影。\r\n\r\n假药贩子张长林说：“这个世界上只有一种病，穷病。”在如今这个物质极其充裕的时代，穷能限制想象力，穷能扼杀你选择的权利，“穷”不再是形容词，而是变成了一个名词和一个标签。穷，就是原罪。\r\n\r\n牧师，总是把“愿主保佑你”挂在嘴边，主呢？主救不了你，甚至于当下你也救不了你自己。\r\n\r\n领班跳舞的时候，思慧起哄的声音最大，喊脱裤子的时候，甚至有了恶狠狠的发泄报复意味，当程勇看向她的时候，思慧的眼睛里含着满满的眼泪。可以想象思慧曾经受到过怎样的侮辱，委屈与轻慢。思慧拼了命和病魔抢女儿，可是照她这种养育方式，这孩子就算活了下来，将来又能过得好么？\r\n\r\n>站在制药公司的角度看问题：药为什么这么贵？\r\n\r\n剧中的患者们，包括现在看了这个片子的观众们，都在抱怨特效药为什么要卖那么贵，为什么要研发那么久，为什么我们没有自主研发的国产靶向药。但你去高考报志愿的版面看看，全都在生物劝退，制药劝退，化工劝退，天灭理化生，退坑保平安，计算机大法好，金融饭碗宝。生物化学圈子里，读博读不下去转行的，因为待遇差养不起家买不起房不敢生孩子被迫转行的，在实验室待太久已经和社会脱节的，甚至三四十岁项目做不出成果没结婚没存款最后压力太大跳楼的，多的很。\r\n\r\n至于投资圈，很少有资本愿意给生物行业砸钱，毕竟坑太大，风险太高，回报率太低，回报周期又太长。\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/LEb4c4j227.png)\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/aB179eH2mJ.png)\r\n\r\n一个制药公司的研发投入成本都赶得上一个国家一年的全国生产总值了，就问普通资本谁敢轻易碰这个无底洞。如果真的是像大家说的一样为了牟取暴利，为什么不选来钱快来钱多成本小的项目，反而要填医药这个坑？项目成功了还好，项目一旦失败，几十亿几百亿就等于打了水漂。\r\n\r\n这也是印度药这么便宜的原因，因为它是盗版，他只要照抄配方就可以了，不需要自己长年累月的研发，它的科研成本为零。\r\n\r\n所以问题就回来了，穷人不想死，那辛辛苦苦搞研发的科学家和投资人，就应该死么？\r\n\r\n药界流传着一种说法：**靶向药之所以昂贵到要卖几万元，那是因为你买到的已经是第二颗药，第一颗药的价格是数十亿美金**，从中可见研发成本巨大。靶向药费用高的另一个原因是它并非“常用药“，患者人群的减少势必造成平摊成本提升。\r\n' , 'FilmReview' , 20 , '2018-07-10') [ RunTime:0.000330s ]
---------------------------------------------------------------
[ 2018-07-10T19:05:11+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.091753s][吞吐率：10.90req/s] [内存消耗：3,245.91kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000399s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000879s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002210s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000712s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000265s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000238s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000228s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000636s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000212s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000283s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000233s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000254s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000184s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000729s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000477s ]
---------------------------------------------------------------
[ 2018-07-10T19:05:17+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/191.html
[ info ] qingrang.top/daily/admin/note/shownote/id/191.html [运行时间：0.041794s][吞吐率：23.93req/s] [内存消耗：1,977.13kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '191',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000411s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000890s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 191 LIMIT 1 [ RunTime:0.000323s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000644s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000238s ]
---------------------------------------------------------------
[ 2018-07-10T19:07:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.047076s][吞吐率：21.24req/s] [内存消耗：2,622.59kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '6',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => 'vi',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000404s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000906s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%vi%' OR `content` LIKE '%vi%' ) ORDER BY id desc [ RunTime:0.003571s ]
---------------------------------------------------------------
[ 2018-07-10T19:07:45+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.042728s][吞吐率：23.40req/s] [内存消耗：2,110.70kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '7',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => 'vim',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000348s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001496s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%vim%' OR `content` LIKE '%vim%' ) ORDER BY id desc [ RunTime:0.004704s ]
---------------------------------------------------------------
[ 2018-07-10T19:07:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/113
[ info ] qingrang.top/daily/admin/note/shownote/id/113 [运行时间：0.043084s][吞吐率：23.21req/s] [内存消耗：2,003.17kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000375s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000871s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000335s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000592s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000223s ]
---------------------------------------------------------------
[ 2018-07-10T19:10:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/191.html
[ info ] qingrang.top/daily/admin/note/shownote/id/191.html [运行时间：0.042738s][吞吐率：23.40req/s] [内存消耗：1,977.61kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'pragma' => 'no-cache',
  'cache-control' => 'no-cache',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '191',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000425s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000899s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 191 LIMIT 1 [ RunTime:0.000341s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000633s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000216s ]
---------------------------------------------------------------
[ 2018-07-10T19:12:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.090123s][吞吐率：11.10req/s] [内存消耗：3,245.91kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000400s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000880s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002110s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000660s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000253s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000263s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000236s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000684s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000207s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000211s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000262s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000258s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000783s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000429s ]
---------------------------------------------------------------
[ 2018-07-10T20:45:48+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.058495s][吞吐率：17.10req/s] [内存消耗：2,150.27kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '15',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Linux',
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000935s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001658s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Linux' ORDER BY id desc [ RunTime:0.001471s ]
---------------------------------------------------------------
[ 2018-07-10T20:45:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/113
[ info ] qingrang.top/daily/admin/note/shownote/id/113 [运行时间：0.046679s][吞吐率：21.42req/s] [内存消耗：2,003.17kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000601s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001110s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000509s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000724s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000291s ]
---------------------------------------------------------------
[ 2018-07-10T20:50:25+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/113
[ info ] qingrang.top/daily/admin/note/editnote/id/113 [运行时间：0.048640s][吞吐率：20.56req/s] [内存消耗：2,051.00kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000707s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001245s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000453s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000736s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000292s ]
---------------------------------------------------------------
[ 2018-07-10T20:51:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/113.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/113.html [运行时间：0.049251s][吞吐率：20.30req/s] [内存消耗：2,134.57kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '33521',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/113',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# Linux 常用命令
[TOC]
## 文件操作
>文件类型：

d	目录
\\-	文件
l	连接文件
b	设备文件里的可供存储的接口设备
c	设备文件里的串行端口设备(如鼠标，键盘)
>查看文件内容：

cat
　-n	//加行号
tac  //反向列示
nl 		//添加行号打印
>翻页查看：

more	//不能向前翻页
less
head  -n  20  demo.txt	//取出前面20行
tail  -n  20  demo.txt	//取出后面20行
od		//非纯文本
>创建文件夹： mkdir

>创建文件或修改文件时间： touch

>删除文件： rm		 

rm  -rf  test
>删除空的目录：rmdir

>移动文件：mv

mv  文件名  新文件名		//改文件名
>复制文件：cp

cp  源文件  目标文件
cp  -a  源文件  目标文件
>命令查看文件时3个时间点解析  * stat

>列出文件 ls

ls  -l
>取得路径的文件名与目录名称

basename  /etc/sysconfig/network		//文件名
==》network
dirname  /etc/sysconfig/network		//目录名
==》/etc/sysconfig 
>查找：

find  /  -name  filename
## 文件权限
>查看用户文件权限 

ls  -l  -d  xx
>文件默认权限：umask

>文件隐藏属性：

chattr	//设置
lsattr	//显示

>文件特殊权限：

SUID	4
SGID	2
SBIT	1
chmod  4755  filename

>chgrp	 改变文件所属用户组：

chgrp  组名  文件名
>chown  改变文件所有者：

chown  bin  test  //将 test 的拥有者改为 bin 这个账号
>chmod  改变文件的权限：

r = 4
w = 2
x = 1
u 所属用户 g 所属用户组 o 其他用户
chmod  u=rw,g-r,o+w  demo.txt
chmod  -R  777  demo.txt 
## 账号管理
>新增用户

useradd 用户名
>设置密码

passwd 用户名
>查询用户

who
>用户对谈

write  用户名 pts/x
mesg  n	//不接收消息
>建立用户组

groupadd 组名
>将用户加入到组

gpasswd –a 用户名  组名  
>从组中删除用户

gpasswd –d 用户名  组名  
>查看用户属于某组

groups  用户名
>删除用户组

groupdel  组名
## 压缩与解压缩
>.zip

解压：unzip  FileName.zip
压缩：zip -r FileName.zip  DirName
## Vim
:set  nu		//显示行号
:set  nonu		//取消显示行号
>移动光标：

G		//移动到文件最后一行
nG		//移动到文件的第n行
20j		//向下20行   
n-		//向上跳n行   
20gg		//跳到20行   
>复制，粘贴，删除：

yy		//复制光标所在行
nyy		//复制光标所在向下n行

p(P)	//粘贴到下(上)一行

dd		//删除光标所在行
Ndd		//删除光标所在行以下的N行
>查找替换：

/word		//向下查找word
?word		//向上查找word
n		//重复前一个查找动作
N		//反向重复前一个查找动作
>保存，离开：

:wq		//保存后离开
:q!		//不保存离开
## 正则表达式
grep
##yum
-y	//自动选择y，全自动
>查看可用的仓库：

yum  repolist
yum  repolist  enabled 
yum  repolist  all
yum  repolist  disabled
>安装软件：

yum  install  xxx
yum  localinstall 安装本地的RPM包
yum　reinstall  [RPM包] 重新安装包
>更新软件包：

yum  check-update	//检查可更新的rpm包
yum  update	//更新所有的rpm包
yum  update  kernel  kernel-source//更新指定的rpm包,如更新kernel和kernel source
>删除软件：

yum  remove  xxx
yum  erase  xxx
yum  -y  remove  httpd*  //卸载多个相类似的软件
yum  -y  remove  httpd php php-gd mysql //卸载多个非类似软件时
>查询软件信息：

yum  search  XXX	//会搜索所有可用rpm的描述
>软件包列表：

yum  list  all 	//列出所有可安装的软件包
yum  list  available 		//仓库中没有安装的  
yum  list  installed  	//已经安装的
yum  list  updates  	//可用的升级
yum  list  extras		//列出所有已安装但不在仓库內的软件包
>查找软件包中的文件：

yum  provides  /etc/inittab		//查看哪个软件包提供了指定的功能
>依赖关系：

yum  deplist  XXX	 //列出包的依赖
>清除YUM缓存：

yum会把下载的软件包和header存储在cache中，而不会自动删除。
yum  clean  headers	 //清除headers
yum  clean  packages 	//清除下载的rpm包
yum clean all   //一股脑儿端
>软件组：

yum  grouplist
yum  groupinstalll  "Development Tools"
## 网络配置
>网络服务：

service  network  start		//启动network服务
service  network  stop		//关闭network服务 
service  network  restart	//重启network服务
chkconfig  --level  234  服务名  on	/off		// 设置服务在运行级别为2、3、4、的情况下都是on（开启）的状态(在系统启动时生效，并不是立即生效的)
>网络设备命名：

lo 回环设备
eth0 系统内第一块以太网卡
ppp0 系统内第一个串行设备(多数出现在使用ADSL拨入Internet时)
>网络配置：

ifconfig		//暂时的网络配置
ifconfig   -a 		//查看所有网卡IP
ifconfig  eth0 	//查看特定网卡IP
ifup  eth0 		//打开网络
ifdown  eth0		//关闭网络
ifconfig  eth0  192.168.120.56  netmask  255.255.255.0  broadcast 192.168.120.255		//手动设置IP
>修改网卡配置文件:  /etc/sysconfig/network-scripts/ifcfg-ethX

BOOTPROTO=static 	#协议类型 dhcp bootp none
IPADDR=192.168.1.90 	#网络IP地址
NETMASK=255.255.255.0 	#网络子网地址
GATEWAY=192.168.1.1 	#网关地址
BROADCAST=192.168.1.255 	#广播地址
HWADDR=00:0C:29:FE:1A:09	#网卡MAC地址
>修改主机名：

临时修改
hostname  主机名
永久修改
编辑主机名配置文件文件（/etc/sysconfig/network）；
同时修改/etc/hosts文件（ip与域名的对应关系）
>DNS客户端配置:

编辑/etc/hosts
本地域名解析数据文件
在DNS被检索前先查询
编辑/etc/resolv.conf
添加dns服务器 nameserver xx.xx.xx.xx
如果指定多台nameserver，系统会按照次序检索服务器
## 进程管理
ps			//查看进程
　-l 仅查看自己bash相关进程
　a 显示与终端有关的所有进程（包括其他用户的进程）
　r 只显示正在运行的进程。显示运行中的进程;
　x 显示与终端无关的进程（服务程序）。
　u 有效用户（effective user）相关的进程；按用户名和启动时间的顺序来显示进程;
ps  -l  仅查看自己bash相关进程，输出项含义：
　F ：进程标识（Flag）。4表示进程的权限是root，1表示此子进程仅可进行fork而无法实际exec
　S：进程状态
　UID/PID/PPID：用户ID，进程ID，父进程ID
　C：CPU使用率
　PRI/NI：Priority/Nice 优先级。值越小则越快被CPU执行。
　ADDR：该进程在内存的哪部分，如果是running的进程，会是“-”。
　SZ：进程用掉的内存。
　WCHAN：目前进程是否运行，“-”表示正在运行中。
　TTY：登录者终端机位置。tty1-tty6是本地登录；若是远程登陆则使用动态终端接口（pts/n）。
　TIME:花费CPU运行的时间
ps aux 输出项含义：
　USER PID %CPU  %MEM  VSZ  RSS  TTY STAT START TIME COMMAND
　USER：进程所有者。
　PID：进程号。
　%CPU：占用的 CPU 使用率。
　%MEM：占用的内存使用率。
　VSZ：占用的虚拟内存大小。该进程用掉的虚拟内存（KB）
　RSS：占用的内存大小。该进程占用的固定的内存量（KB）
　TTY：终端的次设备号码。
　STAT：该进程的状态。
　START：进程开始时间。
　TIME：执行的时间。
　COMMAND：所执行的命令
ctrl + z		//将一个正在运行的前台进程丢入后台,并默认暂停
ctrl + d 	//终止一个正在前台运行的进程（还有正常含义）
ctrl + c 	//终止一个正在前台运行的进程（还有强制含义）
命令 & 	//在后台运行命令，在该控制台退出后，进程会挂断
nohup  command  & 		//将一个进程直接丢入后台运行，而且在该控制台退出后，进程仍不挂断
jobs 		//显示后台作业和被挂起的进程
　-l 列出job number之外，同时列出PID号码
　-r 仅仅列出正在后台运行(run)的工作
　-s 仅仅列出在后台当中暂停(stop)的工作
　显示说明
　+ 最近放到后台的工作号码
　- 倒数第二个被放到后台的工作号码
　[] 中的数字就是job number
bg   %  job编号		//让送往后台的作业继续在后台运行   
fg   %  job编号		//将后台作业调回前台	
kill  -信号  %  job编号		//终止指定的作业
　1 （SIGHUP） 在不重启进程的情况下，重读配置文件
　2 （SIGINT）中断进程，相当于CTRL+C
　9 （SIGKILL）立即强制杀死一个进程
　15 （SIGTERM）以正常方式终止进程。kill默认用此信号终止进程。
killall 进程名		//杀死同一进程组内的所有进程
top  //进程实时监控 
## LAMP搭建(Linux+Apache+MySql+PHP)
>1.安装apache

yum  install  httpd
>2.启动apahce 

service  httpd  start
>3.检查 浏览器访问IP

若失败：
查看端口信息
netstat  -antp
关闭防火墙
service  iptables  stop
或使防火墙开放80端口
修改vi /etc/sysconfig/iptables命令添加使防火墙开放80端口
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
/var/www/html/
>4.安装PHP

yum  install  php  	//主程序
yum  install  php-mysql  php-gd	//扩展模块
php  –v	//查看版本信息
php  -m	//查看安装好的模块信息
yum  install  php-fpm	//安装
service  php-fpm  start	//启动服务(端口默认为9000)
代码需放在/var/www/html下
>5.安装MySql

yum  install  mysql-server  //安装mysql
service  mysqld  start		//启动mysql

**设密码**
设置root密码，无密码不能远程连接（默认可能无密码）
```
# mysqladmin -u root -p password 123456     ###设置root密码为123456
```
**若忘记密码，改密码**
```
# /etc/init.d/mysqld stop 
# mysqld_safe --user=mysql --skip-grant-tables --skip-networking & 
# mysql -u root mysql 
mysql> UPDATE user SET Password=PASSWORD(’新密码’) where USER=’root’; 
mysql> FLUSH PRIVILEGES; 
mysql> quit 
# /etc/init.d/mysqld restart 
# mysql -uroot -p 
Enter password: <输入新设的密码newpassword> 
mysql> 
```

**ERROR 1130: Host xxx.xxx.xxx.xxx is not allowed to connect to this MySQL server 是无法给远程连接的用户权限问题.**
```
mysql>GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'123456\' WITH GRANT OPTION;
mysql>flush privileges;
```
**远程连接**
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180117/HBhdFgD231.png)
***
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/IFh6554lFI.png)

## CentOS6.5升级PHP到5.6
>1.首先先看下已安装的版本：

yum list installed | grep php

```
//可以看到我的都是5.3的
php.x86_64              5.3.3-48.el6_8  @updates
php-cli.x86_64          5.3.3-48.el6_8  @updates
php-common.x86_64       5.3.3-48.el6_8  @updates
php-fpm.x86_64          5.3.3-48.el6_8  @updates
php-gd.x86_64           5.3.3-48.el6_8  @updates
php-mysql.x86_64        5.3.3-48.el6_8  @updates
php-pdo.x86_64          5.3.3-48.el6_8  @updates
```
>2.升级之前需要卸载一下旧版本，不卸载直接安装新版会提示失败：

yum remove php php-common
我的就卸载了以上两个就ok了

>3.然后更新一下yum源：

rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm
>4.最后安装 5.6版 php 和 php-fpm 以及一些其他扩展，按需选择

yum install php56w php56w-fpm php56w-mysql php56w-mbstring php56w-gd php56w-dom

其中 php-fpm 是 nginx 里要用的 fast-cgi 进程管理器，重新安装后可能还需要重启一下fpm
/etc/init.d/php-fpm restart

**注：如果要升级php7，把上面命令中的 php56w 改为 php70w 即可**
## 虚拟主机
>1.修改Apache配置文件

vi  /etc/httpd/conf/httpd.conf

NameVirtualHost *:80 //解开注释
```
<VirtualHost *:80>
 #ServerAdmin shaosijai@qq.com
 DocumentRoot /home/www.a.com/html
 ServerName www.a.com
 #ErrorLog /home/www.a.com/logs/error_log
 #CustomLog /home/www.a.com/logs/access_log common
</VirtualHost>
<VirtualHost *:80>
 #ServerAdmin shaosijai@qq.com
 DocumentRoot /home/www.b.com/html
 ServerName www.b.com
 #ErrorLog /home/www.b.com/logs/error_log
 #CustomLog /home/www.b.com/logs/access_log common
</VirtualHost>
```
>2.创建相应的目录

mkdir -p /home/www.a.com/html
mkdir -p /home/www.a.com/logs
mkdir -p /home/www.b.com/logs
mkdir -p /home/www.b.com/html
>3.编写测试页面

cd  /home/www.a.com/html/
echo "hello a" > index.html
cd  /home/www.b.com/html/
echo "hello b" > index.html
>4.修改hosts文件(域名解析)

vi  /etc/hosts
192.168.36.129 www.a.com
192.168.36.129 www.b.com
>5.关闭

setenforce  0
## 杂
>查看版本信息

cat /etc/issue

>执行等级：

/etc目录下通常有rc0.d-rc6.d目录，里面对应包含了从init0-init6不同运行级所要启动的命令，rc.d目录下有8个目录和3个文件，其中目录为rc0.d-rc6.d，分别代表了各个run-level的脚本，目录中文件名称均以S及K开头，后接两位数字与该服务名称，这些文件都是link文件，指向/etc/rc.d/init.d目录。在rc3.d目录中，以S开头的文件为执行该服务，以K开头的文件则是杀掉该服务的意思。数字代表启动顺序。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/gj7F6J9F2m.png)
cat  /etc/inittab
等级0表示：表示关机
等级1表示：单用户模式
等级2表示：无网络连接的多用户命令行模式
等级3表示：有网络连接的多用户命令行模式
等级4表示：不可用
等级5表示：带图形界面的多用户模式
等级6表示：重新启动
init  1~5 		//切换执行等级
runlevel		//查看当前运行级别
>切换界面：

ctrl+alt+F1	--图形化界面
ctrl+alt+F3	--命令界面
>查看硬件设备：

lspci		//显示所有的pci设备信息
>设置语言：

LANG="zh_CN.UTF-8"
LANG="en_US"
>显示日期：

date
>显示日历：

cal
>计算器软件：

bc
>软连接和硬链接  *：

ln  f1  f2     #创建f1的一个硬连接文件f2
ln  -s  f1  f3   #创建f1的一个符号连接文件f3
>系统服务

chkconfig  	//更新（启动或停止）和查询系统服务的运行级信息
>查看是否安装软件

rpm  -qa|grep  http	//是否安装http相关的软件
>查看端口信息

netstat  -antp
>历史命令

history',
  'groups' => 'Linux',
  'id' => '113',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000565s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001134s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000450s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000753s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Linux' LIMIT 1 [ RunTime:0.000260s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000269s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=113,`p_id`=2,`title`='Linux 常用命令\r',`content`='# Linux 常用命令\r\n[TOC]\r\n## 文件操作\r\n>文件类型：\r\n\r\nd	目录\r\n\\-	文件\r\nl	连接文件\r\nb	设备文件里的可供存储的接口设备\r\nc	设备文件里的串行端口设备(如鼠标，键盘)\r\n>查看文件内容：\r\n\r\ncat\r\n　-n	//加行号\r\ntac  //反向列示\r\nnl 		//添加行号打印\r\n>翻页查看：\r\n\r\nmore	//不能向前翻页\r\nless\r\nhead  -n  20  demo.txt	//取出前面20行\r\ntail  -n  20  demo.txt	//取出后面20行\r\nod		//非纯文本\r\n>创建文件夹： mkdir\r\n\r\n>创建文件或修改文件时间： touch\r\n\r\n>删除文件： rm		 \r\n\r\nrm  -rf  test\r\n>删除空的目录：rmdir\r\n\r\n>移动文件：mv\r\n\r\nmv  文件名  新文件名		//改文件名\r\n>复制文件：cp\r\n\r\ncp  源文件  目标文件\r\ncp  -a  源文件  目标文件\r\n>命令查看文件时3个时间点解析  * stat\r\n\r\n>列出文件 ls\r\n\r\nls  -l\r\n>取得路径的文件名与目录名称\r\n\r\nbasename  /etc/sysconfig/network		//文件名\r\n==》network\r\ndirname  /etc/sysconfig/network		//目录名\r\n==》/etc/sysconfig \r\n>查找：\r\n\r\nfind  /  -name  filename\r\n## 文件权限\r\n>查看用户文件权限 \r\n\r\nls  -l  -d  xx\r\n>文件默认权限：umask\r\n\r\n>文件隐藏属性：\r\n\r\nchattr	//设置\r\nlsattr	//显示\r\n\r\n>文件特殊权限：\r\n\r\nSUID	4\r\nSGID	2\r\nSBIT	1\r\nchmod  4755  filename\r\n\r\n>chgrp	 改变文件所属用户组：\r\n\r\nchgrp  组名  文件名\r\n>chown  改变文件所有者：\r\n\r\nchown  bin  test  //将 test 的拥有者改为 bin 这个账号\r\n>chmod  改变文件的权限：\r\n\r\nr = 4\r\nw = 2\r\nx = 1\r\nu 所属用户 g 所属用户组 o 其他用户\r\nchmod  u=rw,g-r,o+w  demo.txt\r\nchmod  -R  777  demo.txt \r\n## 账号管理\r\n>新增用户\r\n\r\nuseradd 用户名\r\n>设置密码\r\n\r\npasswd 用户名\r\n>查询用户\r\n\r\nwho\r\n>用户对谈\r\n\r\nwrite  用户名 pts/x\r\nmesg  n	//不接收消息\r\n>建立用户组\r\n\r\ngroupadd 组名\r\n>将用户加入到组\r\n\r\ngpasswd –a 用户名  组名  \r\n>从组中删除用户\r\n\r\ngpasswd –d 用户名  组名  \r\n>查看用户属于某组\r\n\r\ngroups  用户名\r\n>删除用户组\r\n\r\ngroupdel  组名\r\n## 压缩与解压缩\r\n>.zip\r\n\r\n解压：unzip  FileName.zip\r\n压缩：zip -r FileName.zip  DirName\r\n## Vim\r\n:set  nu		//显示行号\r\n:set  nonu		//取消显示行号\r\n>移动光标：\r\n\r\nG		//移动到文件最后一行\r\nnG		//移动到文件的第n行\r\n20j		//向下20行   \r\nn-		//向上跳n行   \r\n20gg		//跳到20行   \r\n>复制，粘贴，删除：\r\n\r\nyy		//复制光标所在行\r\nnyy		//复制光标所在向下n行\r\n\r\np(P)	//粘贴到下(上)一行\r\n\r\ndd		//删除光标所在行\r\nNdd		//删除光标所在行以下的N行\r\n>查找替换：\r\n\r\n/word		//向下查找word\r\n?word		//向上查找word\r\nn		//重复前一个查找动作\r\nN		//反向重复前一个查找动作\r\n>保存，离开：\r\n\r\n:wq		//保存后离开\r\n:q!		//不保存离开\r\n## 正则表达式\r\ngrep\r\n##yum\r\n-y	//自动选择y，全自动\r\n>查看可用的仓库：\r\n\r\nyum  repolist\r\nyum  repolist  enabled \r\nyum  repolist  all\r\nyum  repolist  disabled\r\n>安装软件：\r\n\r\nyum  install  xxx\r\nyum  localinstall 安装本地的RPM包\r\nyum　reinstall  [RPM包] 重新安装包\r\n>更新软件包：\r\n\r\nyum  check-update	//检查可更新的rpm包\r\nyum  update	//更新所有的rpm包\r\nyum  update  kernel  kernel-source//更新指定的rpm包,如更新kernel和kernel source\r\n>删除软件：\r\n\r\nyum  remove  xxx\r\nyum  erase  xxx\r\nyum  -y  remove  httpd*  //卸载多个相类似的软件\r\nyum  -y  remove  httpd php php-gd mysql //卸载多个非类似软件时\r\n>查询软件信息：\r\n\r\nyum  search  XXX	//会搜索所有可用rpm的描述\r\n>软件包列表：\r\n\r\nyum  list  all 	//列出所有可安装的软件包\r\nyum  list  available 		//仓库中没有安装的  \r\nyum  list  installed  	//已经安装的\r\nyum  list  updates  	//可用的升级\r\nyum  list  extras		//列出所有已安装但不在仓库內的软件包\r\n>查找软件包中的文件：\r\n\r\nyum  provides  /etc/inittab		//查看哪个软件包提供了指定的功能\r\n>依赖关系：\r\n\r\nyum  deplist  XXX	 //列出包的依赖\r\n>清除YUM缓存：\r\n\r\nyum会把下载的软件包和header存储在cache中，而不会自动删除。\r\nyum  clean  headers	 //清除headers\r\nyum  clean  packages 	//清除下载的rpm包\r\nyum clean all   //一股脑儿端\r\n>软件组：\r\n\r\nyum  grouplist\r\nyum  groupinstalll  \"Development Tools\"\r\n## 网络配置\r\n>网络服务：\r\n\r\nservice  network  start		//启动network服务\r\nservice  network  stop		//关闭network服务 \r\nservice  network  restart	//重启network服务\r\nchkconfig  --level  234  服务名  on	/off		// 设置服务在运行级别为2、3、4、的情况下都是on（开启）的状态(在系统启动时生效，并不是立即生效的)\r\n>网络设备命名：\r\n\r\nlo 回环设备\r\neth0 系统内第一块以太网卡\r\nppp0 系统内第一个串行设备(多数出现在使用ADSL拨入Internet时)\r\n>网络配置：\r\n\r\nifconfig		//暂时的网络配置\r\nifconfig   -a 		//查看所有网卡IP\r\nifconfig  eth0 	//查看特定网卡IP\r\nifup  eth0 		//打开网络\r\nifdown  eth0		//关闭网络\r\nifconfig  eth0  192.168.120.56  netmask  255.255.255.0  broadcast 192.168.120.255		//手动设置IP\r\n>修改网卡配置文件:  /etc/sysconfig/network-scripts/ifcfg-ethX\r\n\r\nBOOTPROTO=static 	#协议类型 dhcp bootp none\r\nIPADDR=192.168.1.90 	#网络IP地址\r\nNETMASK=255.255.255.0 	#网络子网地址\r\nGATEWAY=192.168.1.1 	#网关地址\r\nBROADCAST=192.168.1.255 	#广播地址\r\nHWADDR=00:0C:29:FE:1A:09	#网卡MAC地址\r\n>修改主机名：\r\n\r\n临时修改\r\nhostname  主机名\r\n永久修改\r\n编辑主机名配置文件文件（/etc/sysconfig/network）；\r\n同时修改/etc/hosts文件（ip与域名的对应关系）\r\n>DNS客户端配置:\r\n\r\n编辑/etc/hosts\r\n本地域名解析数据文件\r\n在DNS被检索前先查询\r\n编辑/etc/resolv.conf\r\n添加dns服务器 nameserver xx.xx.xx.xx\r\n如果指定多台nameserver，系统会按照次序检索服务器\r\n## 进程管理\r\nps			//查看进程\r\n　-l 仅查看自己bash相关进程\r\n　a 显示与终端有关的所有进程（包括其他用户的进程）\r\n　r 只显示正在运行的进程。显示运行中的进程;\r\n　x 显示与终端无关的进程（服务程序）。\r\n　u 有效用户（effective user）相关的进程；按用户名和启动时间的顺序来显示进程;\r\nps  -l  仅查看自己bash相关进程，输出项含义：\r\n　F ：进程标识（Flag）。4表示进程的权限是root，1表示此子进程仅可进行fork而无法实际exec\r\n　S：进程状态\r\n　UID/PID/PPID：用户ID，进程ID，父进程ID\r\n　C：CPU使用率\r\n　PRI/NI：Priority/Nice 优先级。值越小则越快被CPU执行。\r\n　ADDR：该进程在内存的哪部分，如果是running的进程，会是“-”。\r\n　SZ：进程用掉的内存。\r\n　WCHAN：目前进程是否运行，“-”表示正在运行中。\r\n　TTY：登录者终端机位置。tty1-tty6是本地登录；若是远程登陆则使用动态终端接口（pts/n）。\r\n　TIME:花费CPU运行的时间\r\nps aux 输出项含义：\r\n　USER PID %CPU  %MEM  VSZ  RSS  TTY STAT START TIME COMMAND\r\n　USER：进程所有者。\r\n　PID：进程号。\r\n　%CPU：占用的 CPU 使用率。\r\n　%MEM：占用的内存使用率。\r\n　VSZ：占用的虚拟内存大小。该进程用掉的虚拟内存（KB）\r\n　RSS：占用的内存大小。该进程占用的固定的内存量（KB）\r\n　TTY：终端的次设备号码。\r\n　STAT：该进程的状态。\r\n　START：进程开始时间。\r\n　TIME：执行的时间。\r\n　COMMAND：所执行的命令\r\nctrl + z		//将一个正在运行的前台进程丢入后台,并默认暂停\r\nctrl + d 	//终止一个正在前台运行的进程（还有正常含义）\r\nctrl + c 	//终止一个正在前台运行的进程（还有强制含义）\r\n命令 & 	//在后台运行命令，在该控制台退出后，进程会挂断\r\nnohup  command  & 		//将一个进程直接丢入后台运行，而且在该控制台退出后，进程仍不挂断\r\njobs 		//显示后台作业和被挂起的进程\r\n　-l 列出job number之外，同时列出PID号码\r\n　-r 仅仅列出正在后台运行(run)的工作\r\n　-s 仅仅列出在后台当中暂停(stop)的工作\r\n　显示说明\r\n　+ 最近放到后台的工作号码\r\n　- 倒数第二个被放到后台的工作号码\r\n　[] 中的数字就是job number\r\nbg   %  job编号		//让送往后台的作业继续在后台运行   \r\nfg   %  job编号		//将后台作业调回前台	\r\nkill  -信号  %  job编号		//终止指定的作业\r\n　1 （SIGHUP） 在不重启进程的情况下，重读配置文件\r\n　2 （SIGINT）中断进程，相当于CTRL+C\r\n　9 （SIGKILL）立即强制杀死一个进程\r\n　15 （SIGTERM）以正常方式终止进程。kill默认用此信号终止进程。\r\nkillall 进程名		//杀死同一进程组内的所有进程\r\ntop  //进程实时监控 \r\n## LAMP搭建(Linux+Apache+MySql+PHP)\r\n>1.安装apache\r\n\r\nyum  install  httpd\r\n>2.启动apahce \r\n\r\nservice  httpd  start\r\n>3.检查 浏览器访问IP\r\n\r\n若失败：\r\n查看端口信息\r\nnetstat  -antp\r\n关闭防火墙\r\nservice  iptables  stop\r\n或使防火墙开放80端口\r\n修改vi /etc/sysconfig/iptables命令添加使防火墙开放80端口\r\n-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n/var/www/html/\r\n>4.安装PHP\r\n\r\nyum  install  php  	//主程序\r\nyum  install  php-mysql  php-gd	//扩展模块\r\nphp  –v	//查看版本信息\r\nphp  -m	//查看安装好的模块信息\r\nyum  install  php-fpm	//安装\r\nservice  php-fpm  start	//启动服务(端口默认为9000)\r\n代码需放在/var/www/html下\r\n>5.安装MySql\r\n\r\nyum  install  mysql-server  //安装mysql\r\nservice  mysqld  start		//启动mysql\r\n\r\n**设密码**\r\n设置root密码，无密码不能远程连接（默认可能无密码）\r\n```\r\n# mysqladmin -u root -p password 123456     ###设置root密码为123456\r\n```\r\n**若忘记密码，改密码**\r\n```\r\n# /etc/init.d/mysqld stop \r\n# mysqld_safe --user=mysql --skip-grant-tables --skip-networking & \r\n# mysql -u root mysql \r\nmysql> UPDATE user SET Password=PASSWORD(’新密码’) where USER=’root’; \r\nmysql> FLUSH PRIVILEGES; \r\nmysql> quit \r\n# /etc/init.d/mysqld restart \r\n# mysql -uroot -p \r\nEnter password: <输入新设的密码newpassword> \r\nmysql> \r\n```\r\n\r\n**ERROR 1130: Host xxx.xxx.xxx.xxx is not allowed to connect to this MySQL server 是无法给远程连接的用户权限问题.**\r\n```\r\nmysql>GRANT ALL PRIVILEGES ON *.* TO \'root\'@\'%\' IDENTIFIED BY \'123456\' WITH GRANT OPTION;\r\nmysql>flush privileges;\r\n```\r\n**远程连接**\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180117/HBhdFgD231.png)\r\n***\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/IFh6554lFI.png)\r\n\r\n## CentOS6.5升级PHP到5.6\r\n>1.首先先看下已安装的版本：\r\n\r\nyum list installed | grep php\r\n\r\n```\r\n//可以看到我的都是5.3的\r\nphp.x86_64              5.3.3-48.el6_8  @updates\r\nphp-cli.x86_64          5.3.3-48.el6_8  @updates\r\nphp-common.x86_64       5.3.3-48.el6_8  @updates\r\nphp-fpm.x86_64          5.3.3-48.el6_8  @updates\r\nphp-gd.x86_64           5.3.3-48.el6_8  @updates\r\nphp-mysql.x86_64        5.3.3-48.el6_8  @updates\r\nphp-pdo.x86_64          5.3.3-48.el6_8  @updates\r\n```\r\n>2.升级之前需要卸载一下旧版本，不卸载直接安装新版会提示失败：\r\n\r\nyum remove php php-common\r\n我的就卸载了以上两个就ok了\r\n\r\n>3.然后更新一下yum源：\r\n\r\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\r\nrpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm\r\n>4.最后安装 5.6版 php 和 php-fpm 以及一些其他扩展，按需选择\r\n\r\nyum install php56w php56w-fpm php56w-mysql php56w-mbstring php56w-gd php56w-dom\r\n\r\n其中 php-fpm 是 nginx 里要用的 fast-cgi 进程管理器，重新安装后可能还需要重启一下fpm\r\n/etc/init.d/php-fpm restart\r\n\r\n**注：如果要升级php7，把上面命令中的 php56w 改为 php70w 即可**\r\n## 虚拟主机\r\n>1.修改Apache配置文件\r\n\r\nvi  /etc/httpd/conf/httpd.conf\r\n\r\nNameVirtualHost *:80 //解开注释\r\n```\r\n<VirtualHost *:80>\r\n #ServerAdmin shaosijai@qq.com\r\n DocumentRoot /home/www.a.com/html\r\n ServerName www.a.com\r\n #ErrorLog /home/www.a.com/logs/error_log\r\n #CustomLog /home/www.a.com/logs/access_log common\r\n</VirtualHost>\r\n<VirtualHost *:80>\r\n #ServerAdmin shaosijai@qq.com\r\n DocumentRoot /home/www.b.com/html\r\n ServerName www.b.com\r\n #ErrorLog /home/www.b.com/logs/error_log\r\n #CustomLog /home/www.b.com/logs/access_log common\r\n</VirtualHost>\r\n```\r\n>2.创建相应的目录\r\n\r\nmkdir -p /home/www.a.com/html\r\nmkdir -p /home/www.a.com/logs\r\nmkdir -p /home/www.b.com/logs\r\nmkdir -p /home/www.b.com/html\r\n>3.编写测试页面\r\n\r\ncd  /home/www.a.com/html/\r\necho \"hello a\" > index.html\r\ncd  /home/www.b.com/html/\r\necho \"hello b\" > index.html\r\n>4.修改hosts文件(域名解析)\r\n\r\nvi  /etc/hosts\r\n192.168.36.129 www.a.com\r\n192.168.36.129 www.b.com\r\n>5.关闭\r\n\r\nsetenforce  0\r\n## 杂\r\n>查看版本信息\r\n\r\ncat /etc/issue\r\n\r\n>执行等级：\r\n\r\n/etc目录下通常有rc0.d-rc6.d目录，里面对应包含了从init0-init6不同运行级所要启动的命令，rc.d目录下有8个目录和3个文件，其中目录为rc0.d-rc6.d，分别代表了各个run-level的脚本，目录中文件名称均以S及K开头，后接两位数字与该服务名称，这些文件都是link文件，指向/etc/rc.d/init.d目录。在rc3.d目录中，以S开头的文件为执行该服务，以K开头的文件则是杀掉该服务的意思。数字代表启动顺序。\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/171214/gj7F6J9F2m.png)\r\ncat  /etc/inittab\r\n等级0表示：表示关机\r\n等级1表示：单用户模式\r\n等级2表示：无网络连接的多用户命令行模式\r\n等级3表示：有网络连接的多用户命令行模式\r\n等级4表示：不可用\r\n等级5表示：带图形界面的多用户模式\r\n等级6表示：重新启动\r\ninit  1~5 		//切换执行等级\r\nrunlevel		//查看当前运行级别\r\n>切换界面：\r\n\r\nctrl+alt+F1	--图形化界面\r\nctrl+alt+F3	--命令界面\r\n>查看硬件设备：\r\n\r\nlspci		//显示所有的pci设备信息\r\n>设置语言：\r\n\r\nLANG=\"zh_CN.UTF-8\"\r\nLANG=\"en_US\"\r\n>显示日期：\r\n\r\ndate\r\n>显示日历：\r\n\r\ncal\r\n>计算器软件：\r\n\r\nbc\r\n>软连接和硬链接  *：\r\n\r\nln  f1  f2     #创建f1的一个硬连接文件f2\r\nln  -s  f1  f3   #创建f1的一个符号连接文件f3\r\n>系统服务\r\n\r\nchkconfig  	//更新（启动或停止）和查询系统服务的运行级信息\r\n>查看是否安装软件\r\n\r\nrpm  -qa|grep  http	//是否安装http相关的软件\r\n>查看端口信息\r\n\r\nnetstat  -antp\r\n>历史命令\r\n\r\nhistory',`groups`='Linux'  WHERE  `id` = 113 [ RunTime:0.000810s ]
---------------------------------------------------------------
[ 2018-07-10T20:51:03+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/113.html
[ info ] qingrang.top/daily/admin/note/shownote/id/113.html [运行时间：0.041947s][吞吐率：23.84req/s] [内存消耗：2,003.54kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/113',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000496s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001009s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000401s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000807s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000231s ]
---------------------------------------------------------------
[ 2018-07-10T21:07:02+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.097570s][吞吐率：10.25req/s] [内存消耗：3,245.91kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000544s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001089s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002803s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000905s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000285s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000283s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000786s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000265s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000242s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000222s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000892s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000557s ]
---------------------------------------------------------------
[ 2018-07-10T21:07:26+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.107246s][吞吐率：9.32req/s] [内存消耗：3,245.91kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000613s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001187s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002928s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000967s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000307s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000368s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000292s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000867s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000301s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000313s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000327s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000279s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000249s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000888s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000675s ]
---------------------------------------------------------------
[ 2018-07-10T21:07:36+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/2.html
[ info ] qingrang.top/daily/admin/note/shownote/id/2.html [运行时间：0.042965s][吞吐率：23.27req/s] [内存消耗：1,972.84kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '2',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000465s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001037s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000340s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000831s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000347s ]
---------------------------------------------------------------
[ 2018-07-10T21:07:38+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.102896s][吞吐率：9.72req/s] [内存消耗：3,245.91kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000615s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001122s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002767s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000931s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000309s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000343s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000870s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000319s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000318s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000286s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000317s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000235s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000925s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000541s ]
---------------------------------------------------------------
[ 2018-07-10T21:07:53+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.041803s][吞吐率：23.92req/s] [内存消耗：2,081.25kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '107',
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000570s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001084s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 107 LIMIT 1 [ RunTime:0.000409s ]
---------------------------------------------------------------
[ 2018-07-10T21:07:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.092039s][吞吐率：10.86req/s] [内存消耗：3,245.91kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000439s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001054s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002397s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000947s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000334s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000720s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000252s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000266s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000248s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000266s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000210s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000788s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000516s ]
---------------------------------------------------------------
[ 2018-07-10T21:13:39+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.092034s][吞吐率：10.87req/s] [内存消耗：3,245.37kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000491s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001096s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002303s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000816s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000304s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000269s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000287s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000740s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000233s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000251s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000191s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000801s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000488s ]
---------------------------------------------------------------
[ 2018-07-10T21:17:42+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/ashownote2.html
[ info ] qingrang.top/daily/admin/note/ashownote2.html [运行时间：0.039729s][吞吐率：25.17req/s] [内存消耗：2,150.27kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'ashownote2',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '15',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groupname' => 'Linux',
)
[ info ] [ RUN ] app\admin\controller\Note->aShowNote2[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001034s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` = 'Linux' ORDER BY id desc [ RunTime:0.000741s ]
---------------------------------------------------------------
[ 2018-07-10T21:17:50+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/113
[ info ] qingrang.top/daily/admin/note/shownote/id/113 [运行时间：0.052023s][吞吐率：19.22req/s] [内存消耗：2,003.17kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '113',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000596s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001141s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 113 LIMIT 1 [ RunTime:0.000443s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000713s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000238s ]
---------------------------------------------------------------
[ 2018-07-10T21:21:53+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.047635s][吞吐率：20.99req/s] [内存消耗：2,015.25kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000516s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001267s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000338s ]
---------------------------------------------------------------
[ 2018-07-10T21:29:00+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.094683s][吞吐率：10.56req/s] [内存消耗：3,245.75kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000522s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001144s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002328s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000839s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000356s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000292s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000765s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000233s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000378s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000237s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000305s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000208s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000899s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000508s ]
---------------------------------------------------------------
[ 2018-07-10T21:29:39+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.045523s][吞吐率：21.97req/s] [内存消耗：2,188.40kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '22',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => '工具',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000513s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001052s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%工具%' OR `content` LIKE '%工具%' ) ORDER BY id desc [ RunTime:0.004741s ]
---------------------------------------------------------------
[ 2018-07-10T21:29:40+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.043938s][吞吐率：22.76req/s] [内存消耗：2,188.40kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '22',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => '工具',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000413s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001199s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%工具%' OR `content` LIKE '%工具%' ) ORDER BY id desc [ RunTime:0.004668s ]
---------------------------------------------------------------
[ 2018-07-10T21:29:43+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/173
[ info ] qingrang.top/daily/admin/note/editNote/id/173 [运行时间：0.048400s][吞吐率：20.66req/s] [内存消耗：2,021.66kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531214115097; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '173',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000550s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001066s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 173 LIMIT 1 [ RunTime:0.000369s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000806s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000271s ]
---------------------------------------------------------------
[ 2018-07-10T21:31:02+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/173.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/173.html [运行时间：0.046797s][吞吐率：21.37req/s] [内存消耗：2,003.46kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '969',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/173',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 实用工具/网址
`工具` `软件` `常用网址`

[TOC]

## 破解资源
1. 八号站
http://www.ssdtop.com/

## 实用软件
### Windows
1. Windows 绝赞应用
https://amazing-apps.gitbooks.io/windows-apps-that-amaze-us/content/zh-CN/

1. windows 窗口标签化管理
- clover：在 win10 可能会出现卡顿现象
- qttabbar
https://www.xia1ge.com/qttabbar.html

### Android

## 翻墙
1. 镜像
https://github.com/aploium/zmirror',
  'groups' => 'Basics',
  'id' => '173',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000494s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001114s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 173 LIMIT 1 [ RunTime:0.000342s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000721s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000251s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000260s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=173,`p_id`=2,`title`='实用工具/网址\r',`content`='# 实用工具/网址\r\n`工具` `软件` `常用网址`\r\n\r\n[TOC]\r\n\r\n## 破解资源\r\n1. 八号站\r\nhttp://www.ssdtop.com/\r\n\r\n## 实用软件\r\n### Windows\r\n1. Windows 绝赞应用\r\nhttps://amazing-apps.gitbooks.io/windows-apps-that-amaze-us/content/zh-CN/\r\n\r\n1. windows 窗口标签化管理\r\n- clover：在 win10 可能会出现卡顿现象\r\n- qttabbar\r\nhttps://www.xia1ge.com/qttabbar.html\r\n\r\n### Android\r\n\r\n## 翻墙\r\n1. 镜像\r\nhttps://github.com/aploium/zmirror',`groups`='Basics'  WHERE  `id` = 173 [ RunTime:0.000427s ]
---------------------------------------------------------------
[ 2018-07-10T21:31:02+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/173.html
[ info ] qingrang.top/daily/admin/note/shownote/id/173.html [运行时间：0.042510s][吞吐率：23.52req/s] [内存消耗：1,973.65kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editNote/id/173',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '173',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000428s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001018s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 173 LIMIT 1 [ RunTime:0.000320s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000691s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000242s ]
---------------------------------------------------------------
[ 2018-07-10T21:31:13+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/173.html
[ info ] qingrang.top/daily/admin/note/editnote/id/173.html [运行时间：0.041809s][吞吐率：23.92req/s] [内存消耗：2,021.25kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '173',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000496s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001016s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 173 LIMIT 1 [ RunTime:0.000315s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000760s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000262s ]
---------------------------------------------------------------
[ 2018-07-10T21:31:19+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/173.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/173.html [运行时间：0.046257s][吞吐率：21.62req/s] [内存消耗：2,003.41kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '963',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/173.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# 实用工具/网址
`工具` `软件` `常用网址`

[TOC]
## 破解资源
1. 八号站
http://www.ssdtop.com/

## 实用软件
### Windows
1. Windows 绝赞应用
https://amazing-apps.gitbooks.io/windows-apps-that-amaze-us/content/zh-CN/

1. windows 窗口标签化管理
- clover：在 win10 可能会出现卡顿现象
- qttabbar
https://www.xia1ge.com/qttabbar.html

### Android

## 翻墙
1. 镜像
https://github.com/aploium/zmirror',
  'groups' => 'Basics',
  'id' => '173',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000461s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001062s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 173 LIMIT 1 [ RunTime:0.000357s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000708s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000250s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000236s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=173,`p_id`=2,`title`='实用工具/网址\r',`content`='# 实用工具/网址\r\n`工具` `软件` `常用网址`\r\n\r\n[TOC]\r\n## 破解资源\r\n1. 八号站\r\nhttp://www.ssdtop.com/\r\n\r\n## 实用软件\r\n### Windows\r\n1. Windows 绝赞应用\r\nhttps://amazing-apps.gitbooks.io/windows-apps-that-amaze-us/content/zh-CN/\r\n\r\n1. windows 窗口标签化管理\r\n- clover：在 win10 可能会出现卡顿现象\r\n- qttabbar\r\nhttps://www.xia1ge.com/qttabbar.html\r\n\r\n### Android\r\n\r\n## 翻墙\r\n1. 镜像\r\nhttps://github.com/aploium/zmirror',`groups`='Basics'  WHERE  `id` = 173 [ RunTime:0.000441s ]
---------------------------------------------------------------
[ 2018-07-10T21:31:20+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/173.html
[ info ] qingrang.top/daily/admin/note/shownote/id/173.html [运行时间：0.041246s][吞吐率：24.24req/s] [内存消耗：1,973.85kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/173.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '173',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000461s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001072s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 173 LIMIT 1 [ RunTime:0.000341s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000699s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000233s ]
---------------------------------------------------------------
[ 2018-07-10T21:31:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.091432s][吞吐率：10.94req/s] [内存消耗：3,245.78kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000493s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001107s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002528s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000777s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000271s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000291s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000275s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000697s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000246s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000296s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000281s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000294s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000199s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000788s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000569s ]
---------------------------------------------------------------
[ 2018-07-10T21:39:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/newedit.html
[ info ] qingrang.top/daily/admin/note/newedit.html [运行时间：0.041670s][吞吐率：24.00req/s] [内存消耗：2,015.15kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'newedit',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->newEdit[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/newedit.html [ array (
  0 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000566s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001092s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000252s ]
---------------------------------------------------------------
[ 2018-07-10T21:45:15+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.046418s][吞吐率：21.54req/s] [内存消耗：2,030.96kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5459',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## 理解 OAuth
在理解 OAuth 之前，需要说明几个名词：

- Client：第三方应用程序，就是本文中的客户端
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。
',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000551s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001088s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## 理解 OAuth\n在理解 OAuth 之前，需要说明几个名词：\n\n- Client：第三方应用程序，就是本文中的客户端\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000423s ]
---------------------------------------------------------------
[ 2018-07-10T21:45:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.042574s][吞吐率：23.49req/s] [内存消耗：2,031.04kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '5471',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## 理解 OAuth
在理解 OAuth 之前，需要说明几个名词：

- Client：第三方应用程序，就是本文中的客户端
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。




',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000492s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001074s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## 理解 OAuth\n在理解 OAuth 之前，需要说明几个名词：\n\n- Client：第三方应用程序，就是本文中的客户端\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n\n\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000400s ]
---------------------------------------------------------------
[ 2018-07-10T21:45:47+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/addnote.html
[ info ] qingrang.top/daily/admin/note/addnote.html [运行时间：0.053396s][吞吐率：18.73req/s] [内存消耗：1,960.23kb] [文件加载：53]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'addnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12109',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'groups' => 'Basics',
  'content' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## 理解 OAuth
在理解 OAuth 之前，需要说明几个名词：

- Client：第三方应用程序，就是本文中的客户端
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。




',
  'test-editormd-html-code' => '<h1 id="h1-oauth-2-0-"><a name="OAuth 2.0 理解" class="reference-link"></a><span class="header-link octicon octicon-link"></span>OAuth 2.0 理解</h1><h2 id="h2-oauth-"><a name="OAuth 简介" class="reference-link"></a><span class="header-link octicon octicon-link"></span>OAuth 简介</h2><p>OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。</p>
<p>OAuth 做到了一下这两点：</p>
<ul>
<li>不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源</li><li>每一个令牌授权一个特定的应用在特定的时段内访问特定的资源</li></ul>
<h2 id="h2-u5E94u7528u573Au666F"><a name="应用场景" class="reference-link"></a><span class="header-link octicon octicon-link"></span>应用场景</h2><p>OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：</p>
<ul>
<li>第三方客户端为了后续的服务，会保存用户的密码，这样不安全</li><li>第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期</li><li>用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效</li></ul>
<p>除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。</p>
<h2 id="h2--oauth"><a name="理解 OAuth" class="reference-link"></a><span class="header-link octicon octicon-link"></span>理解 OAuth</h2><p>在理解 OAuth 之前，需要说明几个名词：</p>
<ul>
<li>Client：第三方应用程序，就是本文中的客户端</li><li>Resource owner : 资源所有者，本文中称为”yonghu”。</li><li>Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器</li><li>Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。</li></ul>
',
)
[ info ] [ RUN ] app\admin\controller\Note->addNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000609s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.001281s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000399s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000327s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001029s ]
[ sql ] [ SQL ] INSERT INTO `note` (`title` , `content` , `groups` , `p_id` , `date`) VALUES ('OAuth 2.0 理解\r' , '# OAuth 2.0 理解\r\n\r\n## OAuth 简介\r\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\r\n\r\nOAuth 做到了一下这两点：\r\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\r\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\r\n\r\n## 应用场景\r\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\r\n\r\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\r\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\r\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\r\n\r\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\r\n\r\n## 理解 OAuth\r\n在理解 OAuth 之前，需要说明几个名词：\r\n\r\n- Client：第三方应用程序，就是本文中的客户端\r\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\r\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\r\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\r\n\r\n\r\n\r\n\r\n' , 'Basics' , 2 , '2018-07-10') [ RunTime:0.000517s ]
---------------------------------------------------------------
[ 2018-07-10T21:45:48+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.093160s][吞吐率：10.73req/s] [内存消耗：3,256.30kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000454s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001156s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002583s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000863s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000277s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000310s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000274s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000766s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000287s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000302s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000253s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000270s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000197s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000815s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000637s ]
---------------------------------------------------------------
[ 2018-07-10T21:45:52+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/192.html
[ info ] qingrang.top/daily/admin/note/editnote/id/192.html [运行时间：0.046446s][吞吐率：21.53req/s] [内存消耗：2,022.98kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000471s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001038s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000342s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000809s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000292s ]
---------------------------------------------------------------
[ 2018-07-10T21:58:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.047230s][吞吐率：21.17req/s] [内存消耗：2,035.89kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '6868',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000474s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001174s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000469s ]
---------------------------------------------------------------
[ 2018-07-10T22:47:36+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.048514s][吞吐率：20.61req/s] [内存消耗：2,038.30kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '7587',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)


',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000518s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001252s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000626s ]
---------------------------------------------------------------
[ 2018-07-10T22:47:38+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.043565s][吞吐率：22.95req/s] [内存消耗：2,038.27kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '7587',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)


',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000432s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001141s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000420s ]
---------------------------------------------------------------
[ 2018-07-10T22:47:41+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.045406s][吞吐率：22.02req/s] [内存消耗：1,975.62kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000442s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001106s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000375s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000784s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000414s ]
---------------------------------------------------------------
[ 2018-07-10T22:51:23+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.042977s][吞吐率：23.27req/s] [内存消耗：2,042.06kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '8477',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)
我们可以看到跳转到的授权 URL 是这样的：

`https://www.example.com/authorizeclient_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b`

',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000494s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001134s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n我们可以看到跳转到的授权 URL 是这样的：\n\n`https://www.example.com/authorizeclient_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b`\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000465s ]
---------------------------------------------------------------
[ 2018-07-10T22:51:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.042641s][吞吐率：23.45req/s] [内存消耗：1,976.30kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000447s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001054s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000397s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000732s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000262s ]
---------------------------------------------------------------
[ 2018-07-10T22:54:33+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.046587s][吞吐率：21.47req/s] [内存消耗：2,046.04kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '9704',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)
我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击



',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000556s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001122s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000504s ]
---------------------------------------------------------------
[ 2018-07-10T22:54:40+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/192.html
[ info ] qingrang.top/daily/admin/note/editnote/id/192.html [运行时间：0.046802s][吞吐率：21.37req/s] [内存消耗：2,023.30kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531234439184; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000467s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001100s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000338s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000795s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000271s ]
---------------------------------------------------------------
[ 2018-07-10T22:56:52+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.043265s][吞吐率：23.11req/s] [内存消耗：2,052.59kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '11515',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)
我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000468s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001262s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000626s ]
---------------------------------------------------------------
[ 2018-07-10T22:56:55+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/192.html
[ info ] qingrang.top/daily/admin/note/editnote/id/192.html [运行时间：0.051847s][吞吐率：19.29req/s] [内存消耗：2,023.30kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531234439184; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000533s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001095s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000623s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000992s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000293s ]
---------------------------------------------------------------
[ 2018-07-10T22:58:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/192.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/192.html [运行时间：0.046927s][吞吐率：21.31req/s] [内存消耗：2,048.05kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12962',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)
我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
  'groups' => 'Basics',
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000503s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001162s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000369s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000714s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000278s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000238s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=192,`p_id`=2,`title`='OAuth 2.0 理解\r',`content`='# OAuth 2.0 理解\r\n\r\n## OAuth 简介\r\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\r\n\r\nOAuth 做到了一下这两点：\r\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\r\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\r\n\r\n## 应用场景\r\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\r\n\r\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\r\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\r\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\r\n\r\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\r\n\r\n## OAuth 2.0 的运行流程\r\n名词解释：\r\n\r\n- Client：第三方应用程序\r\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\r\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\r\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\r\n\r\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\r\n\r\n## 客户端的授权模式\r\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\r\n\r\n- 授权码模式（authorization code）\r\n- 简化模式（implicit）\r\n- 密码模式（resource owner password credentials）\r\n- 客户端模式（client credentials）\r\n\r\n### 授权码模式\r\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\r\n\r\n>以微博授权为例\r\n\r\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\r\n我们可以看到跳转到的授权 URL 是这样的：\r\n```\r\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\r\n```\r\n\r\n- https://api.weibo.com/oauth2/authorize ：认证服务器\r\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\r\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\r\n- response_type ： 表明授权类型，默认是 code，即授权码模式\r\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\r\n\r\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\r\n\r\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\r\n\r\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\r\n\r\n```\r\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\r\n```\r\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\r\n- clientid ：clientid 用于验证应用程序。\r\n- clientsecret：clientsecret 用于验证应用程序。\r\n- grant_type ：刚刚获得的授权码\r\n- redirect_uri ：重定向URI，和第一步一致\r\n\r\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\r\n```\r\n{\r\n	\"access_token\":\"ACCESS_TOKEN\",   \r\n	\"token_type\":\"bearer\",   \r\n	\"expires_in\":2592000,   \r\n	\"refresh_token\":\"REFRESH_TOKEN\"\r\n}\r\n```\r\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\r\n\r\n- access_token：访问令牌\r\n- token_type ：令牌类型\r\n- expires_in ：过期时间，单位为秒\r\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Basics'  WHERE  `id` = 192 [ RunTime:0.000759s ]
---------------------------------------------------------------
[ 2018-07-10T22:58:59+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/192.html
[ info ] qingrang.top/daily/admin/note/shownote/id/192.html [运行时间：0.044805s][吞吐率：22.32req/s] [内存消耗：1,978.45kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000450s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001112s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000391s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000764s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000272s ]
---------------------------------------------------------------
[ 2018-07-10T22:59:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/192.html
[ info ] qingrang.top/daily/admin/note/shownote/id/192.html [运行时间：0.048185s][吞吐率：20.75req/s] [内存消耗：1,978.45kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000517s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001107s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000379s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000862s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000349s ]
---------------------------------------------------------------
[ 2018-07-10T23:00:14+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/192.html
[ info ] qingrang.top/daily/admin/note/editnote/id/192.html [运行时间：0.046203s][吞吐率：21.64req/s] [内存消耗：2,025.90kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531234728169; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000522s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001044s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000341s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000752s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000238s ]
---------------------------------------------------------------
[ 2018-07-10T23:00:25+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.042243s][吞吐率：23.67req/s] [内存消耗：2,057.04kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12689',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。
![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000471s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001045s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000506s ]
---------------------------------------------------------------
[ 2018-07-10T23:00:29+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.042570s][吞吐率：23.49req/s] [内存消耗：1,978.10kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000481s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001171s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000377s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000701s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000240s ]
---------------------------------------------------------------
[ 2018-07-10T23:00:43+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.044349s][吞吐率：22.55req/s] [内存消耗：2,056.81kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12692',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000450s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001071s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000650s ]
---------------------------------------------------------------
[ 2018-07-10T23:01:07+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.043977s][吞吐率：22.74req/s] [内存消耗：2,056.78kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12692',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000501s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001022s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000447s ]
---------------------------------------------------------------
[ 2018-07-10T23:01:09+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.044755s][吞吐率：22.34req/s] [内存消耗：1,978.10kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000425s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001108s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000428s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000850s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000236s ]
---------------------------------------------------------------
[ 2018-07-10T23:01:58+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.042994s][吞吐率：23.26req/s] [内存消耗：2,056.96kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12680',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
`
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
`

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000504s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001024s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n`\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n`\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000520s ]
---------------------------------------------------------------
[ 2018-07-10T23:02:00+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.045180s][吞吐率：22.13req/s] [内存消耗：1,978.08kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000486s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001244s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000386s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000741s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000308s ]
---------------------------------------------------------------
[ 2018-07-10T23:02:12+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.043072s][吞吐率：23.22req/s] [内存消耗：2,056.81kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12692',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解

## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000465s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001029s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000497s ]
---------------------------------------------------------------
[ 2018-07-10T23:04:39+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.049063s][吞吐率：20.38req/s] [内存消耗：2,057.09kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '12701',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解
[TOC]
## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000796s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001643s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n[TOC]\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000720s ]
---------------------------------------------------------------
[ 2018-07-10T23:04:42+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.047997s][吞吐率：20.83req/s] [内存消耗：1,978.10kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000538s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001261s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000447s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000742s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000261s ]
---------------------------------------------------------------
[ 2018-07-10T23:12:51+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.047634s][吞吐率：20.99req/s] [内存消耗：2,067.21kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '15835',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解
[TOC]
## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌

### 简化模式
简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)

>例子

- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：

`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`

- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：

`https://www.example.com/callback#token=ACCESS_TOKEN`

- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值
- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌
- 浏览器执行上一步获得的脚本并且取出令牌
- 浏览器将令牌发送给客户端',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000544s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001923s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n[TOC]\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌\n\n### 简化模式\n简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)\n\n>例子\n\n- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：\n\n`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`\n\n- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：\n\n`https://www.example.com/callback#token=ACCESS_TOKEN`\n\n- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值\n- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌\n- 浏览器执行上一步获得的脚本并且取出令牌\n- 浏览器将令牌发送给客户端',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000567s ]
---------------------------------------------------------------
[ 2018-07-10T23:21:19+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.049264s][吞吐率：20.30req/s] [内存消耗：1,979.25kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000576s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001356s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000401s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000829s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000252s ]
---------------------------------------------------------------
[ 2018-07-10T23:21:29+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.070743s][吞吐率：14.14req/s] [内存消耗：2,075.08kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '18353',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解
[TOC]
## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌

### 简化模式
简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)

>例子

- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：

`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`

- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：

`https://www.example.com/callback#token=ACCESS_TOKEN`

- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值
- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌
- 浏览器执行上一步获得的脚本并且取出令牌
- 浏览器将令牌发送给客户端

### 密码模式
用户向客户端提供自己的用户名和密码。客户端使用这些信息，向「服务商提供商」索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。如下图：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/2i2e1dLI16.png)

### 客户端模式
客户端使用自己的名义而不是用户的名义，向「服务提供商」进行认证。在这种模式下，用户直接向客户端注册，客户端以自己的名义要求服务提供商提供服务，其实并不存在授权。如下图：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/6A3IGaEEgB.png)
',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000665s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001745s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n[TOC]\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌\n\n### 简化模式\n简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)\n\n>例子\n\n- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：\n\n`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`\n\n- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：\n\n`https://www.example.com/callback#token=ACCESS_TOKEN`\n\n- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值\n- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌\n- 浏览器执行上一步获得的脚本并且取出令牌\n- 浏览器将令牌发送给客户端\n\n### 密码模式\n用户向客户端提供自己的用户名和密码。客户端使用这些信息，向「服务商提供商」索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。如下图：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/2i2e1dLI16.png)\n\n### 客户端模式\n客户端使用自己的名义而不是用户的名义，向「服务提供商」进行认证。在这种模式下，用户直接向客户端注册，客户端以自己的名义要求服务提供商提供服务，其实并不存在授权。如下图：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/6A3IGaEEgB.png)\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000806s ]
---------------------------------------------------------------
[ 2018-07-10T23:21:31+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/1.html
[ info ] qingrang.top/daily/admin/note/shownote/id/1.html [运行时间：0.043902s][吞吐率：22.78req/s] [内存消耗：1,980.14kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '1',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000428s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001014s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000403s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000718s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000247s ]
---------------------------------------------------------------
[ 2018-07-10T23:24:14+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/savenote.html
[ info ] qingrang.top/daily/admin/note/savenote.html [运行时间：0.045826s][吞吐率：21.82req/s] [内存消耗：2,083.03kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'savenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '20938',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded; charset=UTF-8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'ogroup' => 'Default',
  'context' => '# OAuth 2.0 理解
[TOC]
## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌

### 简化模式
简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)

>例子

- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：

`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`

- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：

`https://www.example.com/callback#token=ACCESS_TOKEN`

- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值
- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌
- 浏览器执行上一步获得的脚本并且取出令牌
- 浏览器将令牌发送给客户端

### 密码模式
用户向客户端提供自己的用户名和密码。客户端使用这些信息，向「服务商提供商」索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。如下图：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/2i2e1dLI16.png)

### 客户端模式
客户端使用自己的名义而不是用户的名义，向「服务提供商」进行认证。在这种模式下，用户直接向客户端注册，客户端以自己的名义要求服务提供商提供服务，其实并不存在授权。如下图：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/6A3IGaEEgB.png)

对于这种方式，用在访问一些和用户无关的公共接口，比如一些首页数据，这些数据和用户无关，但是又不想任何人都可以调用这个 Api，那么就可以采用这种模式。

## 刷新令牌
认证服务器颁发的令牌是有有效期限制的，所以客户端需要自行去刷新令牌。如果用户访问的时候，客户端的「访问令牌」已经过期，则需要使用「更新令牌」申请一个新的访问令牌。客户端通过一个POST 请求并且携带上参数：

客户端发出更新令牌的HTTP请求，包含以下参数：
- granttype：表示使用的授权模式，此处的值固定为"refreshtoken"，必选项。
- refresh_token：表示早前收到的更新令牌，必选项。
- scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。
',
)
[ info ] [ RUN ] app\admin\controller\Note->saveNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000522s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001197s ]
[ sql ] [ SQL ] UPDATE `note`  SET `title`='OAuth 2.0 理解',`content`='# OAuth 2.0 理解\n[TOC]\n## OAuth 简介\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\n\nOAuth 做到了一下这两点：\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\n\n## 应用场景\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\n\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\n\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\n\n## OAuth 2.0 的运行流程\n名词解释：\n\n- Client：第三方应用程序\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\n\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\n\n## 客户端的授权模式\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\n\n- 授权码模式（authorization code）\n- 简化模式（implicit）\n- 密码模式（resource owner password credentials）\n- 客户端模式（client credentials）\n\n### 授权码模式\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\n\n>以微博授权为例\n\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\n\n我们可以看到跳转到的授权 URL 是这样的：\n```\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\n```\n\n- https://api.weibo.com/oauth2/authorize ：认证服务器\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\n- response_type ： 表明授权类型，默认是 code，即授权码模式\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\n\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\n\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\n\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\n\n```\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\n```\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\n- clientid ：clientid 用于验证应用程序。\n- clientsecret：clientsecret 用于验证应用程序。\n- grant_type ：刚刚获得的授权码\n- redirect_uri ：重定向URI，和第一步一致\n\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\n```\n{\n	\"access_token\":\"ACCESS_TOKEN\",   \n	\"token_type\":\"bearer\",   \n	\"expires_in\":2592000,   \n	\"refresh_token\":\"REFRESH_TOKEN\"\n}\n```\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\n\n- access_token：访问令牌\n- token_type ：令牌类型\n- expires_in ：过期时间，单位为秒\n- refresh_token： 更新令牌，用来获取下一次的访问令牌\n\n### 简化模式\n简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)\n\n>例子\n\n- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：\n\n`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`\n\n- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：\n\n`https://www.example.com/callback#token=ACCESS_TOKEN`\n\n- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值\n- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌\n- 浏览器执行上一步获得的脚本并且取出令牌\n- 浏览器将令牌发送给客户端\n\n### 密码模式\n用户向客户端提供自己的用户名和密码。客户端使用这些信息，向「服务商提供商」索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。如下图：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/2i2e1dLI16.png)\n\n### 客户端模式\n客户端使用自己的名义而不是用户的名义，向「服务提供商」进行认证。在这种模式下，用户直接向客户端注册，客户端以自己的名义要求服务提供商提供服务，其实并不存在授权。如下图：\n\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/6A3IGaEEgB.png)\n\n对于这种方式，用在访问一些和用户无关的公共接口，比如一些首页数据，这些数据和用户无关，但是又不想任何人都可以调用这个 Api，那么就可以采用这种模式。\n\n## 刷新令牌\n认证服务器颁发的令牌是有有效期限制的，所以客户端需要自行去刷新令牌。如果用户访问的时候，客户端的「访问令牌」已经过期，则需要使用「更新令牌」申请一个新的访问令牌。客户端通过一个POST 请求并且携带上参数：\n\n客户端发出更新令牌的HTTP请求，包含以下参数：\n- granttype：表示使用的授权模式，此处的值固定为\"refreshtoken\"，必选项。\n- refresh_token：表示早前收到的更新令牌，必选项。\n- scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。\n',`groups`='Default',`p_id`=1  WHERE  `id` = 1 [ RunTime:0.000564s ]
---------------------------------------------------------------
[ 2018-07-10T23:24:15+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/updatenote/id/192.html
[ info ] qingrang.top/daily/admin/note/updatenote/id/192.html [运行时间：0.046747s][吞吐率：21.39req/s] [内存消耗：2,077.37kb] [文件加载：56]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'updatenote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '21367',
  'cache-control' => 'max-age=0',
  'origin' => 'http://qingrang.top',
  'upgrade-insecure-requests' => '1',
  'content-type' => 'application/x-www-form-urlencoded',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'content' => '# OAuth 2.0 理解
[TOC]
## OAuth 简介
OAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。

OAuth 做到了一下这两点：
- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源
- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源

## 应用场景
OAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：

- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全
- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期
- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效

除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。

## OAuth 2.0 的运行流程
名词解释：

- Client：第三方应用程序
- Resource owner : 资源所有者，本文中称为"yonghu"。
- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器
- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)

上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。

## 客户端的授权模式
客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：

- 授权码模式（authorization code）
- 简化模式（implicit）
- 密码模式（resource owner password credentials）
- 客户端模式（client credentials）

### 授权码模式
授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与"服务提供商"的认证服务器进行互动。

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)

>以微博授权为例

首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)

我们可以看到跳转到的授权 URL 是这样的：
```
https://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b
```

- https://api.weibo.com/oauth2/authorize ：认证服务器
- client_id ：客户端的 client id，用于给认证服务器识别该客户端
- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址
- response_type ： 表明授权类型，默认是 code，即授权码模式
- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击

这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码

`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`

客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：

```
https://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL
```
- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址
- clientid ：clientid 用于验证应用程序。
- clientsecret：clientsecret 用于验证应用程序。
- grant_type ：刚刚获得的授权码
- redirect_uri ：重定向URI，和第一步一致

认证服务器确认无误后，向客户端发送访问令牌和更新令牌：
```
{
	"access_token":"ACCESS_TOKEN",   
	"token_type":"bearer",   
	"expires_in":2592000,   
	"refresh_token":"REFRESH_TOKEN"
}
```
这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：

- access_token：访问令牌
- token_type ：令牌类型
- expires_in ：过期时间，单位为秒
- refresh_token： 更新令牌，用来获取下一次的访问令牌

### 简化模式
简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)

>例子

- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：

`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`

- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：

`https://www.example.com/callback#token=ACCESS_TOKEN`

- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值
- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌
- 浏览器执行上一步获得的脚本并且取出令牌
- 浏览器将令牌发送给客户端

### 密码模式
用户向客户端提供自己的用户名和密码。客户端使用这些信息，向「服务商提供商」索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。如下图：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/2i2e1dLI16.png)

### 客户端模式
客户端使用自己的名义而不是用户的名义，向「服务提供商」进行认证。在这种模式下，用户直接向客户端注册，客户端以自己的名义要求服务提供商提供服务，其实并不存在授权。如下图：

![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/6A3IGaEEgB.png)

对于这种方式，用在访问一些和用户无关的公共接口，比如一些首页数据，这些数据和用户无关，但是又不想任何人都可以调用这个 Api，那么就可以采用这种模式。

## 刷新令牌
认证服务器颁发的令牌是有有效期限制的，所以客户端需要自行去刷新令牌。如果用户访问的时候，客户端的「访问令牌」已经过期，则需要使用「更新令牌」申请一个新的访问令牌。客户端通过一个POST 请求并且携带上参数：

客户端发出更新令牌的HTTP请求，包含以下参数：
- granttype：表示使用的授权模式，此处的值固定为"refreshtoken"，必选项。
- refresh_token：表示早前收到的更新令牌，必选项。
- scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。
',
  'groups' => 'Basics',
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->updateNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ CACHE ] INIT File
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000424s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001133s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000387s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000800s ]
[ sql ] [ SQL ] SELECT `parent_id` FROM `groups` WHERE  `groups` = 'Basics' LIMIT 1 [ RunTime:0.000294s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000282s ]
[ sql ] [ SQL ] UPDATE `note`  SET `id`=192,`p_id`=2,`title`='OAuth 2.0 理解\r',`content`='# OAuth 2.0 理解\r\n[TOC]\r\n## OAuth 简介\r\nOAuth 是一个用于定于授权的开放标准，目前已经发展到了 2.0 的版本。它可以让用户允许第三方应用程序访问该用户存储在某一个网站或者系统上面的资源(比如照片，联系人)而不用提供密码给该第三方应用程序，并且还可以限制权限和有效期。\r\n\r\nOAuth 做到了一下这两点：\r\n- 不需要将用户名和密码提供给第三方应用而是通过令牌让第三方应用访问资源\r\n- 每一个令牌授权一个特定的应用在特定的时段内访问特定的资源\r\n\r\n## 应用场景\r\nOAuth 的应用场景遍布互联网应用的方方面面，最典型的就是微博。比如我们在开发一个第三方的微博客户端，需要可以登录用户并且操作用户的一系列微博信息。最简单的办法就是把微博账号密码告诉这个第三方客户端，但是这样就会存在一系列的问题：\r\n\r\n- 第三方客户端为了后续的服务，会保存用户的密码，这样不安全\r\n- 第三方客户端拥有了客户微博的权力，用户没法限制授权的范围和有效期\r\n- 用户只有修改密码，才能收回权限，但是这样会使得其他的第三方应用程序失效\r\n\r\n除了这些还会导致只要有一个第三方应用程序被破解，就会导致用户密码泄漏，以及所有被密码保护的数据泄漏。而且 OAuth 就是来解决这个问题的。\r\n\r\n## OAuth 2.0 的运行流程\r\n名词解释：\r\n\r\n- Client：第三方应用程序\r\n- Resource owner : 资源所有者，本文中称为\"yonghu\"。\r\n- Authorization server ：认证服务器，服务提供商专门用来处理认证的服务器\r\n- Resource server：资源服务器，服务提供商存放用户生成的资源的服务器，它和认证服务器，可以是同一台服务器，也可以是不同的服务器。\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/7GbH6Da3Ff.png)\r\n\r\n上面六个步骤之中，B是关键，即用户怎样才能给于客户端授权。有了这个授权以后，客户端就可以获取令牌，进而凭令牌获取资源。下面一一讲解客户端获取授权的四种模式。\r\n\r\n## 客户端的授权模式\r\n客户端必须得到用户的授权（authorization grant），才能获得令牌（access token）。OAuth 2.0 定义了四种授权方式：\r\n\r\n- 授权码模式（authorization code）\r\n- 简化模式（implicit）\r\n- 密码模式（resource owner password credentials）\r\n- 客户端模式（client credentials）\r\n\r\n### 授权码模式\r\n授权码模式（authorization code）是功能最完整、流程最严密的授权模式。它的特点就是通过客户端的后台服务器，与\"服务提供商\"的认证服务器进行互动。\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/Dgk3bFD1eJ.png)\r\n\r\n>以微博授权为例\r\n\r\n首先用户打开客户端应用，这时候客户端要求进行授权并且会跳转到授权页面：\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/9FG34j8aIh.png)\r\n\r\n我们可以看到跳转到的授权 URL 是这样的：\r\n```\r\nhttps://www.example.com/authorize?client_id=1881139527&redirect_uri=http%3A%2F%2Fwww.jianshu.com%2Fusers%2Fauth%2Fweibo%2Fcallback&response_type=code&state=f2d53629dd57f670e56b4ded85e2c8c5ad50514a66b44a4b\r\n```\r\n\r\n- https://api.weibo.com/oauth2/authorize ：认证服务器\r\n- client_id ：客户端的 client id，用于给认证服务器识别该客户端\r\n- redirect_uri ：获得授权码之后，认证服务器重定向用户代理（比如浏览器）的地址\r\n- response_type ： 表明授权类型，默认是 code，即授权码模式\r\n- state：表示客户端的当前状态，可以指定任意值，认证服务器会原封不动地返回这个值，用于抵御 CSRF 攻击\r\n\r\n这时候用户同意进行授权，认证服务器将用户跳转到客户端事先指定的 redirect_uri, 同时附上一个授权码\r\n\r\n`http://www.jianshu.com/users/auth/weibo/callback?code=AUTHORIZATION_CODE`\r\n\r\n客户端收到授权码，附上之前的 redirect_uri 向认证服务器申请令牌,这一步是在客户端的后台服务器上完成的，对用户不可见。比如：\r\n\r\n```\r\nhttps://www.example.com/v1/oauth/token?client_id=CLIENT_ID&client_secret=CLIENT_SECRET&grant_type=authorization_code&code=AUTHORIZATION_CODE&redirect_url=REDIRECT_URL\r\n```\r\n- https://api.weibo.com/v1/oauth2/authorize ：获取 access_token 的服务器地址\r\n- clientid ：clientid 用于验证应用程序。\r\n- clientsecret：clientsecret 用于验证应用程序。\r\n- grant_type ：刚刚获得的授权码\r\n- redirect_uri ：重定向URI，和第一步一致\r\n\r\n认证服务器确认无误后，向客户端发送访问令牌和更新令牌：\r\n```\r\n{\r\n	\"access_token\":\"ACCESS_TOKEN\",   \r\n	\"token_type\":\"bearer\",   \r\n	\"expires_in\":2592000,   \r\n	\"refresh_token\":\"REFRESH_TOKEN\"\r\n}\r\n```\r\n这个返回的包括了以下这些，有些还有包含一个权限范围 scope，这里不撰述：\r\n\r\n- access_token：访问令牌\r\n- token_type ：令牌类型\r\n- expires_in ：过期时间，单位为秒\r\n- refresh_token： 更新令牌，用来获取下一次的访问令牌\r\n\r\n### 简化模式\r\n简化模式不通过第三方应用程序的服务器，直接在浏览器中向认证服务器申请令牌，跳过了授权码这个步骤，所有步骤在浏览器中完成，令牌对访问者是可见的，且客户端不需要认证。这种模式一般是用于手机应用，桌面客户端应用程序和运行于浏览器上的 Web 应用程序, 授权令牌会交给用户代理，再由用户代理交给应用程序。如下图:\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/c83Lfk17DD.png)\r\n\r\n>例子\r\n\r\n- 首先用户访问客户端，客户端将用户导向认证服务器, 并且用户选择同意授权：\r\n\r\n`https://www.example.com/authorize?response_type=token&client_id=CLIENT_ID&redirect_uri=CALLBACK_URL`\r\n\r\n- 认证服务器将用重定向客户端事先指定的 URI，并且在 URI 的 hash 部分包含了访问令牌：\r\n\r\n`https://www.example.com/callback#token=ACCESS_TOKEN`\r\n\r\n- 浏览器向资源服务器发出请求，其中不包括上一步收到的 hash 值\r\n- 资源服务器返回一个网页，其中包含的代码可以获取 hash 值中的令牌\r\n- 浏览器执行上一步获得的脚本并且取出令牌\r\n- 浏览器将令牌发送给客户端\r\n\r\n### 密码模式\r\n用户向客户端提供自己的用户名和密码。客户端使用这些信息，向「服务商提供商」索要授权。在这种模式中，用户必须把自己的密码给客户端，但是客户端不得储存密码。这通常用在用户对客户端高度信任的情况下，比如客户端是操作系统的一部分，或者由一个著名公司出品。而认证服务器只有在其他授权模式无法执行的情况下，才能考虑使用这种模式。如下图：\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/2i2e1dLI16.png)\r\n\r\n### 客户端模式\r\n客户端使用自己的名义而不是用户的名义，向「服务提供商」进行认证。在这种模式下，用户直接向客户端注册，客户端以自己的名义要求服务提供商提供服务，其实并不存在授权。如下图：\r\n\r\n![mark](http://p0tymq1rr.bkt.clouddn.com/daily/180710/6A3IGaEEgB.png)\r\n\r\n对于这种方式，用在访问一些和用户无关的公共接口，比如一些首页数据，这些数据和用户无关，但是又不想任何人都可以调用这个 Api，那么就可以采用这种模式。\r\n\r\n## 刷新令牌\r\n认证服务器颁发的令牌是有有效期限制的，所以客户端需要自行去刷新令牌。如果用户访问的时候，客户端的「访问令牌」已经过期，则需要使用「更新令牌」申请一个新的访问令牌。客户端通过一个POST 请求并且携带上参数：\r\n\r\n客户端发出更新令牌的HTTP请求，包含以下参数：\r\n- granttype：表示使用的授权模式，此处的值固定为\"refreshtoken\"，必选项。\r\n- refresh_token：表示早前收到的更新令牌，必选项。\r\n- scope：表示申请的授权范围，不可以超出上一次申请的范围，如果省略该参数，则表示与上一次一致。\r\n',`groups`='Basics'  WHERE  `id` = 192 [ RunTime:0.000514s ]
---------------------------------------------------------------
[ 2018-07-10T23:24:16+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/192.html
[ info ] qingrang.top/daily/admin/note/shownote/id/192.html [运行时间：0.048068s][吞吐率：20.80req/s] [内存消耗：1,981.46kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/editnote/id/192.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '192',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000550s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001189s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 192 LIMIT 1 [ RunTime:0.000400s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000705s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000251s ]
---------------------------------------------------------------
[ 2018-07-10T23:24:49+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.103822s][吞吐率：9.63req/s] [内存消耗：3,274.64kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000629s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001058s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.003633s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001251s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000346s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000332s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000253s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000846s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000270s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000276s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000259s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000293s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000216s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000966s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000535s ]
---------------------------------------------------------------
[ 2018-07-10T23:26:08+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.093947s][吞吐率：10.64req/s] [内存消耗：3,274.64kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/admin/note/newedit.html',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000522s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001021s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002638s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000815s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000307s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000290s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000338s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000783s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000262s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000288s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000299s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000287s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000217s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000903s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000539s ]
---------------------------------------------------------------
[ 2018-07-10T23:26:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.107127s][吞吐率：9.33req/s] [内存消耗：3,274.08kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => 'OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000557s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001122s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.003074s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.001014s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000330s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000373s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000307s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000880s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000235s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000280s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000251s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000266s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000289s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.001008s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000576s ]
---------------------------------------------------------------
[ 2018-07-10T23:27:06+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/
[ info ] qingrang.top/daily/ [运行时间：0.101982s][吞吐率：9.81req/s] [内存消耗：3,274.50kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => '',
    1 => NULL,
    2 => NULL,
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'cache-control' => 'max-age=0',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->notelst[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/notelst.html [ array (
  0 => 'autoSave',
  1 => 'phoneSave',
  2 => 'hide',
  3 => 'list',
  4 => 'groups',
  5 => 'groups0',
  6 => 'groups1',
  7 => 'groups2',
  8 => 'count',
  9 => 'year',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000593s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001151s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `groups` <> 'Essay' ORDER BY id desc [ RunTime:0.002496s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `config` [ RunTime:0.000875s ]
[ sql ] [ SQL ] SELECT * FROM `config` WHERE  `name` = 'hide' LIMIT 1 [ RunTime:0.000312s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 1 LIMIT 1 [ RunTime:0.000350s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 2 LIMIT 1 [ RunTime:0.000282s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000736s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000287s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 0 ORDER BY `g_order` [ RunTime:0.000306s ]
[ sql ] [ SQL ] SELECT `groups` FROM `groups` WHERE  `parent_id` = 1 [ RunTime:0.000246s ]
[ sql ] [ SQL ] SELECT * FROM `groups` WHERE  `parent_id` = 2 ORDER BY `g_order` [ RunTime:0.000328s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000198s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `yearlist` [ RunTime:0.000883s ]
[ sql ] [ SQL ] SELECT DISTINCT  `year` FROM `yearlist` ORDER BY year desc [ RunTime:0.000518s ]
---------------------------------------------------------------
[ 2018-07-10T23:27:12+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/getcount.html
[ info ] qingrang.top/daily/admin/note/getcount.html [运行时间：0.041729s][吞吐率：23.96req/s] [内存消耗：1,942.03kb] [文件加载：52]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'getcount',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '0',
  'accept' => 'text/plain, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
)
[ info ] [ RUN ] app\admin\controller\Note->getCount[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000412s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001025s ]
[ sql ] [ SQL ] SELECT COUNT(*) AS tp_count FROM `note` LIMIT 1 [ RunTime:0.000236s ]
---------------------------------------------------------------
[ 2018-07-10T23:27:41+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/asearch.html
[ info ] qingrang.top/daily/admin/note/asearch.html [运行时间：0.044375s][吞吐率：22.54req/s] [内存消耗：2,087.51kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'asearch',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '7',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'key' => 'vps',
)
[ info ] [ RUN ] app\admin\controller\Note->aSearch[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000481s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001022s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  ( `title` LIKE '%vps%' OR `content` LIKE '%vps%' ) ORDER BY id desc [ RunTime:0.005260s ]
---------------------------------------------------------------
[ 2018-07-10T23:27:43+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.038503s][吞吐率：25.97req/s] [内存消耗：2,082.83kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000407s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.000994s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000328s ]
---------------------------------------------------------------
[ 2018-07-10T23:27:48+08:00 ] 74.120.168.12 74.120.168.12 POST /daily/admin/note/noteview.html
[ info ] qingrang.top/daily/admin/note/noteview.html [运行时间：0.040916s][吞吐率：24.44req/s] [内存消耗：2,081.84kb] [文件加载：50]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'noteview',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'content-length' => '10',
  'accept' => 'application/json, text/javascript, */*; q=0.01',
  'origin' => 'http://qingrang.top',
  'x-requested-with' => 'XMLHttpRequest',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'content-type' => 'application/x-www-form-urlencoded',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'noteid' => '177',
)
[ info ] [ RUN ] app\admin\controller\Note->noteview[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000538s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001062s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 177 LIMIT 1 [ RunTime:0.000358s ]
---------------------------------------------------------------
[ 2018-07-10T23:27:51+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/shownote/id/190
[ info ] qingrang.top/daily/admin/note/shownote/id/190 [运行时间：0.048079s][吞吐率：20.80req/s] [内存消耗：1,976.63kb] [文件加载：54]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'shownote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531215716377; ___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->showNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/shownote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000484s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001085s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000370s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000786s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000261s ]
---------------------------------------------------------------
[ 2018-07-10T23:28:19+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editnote/id/190
[ info ] qingrang.top/daily/admin/note/editnote/id/190 [运行时间：0.043546s][吞吐率：22.96req/s] [内存消耗：2,024.44kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editnote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531236189660; ___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000484s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001073s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000362s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000740s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000264s ]
---------------------------------------------------------------
[ 2018-07-10T23:28:27+08:00 ] 74.120.168.12 74.120.168.12 GET /daily/admin/note/editNote/id/190
[ info ] qingrang.top/daily/admin/note/editNote/id/190 [运行时间：0.043436s][吞吐率：23.02req/s] [内存消耗：2,024.90kb] [文件加载：55]
[ info ] [ LANG ] /var/www/html/daily/thinkphp/lang/zh-cn.php
[ info ] [ ROUTE ] array (
  'type' => 'module',
  'module' => 
  array (
    0 => 'admin',
    1 => 'note',
    2 => 'editNote',
  ),
)
[ info ] [ HEADER ] array (
  'host' => 'qingrang.top',
  'upgrade-insecure-requests' => '1',
  'user-agent' => 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36',
  'accept' => 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
  'referer' => 'http://qingrang.top/daily/',
  'accept-encoding' => 'gzip, deflate',
  'accept-language' => 'zh-CN,zh;q=0.9',
  'cookie' => '___rl__test__cookies=1531214115097; ___rl__test__cookies=1531229247510; ___rl__test__cookies=1531236434019; OUTFOX_SEARCH_USER_ID_NCOO=300956949.4398302',
  'connection' => 'close',
)
[ info ] [ PARAM ] array (
  'id' => '190',
)
[ info ] [ RUN ] app\admin\controller\Note->editNote[ /var/www/html/daily/application/admin/controller/Note.php ]
[ info ] [ DB ] INIT mysql
[ info ] [ VIEW ] /var/www/html/daily/application/admin/view/note/editnote.html [ array (
  0 => 'note',
  1 => 'groups',
) ]
[ info ] [ LOG ] INIT File
[ sql ] [ DB ] CONNECT:[ UseTime:0.000460s ] mysql:host=74.120.168.12;dbname=diary;charset=utf8
[ sql ] [ SQL ] SHOW COLUMNS FROM `note` [ RunTime:0.001029s ]
[ sql ] [ SQL ] SELECT * FROM `note` WHERE  `id` = 190 LIMIT 1 [ RunTime:0.000391s ]
[ sql ] [ SQL ] SHOW COLUMNS FROM `groups` [ RunTime:0.000750s ]
[ sql ] [ SQL ] SELECT * FROM `groups` [ RunTime:0.000260s ]
